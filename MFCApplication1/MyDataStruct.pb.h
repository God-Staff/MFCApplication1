// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MyDataStruct.proto

#ifndef PROTOBUF_MyDataStruct_2eproto__INCLUDED
#define PROTOBUF_MyDataStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qiuwanli {
class AllFiles;
class AllFilesDefaultTypeInternal;
extern AllFilesDefaultTypeInternal _AllFiles_default_instance_;
class AllLog;
class AllLogDefaultTypeInternal;
extern AllLogDefaultTypeInternal _AllLog_default_instance_;
class BufferBlock;
class BufferBlockDefaultTypeInternal;
extern BufferBlockDefaultTypeInternal _BufferBlock_default_instance_;
class BufferBlockPool;
class BufferBlockPoolDefaultTypeInternal;
extern BufferBlockPoolDefaultTypeInternal _BufferBlockPool_default_instance_;
class FileBlockInfo;
class FileBlockInfoDefaultTypeInternal;
extern FileBlockInfoDefaultTypeInternal _FileBlockInfo_default_instance_;
class FileDownLog;
class FileDownLogDefaultTypeInternal;
extern FileDownLogDefaultTypeInternal _FileDownLog_default_instance_;
class FileDownLogFile;
class FileDownLogFileDefaultTypeInternal;
extern FileDownLogFileDefaultTypeInternal _FileDownLogFile_default_instance_;
class FileDownLogFiles;
class FileDownLogFilesDefaultTypeInternal;
extern FileDownLogFilesDefaultTypeInternal _FileDownLogFiles_default_instance_;
class FileDowningLog;
class FileDowningLogDefaultTypeInternal;
extern FileDowningLogDefaultTypeInternal _FileDowningLog_default_instance_;
class FileInfo;
class FileInfoDefaultTypeInternal;
extern FileInfoDefaultTypeInternal _FileInfo_default_instance_;
class FileInfoFile;
class FileInfoFileDefaultTypeInternal;
extern FileInfoFileDefaultTypeInternal _FileInfoFile_default_instance_;
class FileShared;
class FileSharedDefaultTypeInternal;
extern FileSharedDefaultTypeInternal _FileShared_default_instance_;
class FilesSharedLog;
class FilesSharedLogDefaultTypeInternal;
extern FilesSharedLogDefaultTypeInternal _FilesSharedLog_default_instance_;
class FriednList;
class FriednListDefaultTypeInternal;
extern FriednListDefaultTypeInternal _FriednList_default_instance_;
class LoginIpLogs;
class LoginIpLogsDefaultTypeInternal;
extern LoginIpLogsDefaultTypeInternal _LoginIpLogs_default_instance_;
class Logs;
class LogsDefaultTypeInternal;
extern LogsDefaultTypeInternal _Logs_default_instance_;
class MyFriend;
class MyFriendDefaultTypeInternal;
extern MyFriendDefaultTypeInternal _MyFriend_default_instance_;
class Path4FilesOrDir;
class Path4FilesOrDirDefaultTypeInternal;
extern Path4FilesOrDirDefaultTypeInternal _Path4FilesOrDir_default_instance_;
class RealUsers;
class RealUsersDefaultTypeInternal;
extern RealUsersDefaultTypeInternal _RealUsers_default_instance_;
class ServerLoginIPLog;
class ServerLoginIPLogDefaultTypeInternal;
extern ServerLoginIPLogDefaultTypeInternal _ServerLoginIPLog_default_instance_;
class ServerRealUser;
class ServerRealUserDefaultTypeInternal;
extern ServerRealUserDefaultTypeInternal _ServerRealUser_default_instance_;
class ServerUser;
class ServerUserDefaultTypeInternal;
extern ServerUserDefaultTypeInternal _ServerUser_default_instance_;
class Users;
class UsersDefaultTypeInternal;
extern UsersDefaultTypeInternal _Users_default_instance_;
class allfiles;
class allfilesDefaultTypeInternal;
extern allfilesDefaultTypeInternal _allfiles_default_instance_;
class files_small;
class files_smallDefaultTypeInternal;
extern files_smallDefaultTypeInternal _files_small_default_instance_;
class files_small_block;
class files_small_blockDefaultTypeInternal;
extern files_small_blockDefaultTypeInternal _files_small_block_default_instance_;
class filetemp;
class filetempDefaultTypeInternal;
extern filetempDefaultTypeInternal _filetemp_default_instance_;
class userreg;
class userregDefaultTypeInternal;
extern userregDefaultTypeInternal _userreg_default_instance_;
}  // namespace qiuwanli

namespace qiuwanli {

namespace protobuf_MyDataStruct_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_MyDataStruct_2eproto

// ===================================================================

class Users : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Users) */ {
 public:
  Users();
  virtual ~Users();

  Users(const Users& from);

  inline Users& operator=(const Users& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Users& default_instance();

  static inline const Users* internal_default_instance() {
    return reinterpret_cast<const Users*>(
               &_Users_default_instance_);
  }

  void Swap(Users* other);

  // implements Message ----------------------------------------------

  inline Users* New() const PROTOBUF_FINAL { return New(NULL); }

  Users* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Users& from);
  void MergeFrom(const Users& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Users* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string user_name = 2;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string user_password_md5 = 3;
  void clear_user_password_md5();
  static const int kUserPasswordMd5FieldNumber = 3;
  const ::std::string& user_password_md5() const;
  void set_user_password_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_user_password_md5(::std::string&& value);
  #endif
  void set_user_password_md5(const char* value);
  void set_user_password_md5(const char* value, size_t size);
  ::std::string* mutable_user_password_md5();
  ::std::string* release_user_password_md5();
  void set_allocated_user_password_md5(::std::string* user_password_md5);

  // string user_client_UUID = 4;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 4;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // string login_code = 5;
  void clear_login_code();
  static const int kLoginCodeFieldNumber = 5;
  const ::std::string& login_code() const;
  void set_login_code(const ::std::string& value);
  #if LANG_CXX11
  void set_login_code(::std::string&& value);
  #endif
  void set_login_code(const char* value);
  void set_login_code(const char* value, size_t size);
  ::std::string* mutable_login_code();
  ::std::string* release_login_code();
  void set_allocated_login_code(::std::string* login_code);

  // bytes user_type = 6;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 6;
  const ::std::string& user_type() const;
  void set_user_type(const ::std::string& value);
  #if LANG_CXX11
  void set_user_type(::std::string&& value);
  #endif
  void set_user_type(const char* value);
  void set_user_type(const void* value, size_t size);
  ::std::string* mutable_user_type();
  ::std::string* release_user_type();
  void set_allocated_user_type(::std::string* user_type);

  // @@protoc_insertion_point(class_scope:qiuwanli.Users)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr user_password_md5_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::internal::ArenaStringPtr login_code_;
  ::google::protobuf::internal::ArenaStringPtr user_type_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ServerUser) */ {
 public:
  ServerUser();
  virtual ~ServerUser();

  ServerUser(const ServerUser& from);

  inline ServerUser& operator=(const ServerUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerUser& default_instance();

  static inline const ServerUser* internal_default_instance() {
    return reinterpret_cast<const ServerUser*>(
               &_ServerUser_default_instance_);
  }

  void Swap(ServerUser* other);

  // implements Message ----------------------------------------------

  inline ServerUser* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerUser& from);
  void MergeFrom(const ServerUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Users user = 1;
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::qiuwanli::Users& user(int index) const;
  ::qiuwanli::Users* mutable_user(int index);
  ::qiuwanli::Users* add_user();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Users >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Users >&
      user() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.ServerUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Users > user_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RealUsers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.RealUsers) */ {
 public:
  RealUsers();
  virtual ~RealUsers();

  RealUsers(const RealUsers& from);

  inline RealUsers& operator=(const RealUsers& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealUsers& default_instance();

  static inline const RealUsers* internal_default_instance() {
    return reinterpret_cast<const RealUsers*>(
               &_RealUsers_default_instance_);
  }

  void Swap(RealUsers* other);

  // implements Message ----------------------------------------------

  inline RealUsers* New() const PROTOBUF_FINAL { return New(NULL); }

  RealUsers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RealUsers& from);
  void MergeFrom(const RealUsers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RealUsers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string user_name_real = 2;
  void clear_user_name_real();
  static const int kUserNameRealFieldNumber = 2;
  const ::std::string& user_name_real() const;
  void set_user_name_real(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name_real(::std::string&& value);
  #endif
  void set_user_name_real(const char* value);
  void set_user_name_real(const char* value, size_t size);
  ::std::string* mutable_user_name_real();
  ::std::string* release_user_name_real();
  void set_allocated_user_name_real(::std::string* user_name_real);

  // string user_idcard = 3;
  void clear_user_idcard();
  static const int kUserIdcardFieldNumber = 3;
  const ::std::string& user_idcard() const;
  void set_user_idcard(const ::std::string& value);
  #if LANG_CXX11
  void set_user_idcard(::std::string&& value);
  #endif
  void set_user_idcard(const char* value);
  void set_user_idcard(const char* value, size_t size);
  ::std::string* mutable_user_idcard();
  ::std::string* release_user_idcard();
  void set_allocated_user_idcard(::std::string* user_idcard);

  // string user_live_address = 4;
  void clear_user_live_address();
  static const int kUserLiveAddressFieldNumber = 4;
  const ::std::string& user_live_address() const;
  void set_user_live_address(const ::std::string& value);
  #if LANG_CXX11
  void set_user_live_address(::std::string&& value);
  #endif
  void set_user_live_address(const char* value);
  void set_user_live_address(const char* value, size_t size);
  ::std::string* mutable_user_live_address();
  ::std::string* release_user_live_address();
  void set_allocated_user_live_address(::std::string* user_live_address);

  // string user_phone = 5;
  void clear_user_phone();
  static const int kUserPhoneFieldNumber = 5;
  const ::std::string& user_phone() const;
  void set_user_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_user_phone(::std::string&& value);
  #endif
  void set_user_phone(const char* value);
  void set_user_phone(const char* value, size_t size);
  ::std::string* mutable_user_phone();
  ::std::string* release_user_phone();
  void set_allocated_user_phone(::std::string* user_phone);

  // string user_qq = 6;
  void clear_user_qq();
  static const int kUserQqFieldNumber = 6;
  const ::std::string& user_qq() const;
  void set_user_qq(const ::std::string& value);
  #if LANG_CXX11
  void set_user_qq(::std::string&& value);
  #endif
  void set_user_qq(const char* value);
  void set_user_qq(const char* value, size_t size);
  ::std::string* mutable_user_qq();
  ::std::string* release_user_qq();
  void set_allocated_user_qq(::std::string* user_qq);

  // string user_mirchat = 7;
  void clear_user_mirchat();
  static const int kUserMirchatFieldNumber = 7;
  const ::std::string& user_mirchat() const;
  void set_user_mirchat(const ::std::string& value);
  #if LANG_CXX11
  void set_user_mirchat(::std::string&& value);
  #endif
  void set_user_mirchat(const char* value);
  void set_user_mirchat(const char* value, size_t size);
  ::std::string* mutable_user_mirchat();
  ::std::string* release_user_mirchat();
  void set_allocated_user_mirchat(::std::string* user_mirchat);

  // string user_email = 8;
  void clear_user_email();
  static const int kUserEmailFieldNumber = 8;
  const ::std::string& user_email() const;
  void set_user_email(const ::std::string& value);
  #if LANG_CXX11
  void set_user_email(::std::string&& value);
  #endif
  void set_user_email(const char* value);
  void set_user_email(const char* value, size_t size);
  ::std::string* mutable_user_email();
  ::std::string* release_user_email();
  void set_allocated_user_email(::std::string* user_email);

  // string user_bri = 9;
  void clear_user_bri();
  static const int kUserBriFieldNumber = 9;
  const ::std::string& user_bri() const;
  void set_user_bri(const ::std::string& value);
  #if LANG_CXX11
  void set_user_bri(::std::string&& value);
  #endif
  void set_user_bri(const char* value);
  void set_user_bri(const char* value, size_t size);
  ::std::string* mutable_user_bri();
  ::std::string* release_user_bri();
  void set_allocated_user_bri(::std::string* user_bri);

  // string user_address = 10;
  void clear_user_address();
  static const int kUserAddressFieldNumber = 10;
  const ::std::string& user_address() const;
  void set_user_address(const ::std::string& value);
  #if LANG_CXX11
  void set_user_address(::std::string&& value);
  #endif
  void set_user_address(const char* value);
  void set_user_address(const char* value, size_t size);
  ::std::string* mutable_user_address();
  ::std::string* release_user_address();
  void set_allocated_user_address(::std::string* user_address);

  // @@protoc_insertion_point(class_scope:qiuwanli.RealUsers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_real_;
  ::google::protobuf::internal::ArenaStringPtr user_idcard_;
  ::google::protobuf::internal::ArenaStringPtr user_live_address_;
  ::google::protobuf::internal::ArenaStringPtr user_phone_;
  ::google::protobuf::internal::ArenaStringPtr user_qq_;
  ::google::protobuf::internal::ArenaStringPtr user_mirchat_;
  ::google::protobuf::internal::ArenaStringPtr user_email_;
  ::google::protobuf::internal::ArenaStringPtr user_bri_;
  ::google::protobuf::internal::ArenaStringPtr user_address_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerRealUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ServerRealUser) */ {
 public:
  ServerRealUser();
  virtual ~ServerRealUser();

  ServerRealUser(const ServerRealUser& from);

  inline ServerRealUser& operator=(const ServerRealUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerRealUser& default_instance();

  static inline const ServerRealUser* internal_default_instance() {
    return reinterpret_cast<const ServerRealUser*>(
               &_ServerRealUser_default_instance_);
  }

  void Swap(ServerRealUser* other);

  // implements Message ----------------------------------------------

  inline ServerRealUser* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerRealUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerRealUser& from);
  void MergeFrom(const ServerRealUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerRealUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.RealUsers realuer = 1;
  int realuer_size() const;
  void clear_realuer();
  static const int kRealuerFieldNumber = 1;
  const ::qiuwanli::RealUsers& realuer(int index) const;
  ::qiuwanli::RealUsers* mutable_realuer(int index);
  ::qiuwanli::RealUsers* add_realuer();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::RealUsers >*
      mutable_realuer();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::RealUsers >&
      realuer() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.ServerRealUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::RealUsers > realuer_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class userreg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.userreg) */ {
 public:
  userreg();
  virtual ~userreg();

  userreg(const userreg& from);

  inline userreg& operator=(const userreg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const userreg& default_instance();

  static inline const userreg* internal_default_instance() {
    return reinterpret_cast<const userreg*>(
               &_userreg_default_instance_);
  }

  void Swap(userreg* other);

  // implements Message ----------------------------------------------

  inline userreg* New() const PROTOBUF_FINAL { return New(NULL); }

  userreg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const userreg& from);
  void MergeFrom(const userreg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(userreg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_name = 1;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string user_password_md5 = 2;
  void clear_user_password_md5();
  static const int kUserPasswordMd5FieldNumber = 2;
  const ::std::string& user_password_md5() const;
  void set_user_password_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_user_password_md5(::std::string&& value);
  #endif
  void set_user_password_md5(const char* value);
  void set_user_password_md5(const char* value, size_t size);
  ::std::string* mutable_user_password_md5();
  ::std::string* release_user_password_md5();
  void set_allocated_user_password_md5(::std::string* user_password_md5);

  // string user_phone = 3;
  void clear_user_phone();
  static const int kUserPhoneFieldNumber = 3;
  const ::std::string& user_phone() const;
  void set_user_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_user_phone(::std::string&& value);
  #endif
  void set_user_phone(const char* value);
  void set_user_phone(const char* value, size_t size);
  ::std::string* mutable_user_phone();
  ::std::string* release_user_phone();
  void set_allocated_user_phone(::std::string* user_phone);

  // string reg_code = 4;
  void clear_reg_code();
  static const int kRegCodeFieldNumber = 4;
  const ::std::string& reg_code() const;
  void set_reg_code(const ::std::string& value);
  #if LANG_CXX11
  void set_reg_code(::std::string&& value);
  #endif
  void set_reg_code(const char* value);
  void set_reg_code(const char* value, size_t size);
  ::std::string* mutable_reg_code();
  ::std::string* release_reg_code();
  void set_allocated_reg_code(::std::string* reg_code);

  // @@protoc_insertion_point(class_scope:qiuwanli.userreg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr user_password_md5_;
  ::google::protobuf::internal::ArenaStringPtr user_phone_;
  ::google::protobuf::internal::ArenaStringPtr reg_code_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginIpLogs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.LoginIpLogs) */ {
 public:
  LoginIpLogs();
  virtual ~LoginIpLogs();

  LoginIpLogs(const LoginIpLogs& from);

  inline LoginIpLogs& operator=(const LoginIpLogs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginIpLogs& default_instance();

  static inline const LoginIpLogs* internal_default_instance() {
    return reinterpret_cast<const LoginIpLogs*>(
               &_LoginIpLogs_default_instance_);
  }

  void Swap(LoginIpLogs* other);

  // implements Message ----------------------------------------------

  inline LoginIpLogs* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginIpLogs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginIpLogs& from);
  void MergeFrom(const LoginIpLogs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginIpLogs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string user_client_UUID = 4;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 4;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 logindate = 3;
  void clear_logindate();
  static const int kLogindateFieldNumber = 3;
  ::google::protobuf::uint64 logindate() const;
  void set_logindate(::google::protobuf::uint64 value);

  // uint32 loginip = 2;
  void clear_loginip();
  static const int kLoginipFieldNumber = 2;
  ::google::protobuf::uint32 loginip() const;
  void set_loginip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.LoginIpLogs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 logindate_;
  ::google::protobuf::uint32 loginip_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerLoginIPLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ServerLoginIPLog) */ {
 public:
  ServerLoginIPLog();
  virtual ~ServerLoginIPLog();

  ServerLoginIPLog(const ServerLoginIPLog& from);

  inline ServerLoginIPLog& operator=(const ServerLoginIPLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerLoginIPLog& default_instance();

  static inline const ServerLoginIPLog* internal_default_instance() {
    return reinterpret_cast<const ServerLoginIPLog*>(
               &_ServerLoginIPLog_default_instance_);
  }

  void Swap(ServerLoginIPLog* other);

  // implements Message ----------------------------------------------

  inline ServerLoginIPLog* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerLoginIPLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerLoginIPLog& from);
  void MergeFrom(const ServerLoginIPLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerLoginIPLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.LoginIpLogs loginliplog = 1;
  int loginliplog_size() const;
  void clear_loginliplog();
  static const int kLoginliplogFieldNumber = 1;
  const ::qiuwanli::LoginIpLogs& loginliplog(int index) const;
  ::qiuwanli::LoginIpLogs* mutable_loginliplog(int index);
  ::qiuwanli::LoginIpLogs* add_loginliplog();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::LoginIpLogs >*
      mutable_loginliplog();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::LoginIpLogs >&
      loginliplog() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.ServerLoginIPLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::LoginIpLogs > loginliplog_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Logs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Logs) */ {
 public:
  Logs();
  virtual ~Logs();

  Logs(const Logs& from);

  inline Logs& operator=(const Logs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Logs& default_instance();

  static inline const Logs* internal_default_instance() {
    return reinterpret_cast<const Logs*>(
               &_Logs_default_instance_);
  }

  void Swap(Logs* other);

  // implements Message ----------------------------------------------

  inline Logs* New() const PROTOBUF_FINAL { return New(NULL); }

  Logs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Logs& from);
  void MergeFrom(const Logs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Logs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string log_info = 3;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 3;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  #if LANG_CXX11
  void set_log_info(::std::string&& value);
  #endif
  void set_log_info(const char* value);
  void set_log_info(const char* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // bytes log_type = 4;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 4;
  const ::std::string& log_type() const;
  void set_log_type(const ::std::string& value);
  #if LANG_CXX11
  void set_log_type(::std::string&& value);
  #endif
  void set_log_type(const char* value);
  void set_log_type(const void* value, size_t size);
  ::std::string* mutable_log_type();
  ::std::string* release_log_type();
  void set_allocated_log_type(::std::string* log_type);

  // string user_client_UUID = 5;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 5;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 log_date = 2;
  void clear_log_date();
  static const int kLogDateFieldNumber = 2;
  ::google::protobuf::uint64 log_date() const;
  void set_log_date(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.Logs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::internal::ArenaStringPtr log_type_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 log_date_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.AllLog) */ {
 public:
  AllLog();
  virtual ~AllLog();

  AllLog(const AllLog& from);

  inline AllLog& operator=(const AllLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllLog& default_instance();

  static inline const AllLog* internal_default_instance() {
    return reinterpret_cast<const AllLog*>(
               &_AllLog_default_instance_);
  }

  void Swap(AllLog* other);

  // implements Message ----------------------------------------------

  inline AllLog* New() const PROTOBUF_FINAL { return New(NULL); }

  AllLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllLog& from);
  void MergeFrom(const AllLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Logs log = 2;
  int log_size() const;
  void clear_log();
  static const int kLogFieldNumber = 2;
  const ::qiuwanli::Logs& log(int index) const;
  ::qiuwanli::Logs* mutable_log(int index);
  ::qiuwanli::Logs* add_log();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
      mutable_log();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
      log() const;

  // string logdate = 1;
  void clear_logdate();
  static const int kLogdateFieldNumber = 1;
  const ::std::string& logdate() const;
  void set_logdate(const ::std::string& value);
  #if LANG_CXX11
  void set_logdate(::std::string&& value);
  #endif
  void set_logdate(const char* value);
  void set_logdate(const char* value, size_t size);
  ::std::string* mutable_logdate();
  ::std::string* release_logdate();
  void set_allocated_logdate(::std::string* logdate);

  // @@protoc_insertion_point(class_scope:qiuwanli.AllLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs > log_;
  ::google::protobuf::internal::ArenaStringPtr logdate_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilesSharedLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FilesSharedLog) */ {
 public:
  FilesSharedLog();
  virtual ~FilesSharedLog();

  FilesSharedLog(const FilesSharedLog& from);

  inline FilesSharedLog& operator=(const FilesSharedLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilesSharedLog& default_instance();

  static inline const FilesSharedLog* internal_default_instance() {
    return reinterpret_cast<const FilesSharedLog*>(
               &_FilesSharedLog_default_instance_);
  }

  void Swap(FilesSharedLog* other);

  // implements Message ----------------------------------------------

  inline FilesSharedLog* New() const PROTOBUF_FINAL { return New(NULL); }

  FilesSharedLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FilesSharedLog& from);
  void MergeFrom(const FilesSharedLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FilesSharedLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string shared_url = 1;
  void clear_shared_url();
  static const int kSharedUrlFieldNumber = 1;
  const ::std::string& shared_url() const;
  void set_shared_url(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_url(::std::string&& value);
  #endif
  void set_shared_url(const char* value);
  void set_shared_url(const char* value, size_t size);
  ::std::string* mutable_shared_url();
  ::std::string* release_shared_url();
  void set_allocated_shared_url(::std::string* shared_url);

  // string shared_ps = 2;
  void clear_shared_ps();
  static const int kSharedPsFieldNumber = 2;
  const ::std::string& shared_ps() const;
  void set_shared_ps(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_ps(::std::string&& value);
  #endif
  void set_shared_ps(const char* value);
  void set_shared_ps(const char* value, size_t size);
  ::std::string* mutable_shared_ps();
  ::std::string* release_shared_ps();
  void set_allocated_shared_ps(::std::string* shared_ps);

  // bytes shared_types = 5;
  void clear_shared_types();
  static const int kSharedTypesFieldNumber = 5;
  const ::std::string& shared_types() const;
  void set_shared_types(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_types(::std::string&& value);
  #endif
  void set_shared_types(const char* value);
  void set_shared_types(const void* value, size_t size);
  ::std::string* mutable_shared_types();
  ::std::string* release_shared_types();
  void set_allocated_shared_types(::std::string* shared_types);

  // uint64 shared_time = 3;
  void clear_shared_time();
  static const int kSharedTimeFieldNumber = 3;
  ::google::protobuf::uint64 shared_time() const;
  void set_shared_time(::google::protobuf::uint64 value);

  // uint32 shared_timelenth = 4;
  void clear_shared_timelenth();
  static const int kSharedTimelenthFieldNumber = 4;
  ::google::protobuf::uint32 shared_timelenth() const;
  void set_shared_timelenth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FilesSharedLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr shared_url_;
  ::google::protobuf::internal::ArenaStringPtr shared_ps_;
  ::google::protobuf::internal::ArenaStringPtr shared_types_;
  ::google::protobuf::uint64 shared_time_;
  ::google::protobuf::uint32 shared_timelenth_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MyFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.MyFriend) */ {
 public:
  MyFriend();
  virtual ~MyFriend();

  MyFriend(const MyFriend& from);

  inline MyFriend& operator=(const MyFriend& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyFriend& default_instance();

  static inline const MyFriend* internal_default_instance() {
    return reinterpret_cast<const MyFriend*>(
               &_MyFriend_default_instance_);
  }

  void Swap(MyFriend* other);

  // implements Message ----------------------------------------------

  inline MyFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  MyFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MyFriend& from);
  void MergeFrom(const MyFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MyFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string friendID = 1;
  void clear_friendid();
  static const int kFriendIDFieldNumber = 1;
  const ::std::string& friendid() const;
  void set_friendid(const ::std::string& value);
  #if LANG_CXX11
  void set_friendid(::std::string&& value);
  #endif
  void set_friendid(const char* value);
  void set_friendid(const char* value, size_t size);
  ::std::string* mutable_friendid();
  ::std::string* release_friendid();
  void set_allocated_friendid(::std::string* friendid);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:qiuwanli.MyFriend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr friendid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileShared : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileShared) */ {
 public:
  FileShared();
  virtual ~FileShared();

  FileShared(const FileShared& from);

  inline FileShared& operator=(const FileShared& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileShared& default_instance();

  static inline const FileShared* internal_default_instance() {
    return reinterpret_cast<const FileShared*>(
               &_FileShared_default_instance_);
  }

  void Swap(FileShared* other);

  // implements Message ----------------------------------------------

  inline FileShared* New() const PROTOBUF_FINAL { return New(NULL); }

  FileShared* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileShared& from);
  void MergeFrom(const FileShared& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileShared* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
  int sharedlog_size() const;
  void clear_sharedlog();
  static const int kSharedlogFieldNumber = 1;
  const ::qiuwanli::FilesSharedLog& sharedlog(int index) const;
  ::qiuwanli::FilesSharedLog* mutable_sharedlog(int index);
  ::qiuwanli::FilesSharedLog* add_sharedlog();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >*
      mutable_sharedlog();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >&
      sharedlog() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileShared)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog > sharedlog_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FriednList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FriednList) */ {
 public:
  FriednList();
  virtual ~FriednList();

  FriednList(const FriednList& from);

  inline FriednList& operator=(const FriednList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriednList& default_instance();

  static inline const FriednList* internal_default_instance() {
    return reinterpret_cast<const FriednList*>(
               &_FriednList_default_instance_);
  }

  void Swap(FriednList* other);

  // implements Message ----------------------------------------------

  inline FriednList* New() const PROTOBUF_FINAL { return New(NULL); }

  FriednList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriednList& from);
  void MergeFrom(const FriednList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriednList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.MyFriend friend = 1;
  int friend__size() const;
  void clear_friend_();
  static const int kFriendFieldNumber = 1;
  const ::qiuwanli::MyFriend& friend_(int index) const;
  ::qiuwanli::MyFriend* mutable_friend_(int index);
  ::qiuwanli::MyFriend* add_friend_();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::MyFriend >*
      mutable_friend_();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::MyFriend >&
      friend_() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FriednList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::MyFriend > friend__;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDownLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDownLog) */ {
 public:
  FileDownLog();
  virtual ~FileDownLog();

  FileDownLog(const FileDownLog& from);

  inline FileDownLog& operator=(const FileDownLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDownLog& default_instance();

  static inline const FileDownLog* internal_default_instance() {
    return reinterpret_cast<const FileDownLog*>(
               &_FileDownLog_default_instance_);
  }

  void Swap(FileDownLog* other);

  // implements Message ----------------------------------------------

  inline FileDownLog* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDownLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDownLog& from);
  void MergeFrom(const FileDownLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDownLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filename = 1;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string filepath = 2;
  void clear_filepath();
  static const int kFilepathFieldNumber = 2;
  const ::std::string& filepath() const;
  void set_filepath(const ::std::string& value);
  #if LANG_CXX11
  void set_filepath(::std::string&& value);
  #endif
  void set_filepath(const char* value);
  void set_filepath(const char* value, size_t size);
  ::std::string* mutable_filepath();
  ::std::string* release_filepath();
  void set_allocated_filepath(::std::string* filepath);

  // string downtime = 3;
  void clear_downtime();
  static const int kDowntimeFieldNumber = 3;
  const ::std::string& downtime() const;
  void set_downtime(const ::std::string& value);
  #if LANG_CXX11
  void set_downtime(::std::string&& value);
  #endif
  void set_downtime(const char* value);
  void set_downtime(const char* value, size_t size);
  ::std::string* mutable_downtime();
  ::std::string* release_downtime();
  void set_allocated_downtime(::std::string* downtime);

  // string filesize = 4;
  void clear_filesize();
  static const int kFilesizeFieldNumber = 4;
  const ::std::string& filesize() const;
  void set_filesize(const ::std::string& value);
  #if LANG_CXX11
  void set_filesize(::std::string&& value);
  #endif
  void set_filesize(const char* value);
  void set_filesize(const char* value, size_t size);
  ::std::string* mutable_filesize();
  ::std::string* release_filesize();
  void set_allocated_filesize(::std::string* filesize);

  // string status = 5;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDownLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filepath_;
  ::google::protobuf::internal::ArenaStringPtr downtime_;
  ::google::protobuf::internal::ArenaStringPtr filesize_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDownLogFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDownLogFile) */ {
 public:
  FileDownLogFile();
  virtual ~FileDownLogFile();

  FileDownLogFile(const FileDownLogFile& from);

  inline FileDownLogFile& operator=(const FileDownLogFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDownLogFile& default_instance();

  static inline const FileDownLogFile* internal_default_instance() {
    return reinterpret_cast<const FileDownLogFile*>(
               &_FileDownLogFile_default_instance_);
  }

  void Swap(FileDownLogFile* other);

  // implements Message ----------------------------------------------

  inline FileDownLogFile* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDownLogFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDownLogFile& from);
  void MergeFrom(const FileDownLogFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDownLogFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileDownLog filelog = 1;
  int filelog_size() const;
  void clear_filelog();
  static const int kFilelogFieldNumber = 1;
  const ::qiuwanli::FileDownLog& filelog(int index) const;
  ::qiuwanli::FileDownLog* mutable_filelog(int index);
  ::qiuwanli::FileDownLog* add_filelog();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDownLog >*
      mutable_filelog();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDownLog >&
      filelog() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDownLogFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDownLog > filelog_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDowningLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDowningLog) */ {
 public:
  FileDowningLog();
  virtual ~FileDowningLog();

  FileDowningLog(const FileDowningLog& from);

  inline FileDowningLog& operator=(const FileDowningLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDowningLog& default_instance();

  static inline const FileDowningLog* internal_default_instance() {
    return reinterpret_cast<const FileDowningLog*>(
               &_FileDowningLog_default_instance_);
  }

  void Swap(FileDowningLog* other);

  // implements Message ----------------------------------------------

  inline FileDowningLog* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDowningLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDowningLog& from);
  void MergeFrom(const FileDowningLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDowningLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filename = 1;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string filesize = 2;
  void clear_filesize();
  static const int kFilesizeFieldNumber = 2;
  const ::std::string& filesize() const;
  void set_filesize(const ::std::string& value);
  #if LANG_CXX11
  void set_filesize(::std::string&& value);
  #endif
  void set_filesize(const char* value);
  void set_filesize(const char* value, size_t size);
  ::std::string* mutable_filesize();
  ::std::string* release_filesize();
  void set_allocated_filesize(::std::string* filesize);

  // string downtime = 3;
  void clear_downtime();
  static const int kDowntimeFieldNumber = 3;
  const ::std::string& downtime() const;
  void set_downtime(const ::std::string& value);
  #if LANG_CXX11
  void set_downtime(::std::string&& value);
  #endif
  void set_downtime(const char* value);
  void set_downtime(const char* value, size_t size);
  ::std::string* mutable_downtime();
  ::std::string* release_downtime();
  void set_allocated_downtime(::std::string* downtime);

  // string Downingstatus = 4;
  void clear_downingstatus();
  static const int kDowningstatusFieldNumber = 4;
  const ::std::string& downingstatus() const;
  void set_downingstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_downingstatus(::std::string&& value);
  #endif
  void set_downingstatus(const char* value);
  void set_downingstatus(const char* value, size_t size);
  ::std::string* mutable_downingstatus();
  ::std::string* release_downingstatus();
  void set_allocated_downingstatus(::std::string* downingstatus);

  // string filesha512 = 5;
  void clear_filesha512();
  static const int kFilesha512FieldNumber = 5;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDowningLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filesize_;
  ::google::protobuf::internal::ArenaStringPtr downtime_;
  ::google::protobuf::internal::ArenaStringPtr downingstatus_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDownLogFiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDownLogFiles) */ {
 public:
  FileDownLogFiles();
  virtual ~FileDownLogFiles();

  FileDownLogFiles(const FileDownLogFiles& from);

  inline FileDownLogFiles& operator=(const FileDownLogFiles& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDownLogFiles& default_instance();

  static inline const FileDownLogFiles* internal_default_instance() {
    return reinterpret_cast<const FileDownLogFiles*>(
               &_FileDownLogFiles_default_instance_);
  }

  void Swap(FileDownLogFiles* other);

  // implements Message ----------------------------------------------

  inline FileDownLogFiles* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDownLogFiles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDownLogFiles& from);
  void MergeFrom(const FileDownLogFiles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDownLogFiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileDowningLog FileDownLog = 1;
  int filedownlog_size() const;
  void clear_filedownlog();
  static const int kFileDownLogFieldNumber = 1;
  const ::qiuwanli::FileDowningLog& filedownlog(int index) const;
  ::qiuwanli::FileDowningLog* mutable_filedownlog(int index);
  ::qiuwanli::FileDowningLog* add_filedownlog();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >*
      mutable_filedownlog();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >&
      filedownlog() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDownLogFiles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog > filedownlog_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Path4FilesOrDir : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Path4FilesOrDir) */ {
 public:
  Path4FilesOrDir();
  virtual ~Path4FilesOrDir();

  Path4FilesOrDir(const Path4FilesOrDir& from);

  inline Path4FilesOrDir& operator=(const Path4FilesOrDir& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Path4FilesOrDir& default_instance();

  static inline const Path4FilesOrDir* internal_default_instance() {
    return reinterpret_cast<const Path4FilesOrDir*>(
               &_Path4FilesOrDir_default_instance_);
  }

  void Swap(Path4FilesOrDir* other);

  // implements Message ----------------------------------------------

  inline Path4FilesOrDir* New() const PROTOBUF_FINAL { return New(NULL); }

  Path4FilesOrDir* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Path4FilesOrDir& from);
  void MergeFrom(const Path4FilesOrDir& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Path4FilesOrDir* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes pathtypes = 2;
  void clear_pathtypes();
  static const int kPathtypesFieldNumber = 2;
  const ::std::string& pathtypes() const;
  void set_pathtypes(const ::std::string& value);
  #if LANG_CXX11
  void set_pathtypes(::std::string&& value);
  #endif
  void set_pathtypes(const char* value);
  void set_pathtypes(const void* value, size_t size);
  ::std::string* mutable_pathtypes();
  ::std::string* release_pathtypes();
  void set_allocated_pathtypes(::std::string* pathtypes);

  // string pathOrName = 1;
  void clear_pathorname();
  static const int kPathOrNameFieldNumber = 1;
  const ::std::string& pathorname() const;
  void set_pathorname(const ::std::string& value);
  #if LANG_CXX11
  void set_pathorname(::std::string&& value);
  #endif
  void set_pathorname(const char* value);
  void set_pathorname(const char* value, size_t size);
  ::std::string* mutable_pathorname();
  ::std::string* release_pathorname();
  void set_allocated_pathorname(::std::string* pathorname);

  // uint32 fileId = 3;
  void clear_fileid();
  static const int kFileIdFieldNumber = 3;
  ::google::protobuf::uint32 fileid() const;
  void set_fileid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.Path4FilesOrDir)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pathtypes_;
  ::google::protobuf::internal::ArenaStringPtr pathorname_;
  ::google::protobuf::uint32 fileid_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllFiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.AllFiles) */ {
 public:
  AllFiles();
  virtual ~AllFiles();

  AllFiles(const AllFiles& from);

  inline AllFiles& operator=(const AllFiles& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllFiles& default_instance();

  static inline const AllFiles* internal_default_instance() {
    return reinterpret_cast<const AllFiles*>(
               &_AllFiles_default_instance_);
  }

  void Swap(AllFiles* other);

  // implements Message ----------------------------------------------

  inline AllFiles* New() const PROTOBUF_FINAL { return New(NULL); }

  AllFiles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllFiles& from);
  void MergeFrom(const AllFiles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllFiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Path4FilesOrDir filespath = 2;
  int filespath_size() const;
  void clear_filespath();
  static const int kFilespathFieldNumber = 2;
  const ::qiuwanli::Path4FilesOrDir& filespath(int index) const;
  ::qiuwanli::Path4FilesOrDir* mutable_filespath(int index);
  ::qiuwanli::Path4FilesOrDir* add_filespath();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Path4FilesOrDir >*
      mutable_filespath();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Path4FilesOrDir >&
      filespath() const;

  // string pathList = 1;
  void clear_pathlist();
  static const int kPathListFieldNumber = 1;
  const ::std::string& pathlist() const;
  void set_pathlist(const ::std::string& value);
  #if LANG_CXX11
  void set_pathlist(::std::string&& value);
  #endif
  void set_pathlist(const char* value);
  void set_pathlist(const char* value, size_t size);
  ::std::string* mutable_pathlist();
  ::std::string* release_pathlist();
  void set_allocated_pathlist(::std::string* pathlist);

  // @@protoc_insertion_point(class_scope:qiuwanli.AllFiles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Path4FilesOrDir > filespath_;
  ::google::protobuf::internal::ArenaStringPtr pathlist_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileInfo) */ {
 public:
  FileInfo();
  virtual ~FileInfo();

  FileInfo(const FileInfo& from);

  inline FileInfo& operator=(const FileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfo& default_instance();

  static inline const FileInfo* internal_default_instance() {
    return reinterpret_cast<const FileInfo*>(
               &_FileInfo_default_instance_);
  }

  void Swap(FileInfo* other);

  // implements Message ----------------------------------------------

  inline FileInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FileInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileInfo& from);
  void MergeFrom(const FileInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fileId = 1;
  void clear_fileid();
  static const int kFileIdFieldNumber = 1;
  const ::std::string& fileid() const;
  void set_fileid(const ::std::string& value);
  #if LANG_CXX11
  void set_fileid(::std::string&& value);
  #endif
  void set_fileid(const char* value);
  void set_fileid(const char* value, size_t size);
  ::std::string* mutable_fileid();
  ::std::string* release_fileid();
  void set_allocated_fileid(::std::string* fileid);

  // string filemd5_1 = 3;
  void clear_filemd5_1();
  static const int kFilemd51FieldNumber = 3;
  const ::std::string& filemd5_1() const;
  void set_filemd5_1(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5_1(::std::string&& value);
  #endif
  void set_filemd5_1(const char* value);
  void set_filemd5_1(const char* value, size_t size);
  ::std::string* mutable_filemd5_1();
  ::std::string* release_filemd5_1();
  void set_allocated_filemd5_1(::std::string* filemd5_1);

  // string filemd5_2 = 4;
  void clear_filemd5_2();
  static const int kFilemd52FieldNumber = 4;
  const ::std::string& filemd5_2() const;
  void set_filemd5_2(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5_2(::std::string&& value);
  #endif
  void set_filemd5_2(const char* value);
  void set_filemd5_2(const char* value, size_t size);
  ::std::string* mutable_filemd5_2();
  ::std::string* release_filemd5_2();
  void set_allocated_filemd5_2(::std::string* filemd5_2);

  // uint32 filesize = 2;
  void clear_filesize();
  static const int kFilesizeFieldNumber = 2;
  ::google::protobuf::uint32 filesize() const;
  void set_filesize(::google::protobuf::uint32 value);

  // uint32 filepathid = 7;
  void clear_filepathid();
  static const int kFilepathidFieldNumber = 7;
  ::google::protobuf::uint32 filepathid() const;
  void set_filepathid(::google::protobuf::uint32 value);

  // uint64 filecreatedate = 5;
  void clear_filecreatedate();
  static const int kFilecreatedateFieldNumber = 5;
  ::google::protobuf::uint64 filecreatedate() const;
  void set_filecreatedate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fileid_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_1_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_2_;
  ::google::protobuf::uint32 filesize_;
  ::google::protobuf::uint32 filepathid_;
  ::google::protobuf::uint64 filecreatedate_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfoFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileInfoFile) */ {
 public:
  FileInfoFile();
  virtual ~FileInfoFile();

  FileInfoFile(const FileInfoFile& from);

  inline FileInfoFile& operator=(const FileInfoFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfoFile& default_instance();

  static inline const FileInfoFile* internal_default_instance() {
    return reinterpret_cast<const FileInfoFile*>(
               &_FileInfoFile_default_instance_);
  }

  void Swap(FileInfoFile* other);

  // implements Message ----------------------------------------------

  inline FileInfoFile* New() const PROTOBUF_FINAL { return New(NULL); }

  FileInfoFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileInfoFile& from);
  void MergeFrom(const FileInfoFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileInfoFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileInfo info = 1;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::qiuwanli::FileInfo& info(int index) const;
  ::qiuwanli::FileInfo* mutable_info(int index);
  ::qiuwanli::FileInfo* add_info();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfo >*
      mutable_info();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfo >&
      info() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileInfoFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfo > info_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BufferBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BufferBlock) */ {
 public:
  BufferBlock();
  virtual ~BufferBlock();

  BufferBlock(const BufferBlock& from);

  inline BufferBlock& operator=(const BufferBlock& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BufferBlock& default_instance();

  static inline const BufferBlock* internal_default_instance() {
    return reinterpret_cast<const BufferBlock*>(
               &_BufferBlock_default_instance_);
  }

  void Swap(BufferBlock* other);

  // implements Message ----------------------------------------------

  inline BufferBlock* New() const PROTOBUF_FINAL { return New(NULL); }

  BufferBlock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BufferBlock& from);
  void MergeFrom(const BufferBlock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BufferBlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bufferdata = 3;
  void clear_bufferdata();
  static const int kBufferdataFieldNumber = 3;
  const ::std::string& bufferdata() const;
  void set_bufferdata(const ::std::string& value);
  #if LANG_CXX11
  void set_bufferdata(::std::string&& value);
  #endif
  void set_bufferdata(const char* value);
  void set_bufferdata(const void* value, size_t size);
  ::std::string* mutable_bufferdata();
  ::std::string* release_bufferdata();
  void set_allocated_bufferdata(::std::string* bufferdata);

  // uint32 maxsize = 1;
  void clear_maxsize();
  static const int kMaxsizeFieldNumber = 1;
  ::google::protobuf::uint32 maxsize() const;
  void set_maxsize(::google::protobuf::uint32 value);

  // uint32 currsize = 2;
  void clear_currsize();
  static const int kCurrsizeFieldNumber = 2;
  ::google::protobuf::uint32 currsize() const;
  void set_currsize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.BufferBlock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bufferdata_;
  ::google::protobuf::uint32 maxsize_;
  ::google::protobuf::uint32 currsize_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BufferBlockPool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BufferBlockPool) */ {
 public:
  BufferBlockPool();
  virtual ~BufferBlockPool();

  BufferBlockPool(const BufferBlockPool& from);

  inline BufferBlockPool& operator=(const BufferBlockPool& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BufferBlockPool& default_instance();

  static inline const BufferBlockPool* internal_default_instance() {
    return reinterpret_cast<const BufferBlockPool*>(
               &_BufferBlockPool_default_instance_);
  }

  void Swap(BufferBlockPool* other);

  // implements Message ----------------------------------------------

  inline BufferBlockPool* New() const PROTOBUF_FINAL { return New(NULL); }

  BufferBlockPool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BufferBlockPool& from);
  void MergeFrom(const BufferBlockPool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BufferBlockPool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BufferBlock buffer = 3;
  int buffer_size() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 3;
  const ::qiuwanli::BufferBlock& buffer(int index) const;
  ::qiuwanli::BufferBlock* mutable_buffer(int index);
  ::qiuwanli::BufferBlock* add_buffer();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BufferBlock >*
      mutable_buffer();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BufferBlock >&
      buffer() const;

  // uint32 PoolMaxSize = 1;
  void clear_poolmaxsize();
  static const int kPoolMaxSizeFieldNumber = 1;
  ::google::protobuf::uint32 poolmaxsize() const;
  void set_poolmaxsize(::google::protobuf::uint32 value);

  // uint32 PoolSize = 2;
  void clear_poolsize();
  static const int kPoolSizeFieldNumber = 2;
  ::google::protobuf::uint32 poolsize() const;
  void set_poolsize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.BufferBlockPool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BufferBlock > buffer_;
  ::google::protobuf::uint32 poolmaxsize_;
  ::google::protobuf::uint32 poolsize_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileBlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileBlockInfo) */ {
 public:
  FileBlockInfo();
  virtual ~FileBlockInfo();

  FileBlockInfo(const FileBlockInfo& from);

  inline FileBlockInfo& operator=(const FileBlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileBlockInfo& default_instance();

  static inline const FileBlockInfo* internal_default_instance() {
    return reinterpret_cast<const FileBlockInfo*>(
               &_FileBlockInfo_default_instance_);
  }

  void Swap(FileBlockInfo* other);

  // implements Message ----------------------------------------------

  inline FileBlockInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FileBlockInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileBlockInfo& from);
  void MergeFrom(const FileBlockInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileBlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  const ::std::string& file_id() const;
  void set_file_id(const ::std::string& value);
  #if LANG_CXX11
  void set_file_id(::std::string&& value);
  #endif
  void set_file_id(const char* value);
  void set_file_id(const char* value, size_t size);
  ::std::string* mutable_file_id();
  ::std::string* release_file_id();
  void set_allocated_file_id(::std::string* file_id);

  // string file_CRC = 3;
  void clear_file_crc();
  static const int kFileCRCFieldNumber = 3;
  const ::std::string& file_crc() const;
  void set_file_crc(const ::std::string& value);
  #if LANG_CXX11
  void set_file_crc(::std::string&& value);
  #endif
  void set_file_crc(const char* value);
  void set_file_crc(const char* value, size_t size);
  ::std::string* mutable_file_crc();
  ::std::string* release_file_crc();
  void set_allocated_file_crc(::std::string* file_crc);

  // uint32 fileblock_num = 2;
  void clear_fileblock_num();
  static const int kFileblockNumFieldNumber = 2;
  ::google::protobuf::uint32 fileblock_num() const;
  void set_fileblock_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileBlockInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_id_;
  ::google::protobuf::internal::ArenaStringPtr file_crc_;
  ::google::protobuf::uint32 fileblock_num_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class filetemp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.filetemp) */ {
 public:
  filetemp();
  virtual ~filetemp();

  filetemp(const filetemp& from);

  inline filetemp& operator=(const filetemp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const filetemp& default_instance();

  static inline const filetemp* internal_default_instance() {
    return reinterpret_cast<const filetemp*>(
               &_filetemp_default_instance_);
  }

  void Swap(filetemp* other);

  // implements Message ----------------------------------------------

  inline filetemp* New() const PROTOBUF_FINAL { return New(NULL); }

  filetemp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const filetemp& from);
  void MergeFrom(const filetemp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(filetemp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes BitMap = 2;
  void clear_bitmap();
  static const int kBitMapFieldNumber = 2;
  const ::std::string& bitmap() const;
  void set_bitmap(const ::std::string& value);
  #if LANG_CXX11
  void set_bitmap(::std::string&& value);
  #endif
  void set_bitmap(const char* value);
  void set_bitmap(const void* value, size_t size);
  ::std::string* mutable_bitmap();
  ::std::string* release_bitmap();
  void set_allocated_bitmap(::std::string* bitmap);

  // string NowStatus = 3;
  void clear_nowstatus();
  static const int kNowStatusFieldNumber = 3;
  const ::std::string& nowstatus() const;
  void set_nowstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_nowstatus(::std::string&& value);
  #endif
  void set_nowstatus(const char* value);
  void set_nowstatus(const char* value, size_t size);
  ::std::string* mutable_nowstatus();
  ::std::string* release_nowstatus();
  void set_allocated_nowstatus(::std::string* nowstatus);

  // .qiuwanli.FileBlockInfo fileinfo = 1;
  bool has_fileinfo() const;
  void clear_fileinfo();
  static const int kFileinfoFieldNumber = 1;
  const ::qiuwanli::FileBlockInfo& fileinfo() const;
  ::qiuwanli::FileBlockInfo* mutable_fileinfo();
  ::qiuwanli::FileBlockInfo* release_fileinfo();
  void set_allocated_fileinfo(::qiuwanli::FileBlockInfo* fileinfo);

  // @@protoc_insertion_point(class_scope:qiuwanli.filetemp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bitmap_;
  ::google::protobuf::internal::ArenaStringPtr nowstatus_;
  ::qiuwanli::FileBlockInfo* fileinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class allfiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.allfiles) */ {
 public:
  allfiles();
  virtual ~allfiles();

  allfiles(const allfiles& from);

  inline allfiles& operator=(const allfiles& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const allfiles& default_instance();

  static inline const allfiles* internal_default_instance() {
    return reinterpret_cast<const allfiles*>(
               &_allfiles_default_instance_);
  }

  void Swap(allfiles* other);

  // implements Message ----------------------------------------------

  inline allfiles* New() const PROTOBUF_FINAL { return New(NULL); }

  allfiles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const allfiles& from);
  void MergeFrom(const allfiles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(allfiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string shared_id = 3;
  void clear_shared_id();
  static const int kSharedIdFieldNumber = 3;
  const ::std::string& shared_id() const;
  void set_shared_id(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_id(::std::string&& value);
  #endif
  void set_shared_id(const char* value);
  void set_shared_id(const char* value, size_t size);
  ::std::string* mutable_shared_id();
  ::std::string* release_shared_id();
  void set_allocated_shared_id(::std::string* shared_id);

  // uint32 files_ip = 2;
  void clear_files_ip();
  static const int kFilesIpFieldNumber = 2;
  ::google::protobuf::uint32 files_ip() const;
  void set_files_ip(::google::protobuf::uint32 value);

  // uint32 filesblock_num = 4;
  void clear_filesblock_num();
  static const int kFilesblockNumFieldNumber = 4;
  ::google::protobuf::uint32 filesblock_num() const;
  void set_filesblock_num(::google::protobuf::uint32 value);

  // uint32 filesblock_start = 5;
  void clear_filesblock_start();
  static const int kFilesblockStartFieldNumber = 5;
  ::google::protobuf::uint32 filesblock_start() const;
  void set_filesblock_start(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.allfiles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr shared_id_;
  ::google::protobuf::uint32 files_ip_;
  ::google::protobuf::uint32 filesblock_num_;
  ::google::protobuf::uint32 filesblock_start_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class files_small : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.files_small) */ {
 public:
  files_small();
  virtual ~files_small();

  files_small(const files_small& from);

  inline files_small& operator=(const files_small& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const files_small& default_instance();

  static inline const files_small* internal_default_instance() {
    return reinterpret_cast<const files_small*>(
               &_files_small_default_instance_);
  }

  void Swap(files_small* other);

  // implements Message ----------------------------------------------

  inline files_small* New() const PROTOBUF_FINAL { return New(NULL); }

  files_small* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const files_small& from);
  void MergeFrom(const files_small& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(files_small* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_small_name = 1;
  void clear_file_small_name();
  static const int kFileSmallNameFieldNumber = 1;
  const ::std::string& file_small_name() const;
  void set_file_small_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_small_name(::std::string&& value);
  #endif
  void set_file_small_name(const char* value);
  void set_file_small_name(const char* value, size_t size);
  ::std::string* mutable_file_small_name();
  ::std::string* release_file_small_name();
  void set_allocated_file_small_name(::std::string* file_small_name);

  // uint32 file_small_create_time = 2;
  void clear_file_small_create_time();
  static const int kFileSmallCreateTimeFieldNumber = 2;
  ::google::protobuf::uint32 file_small_create_time() const;
  void set_file_small_create_time(::google::protobuf::uint32 value);

  // uint32 file_small_start = 3;
  void clear_file_small_start();
  static const int kFileSmallStartFieldNumber = 3;
  ::google::protobuf::uint32 file_small_start() const;
  void set_file_small_start(::google::protobuf::uint32 value);

  // uint32 file_small_length = 4;
  void clear_file_small_length();
  static const int kFileSmallLengthFieldNumber = 4;
  ::google::protobuf::uint32 file_small_length() const;
  void set_file_small_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.files_small)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_small_name_;
  ::google::protobuf::uint32 file_small_create_time_;
  ::google::protobuf::uint32 file_small_start_;
  ::google::protobuf::uint32 file_small_length_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class files_small_block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.files_small_block) */ {
 public:
  files_small_block();
  virtual ~files_small_block();

  files_small_block(const files_small_block& from);

  inline files_small_block& operator=(const files_small_block& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const files_small_block& default_instance();

  static inline const files_small_block* internal_default_instance() {
    return reinterpret_cast<const files_small_block*>(
               &_files_small_block_default_instance_);
  }

  void Swap(files_small_block* other);

  // implements Message ----------------------------------------------

  inline files_small_block* New() const PROTOBUF_FINAL { return New(NULL); }

  files_small_block* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const files_small_block& from);
  void MergeFrom(const files_small_block& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(files_small_block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes files_small_blocks = 1;
  void clear_files_small_blocks();
  static const int kFilesSmallBlocksFieldNumber = 1;
  const ::std::string& files_small_blocks() const;
  void set_files_small_blocks(const ::std::string& value);
  #if LANG_CXX11
  void set_files_small_blocks(::std::string&& value);
  #endif
  void set_files_small_blocks(const char* value);
  void set_files_small_blocks(const void* value, size_t size);
  ::std::string* mutable_files_small_blocks();
  ::std::string* release_files_small_blocks();
  void set_allocated_files_small_blocks(::std::string* files_small_blocks);

  // @@protoc_insertion_point(class_scope:qiuwanli.files_small_block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr files_small_blocks_;
  mutable int _cached_size_;
  friend struct  protobuf_MyDataStruct_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Users

// string user_id = 1;
inline void Users::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Users::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_id)
  return user_id_.GetNoArena();
}
inline void Users::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_id)
}
#if LANG_CXX11
inline void Users::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_id)
}
#endif
inline void Users::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_id)
}
inline void Users::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_id)
}
inline ::std::string* Users::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Users::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Users::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_id)
}

// string user_name = 2;
inline void Users::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Users::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_name)
  return user_name_.GetNoArena();
}
inline void Users::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_name)
}
#if LANG_CXX11
inline void Users::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_name)
}
#endif
inline void Users::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_name)
}
inline void Users::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_name)
}
inline ::std::string* Users::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Users::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Users::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_name)
}

// string user_password_md5 = 3;
inline void Users::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Users::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_password_md5)
  return user_password_md5_.GetNoArena();
}
inline void Users::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_password_md5)
}
#if LANG_CXX11
inline void Users::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_password_md5)
}
#endif
inline void Users::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_password_md5)
}
inline void Users::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_password_md5)
}
inline ::std::string* Users::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Users::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Users::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_password_md5)
}

// string user_client_UUID = 4;
inline void Users::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Users::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void Users::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_client_UUID)
}
#if LANG_CXX11
inline void Users::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_client_UUID)
}
#endif
inline void Users::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_client_UUID)
}
inline void Users::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_client_UUID)
}
inline ::std::string* Users::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Users::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Users::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_client_UUID)
}

// string login_code = 5;
inline void Users::clear_login_code() {
  login_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Users::login_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.login_code)
  return login_code_.GetNoArena();
}
inline void Users::set_login_code(const ::std::string& value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.login_code)
}
#if LANG_CXX11
inline void Users::set_login_code(::std::string&& value) {
  
  login_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.login_code)
}
#endif
inline void Users::set_login_code(const char* value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.login_code)
}
inline void Users::set_login_code(const char* value, size_t size) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.login_code)
}
inline ::std::string* Users::mutable_login_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.login_code)
  return login_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Users::release_login_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.login_code)
  
  return login_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Users::set_allocated_login_code(::std::string* login_code) {
  if (login_code != NULL) {
    
  } else {
    
  }
  login_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.login_code)
}

// bytes user_type = 6;
inline void Users::clear_user_type() {
  user_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Users::user_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_type)
  return user_type_.GetNoArena();
}
inline void Users::set_user_type(const ::std::string& value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_type)
}
#if LANG_CXX11
inline void Users::set_user_type(::std::string&& value) {
  
  user_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_type)
}
#endif
inline void Users::set_user_type(const char* value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_type)
}
inline void Users::set_user_type(const void* value, size_t size) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_type)
}
inline ::std::string* Users::mutable_user_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_type)
  return user_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Users::release_user_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_type)
  
  return user_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Users::set_allocated_user_type(::std::string* user_type) {
  if (user_type != NULL) {
    
  } else {
    
  }
  user_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_type)
}

// -------------------------------------------------------------------

// ServerUser

// repeated .qiuwanli.Users user = 1;
inline int ServerUser::user_size() const {
  return user_.size();
}
inline void ServerUser::clear_user() {
  user_.Clear();
}
inline const ::qiuwanli::Users& ServerUser::user(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ServerUser.user)
  return user_.Get(index);
}
inline ::qiuwanli::Users* ServerUser::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ServerUser.user)
  return user_.Mutable(index);
}
inline ::qiuwanli::Users* ServerUser::add_user() {
  // @@protoc_insertion_point(field_add:qiuwanli.ServerUser.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Users >*
ServerUser::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ServerUser.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Users >&
ServerUser::user() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ServerUser.user)
  return user_;
}

// -------------------------------------------------------------------

// RealUsers

// string user_id = 1;
inline void RealUsers::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_id)
  return user_id_.GetNoArena();
}
inline void RealUsers::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_id)
}
#if LANG_CXX11
inline void RealUsers::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_id)
}
#endif
inline void RealUsers::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_id)
}
inline void RealUsers::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_id)
}
inline ::std::string* RealUsers::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_id)
}

// string user_name_real = 2;
inline void RealUsers::clear_user_name_real() {
  user_name_real_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_name_real() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_name_real)
  return user_name_real_.GetNoArena();
}
inline void RealUsers::set_user_name_real(const ::std::string& value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_name_real)
}
#if LANG_CXX11
inline void RealUsers::set_user_name_real(::std::string&& value) {
  
  user_name_real_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_name_real)
}
#endif
inline void RealUsers::set_user_name_real(const char* value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_name_real)
}
inline void RealUsers::set_user_name_real(const char* value, size_t size) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_name_real)
}
inline ::std::string* RealUsers::mutable_user_name_real() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_name_real)
  return user_name_real_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_name_real() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_name_real)
  
  return user_name_real_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_name_real(::std::string* user_name_real) {
  if (user_name_real != NULL) {
    
  } else {
    
  }
  user_name_real_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name_real);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_name_real)
}

// string user_idcard = 3;
inline void RealUsers::clear_user_idcard() {
  user_idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_idcard() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_idcard)
  return user_idcard_.GetNoArena();
}
inline void RealUsers::set_user_idcard(const ::std::string& value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_idcard)
}
#if LANG_CXX11
inline void RealUsers::set_user_idcard(::std::string&& value) {
  
  user_idcard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_idcard)
}
#endif
inline void RealUsers::set_user_idcard(const char* value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_idcard)
}
inline void RealUsers::set_user_idcard(const char* value, size_t size) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_idcard)
}
inline ::std::string* RealUsers::mutable_user_idcard() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_idcard)
  return user_idcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_idcard() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_idcard)
  
  return user_idcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_idcard(::std::string* user_idcard) {
  if (user_idcard != NULL) {
    
  } else {
    
  }
  user_idcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_idcard);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_idcard)
}

// string user_live_address = 4;
inline void RealUsers::clear_user_live_address() {
  user_live_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_live_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_live_address)
  return user_live_address_.GetNoArena();
}
inline void RealUsers::set_user_live_address(const ::std::string& value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_live_address)
}
#if LANG_CXX11
inline void RealUsers::set_user_live_address(::std::string&& value) {
  
  user_live_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_live_address)
}
#endif
inline void RealUsers::set_user_live_address(const char* value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_live_address)
}
inline void RealUsers::set_user_live_address(const char* value, size_t size) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_live_address)
}
inline ::std::string* RealUsers::mutable_user_live_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_live_address)
  return user_live_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_live_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_live_address)
  
  return user_live_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_live_address(::std::string* user_live_address) {
  if (user_live_address != NULL) {
    
  } else {
    
  }
  user_live_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_live_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_live_address)
}

// string user_phone = 5;
inline void RealUsers::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_phone)
  return user_phone_.GetNoArena();
}
inline void RealUsers::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_phone)
}
#if LANG_CXX11
inline void RealUsers::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_phone)
}
#endif
inline void RealUsers::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_phone)
}
inline void RealUsers::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_phone)
}
inline ::std::string* RealUsers::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_phone)
}

// string user_qq = 6;
inline void RealUsers::clear_user_qq() {
  user_qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_qq() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_qq)
  return user_qq_.GetNoArena();
}
inline void RealUsers::set_user_qq(const ::std::string& value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_qq)
}
#if LANG_CXX11
inline void RealUsers::set_user_qq(::std::string&& value) {
  
  user_qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_qq)
}
#endif
inline void RealUsers::set_user_qq(const char* value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_qq)
}
inline void RealUsers::set_user_qq(const char* value, size_t size) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_qq)
}
inline ::std::string* RealUsers::mutable_user_qq() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_qq)
  return user_qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_qq() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_qq)
  
  return user_qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_qq(::std::string* user_qq) {
  if (user_qq != NULL) {
    
  } else {
    
  }
  user_qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_qq);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_qq)
}

// string user_mirchat = 7;
inline void RealUsers::clear_user_mirchat() {
  user_mirchat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_mirchat() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_mirchat)
  return user_mirchat_.GetNoArena();
}
inline void RealUsers::set_user_mirchat(const ::std::string& value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_mirchat)
}
#if LANG_CXX11
inline void RealUsers::set_user_mirchat(::std::string&& value) {
  
  user_mirchat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_mirchat)
}
#endif
inline void RealUsers::set_user_mirchat(const char* value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_mirchat)
}
inline void RealUsers::set_user_mirchat(const char* value, size_t size) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_mirchat)
}
inline ::std::string* RealUsers::mutable_user_mirchat() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_mirchat)
  return user_mirchat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_mirchat() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_mirchat)
  
  return user_mirchat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_mirchat(::std::string* user_mirchat) {
  if (user_mirchat != NULL) {
    
  } else {
    
  }
  user_mirchat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_mirchat);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_mirchat)
}

// string user_email = 8;
inline void RealUsers::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_email() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_email)
  return user_email_.GetNoArena();
}
inline void RealUsers::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_email)
}
#if LANG_CXX11
inline void RealUsers::set_user_email(::std::string&& value) {
  
  user_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_email)
}
#endif
inline void RealUsers::set_user_email(const char* value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_email)
}
inline void RealUsers::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_email)
}
inline ::std::string* RealUsers::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_email() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_email)
}

// string user_bri = 9;
inline void RealUsers::clear_user_bri() {
  user_bri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_bri() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_bri)
  return user_bri_.GetNoArena();
}
inline void RealUsers::set_user_bri(const ::std::string& value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_bri)
}
#if LANG_CXX11
inline void RealUsers::set_user_bri(::std::string&& value) {
  
  user_bri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_bri)
}
#endif
inline void RealUsers::set_user_bri(const char* value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_bri)
}
inline void RealUsers::set_user_bri(const char* value, size_t size) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_bri)
}
inline ::std::string* RealUsers::mutable_user_bri() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_bri)
  return user_bri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_bri() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_bri)
  
  return user_bri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_bri(::std::string* user_bri) {
  if (user_bri != NULL) {
    
  } else {
    
  }
  user_bri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_bri);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_bri)
}

// string user_address = 10;
inline void RealUsers::clear_user_address() {
  user_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RealUsers::user_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_address)
  return user_address_.GetNoArena();
}
inline void RealUsers::set_user_address(const ::std::string& value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_address)
}
#if LANG_CXX11
inline void RealUsers::set_user_address(::std::string&& value) {
  
  user_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_address)
}
#endif
inline void RealUsers::set_user_address(const char* value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_address)
}
inline void RealUsers::set_user_address(const char* value, size_t size) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_address)
}
inline ::std::string* RealUsers::mutable_user_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_address)
  return user_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RealUsers::release_user_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_address)
  
  return user_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RealUsers::set_allocated_user_address(::std::string* user_address) {
  if (user_address != NULL) {
    
  } else {
    
  }
  user_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_address)
}

// -------------------------------------------------------------------

// ServerRealUser

// repeated .qiuwanli.RealUsers realuer = 1;
inline int ServerRealUser::realuer_size() const {
  return realuer_.size();
}
inline void ServerRealUser::clear_realuer() {
  realuer_.Clear();
}
inline const ::qiuwanli::RealUsers& ServerRealUser::realuer(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ServerRealUser.realuer)
  return realuer_.Get(index);
}
inline ::qiuwanli::RealUsers* ServerRealUser::mutable_realuer(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ServerRealUser.realuer)
  return realuer_.Mutable(index);
}
inline ::qiuwanli::RealUsers* ServerRealUser::add_realuer() {
  // @@protoc_insertion_point(field_add:qiuwanli.ServerRealUser.realuer)
  return realuer_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::RealUsers >*
ServerRealUser::mutable_realuer() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ServerRealUser.realuer)
  return &realuer_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::RealUsers >&
ServerRealUser::realuer() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ServerRealUser.realuer)
  return realuer_;
}

// -------------------------------------------------------------------

// userreg

// string user_name = 1;
inline void userreg::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_name)
  return user_name_.GetNoArena();
}
inline void userreg::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_name)
}
#if LANG_CXX11
inline void userreg::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_name)
}
#endif
inline void userreg::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_name)
}
inline void userreg::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_name)
}
inline ::std::string* userreg::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_name)
}

// string user_password_md5 = 2;
inline void userreg::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.GetNoArena();
}
inline void userreg::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_password_md5)
}
#if LANG_CXX11
inline void userreg::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_password_md5)
}
#endif
inline void userreg::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_password_md5)
}
inline void userreg::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_password_md5)
}
inline ::std::string* userreg::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_password_md5)
}

// string user_phone = 3;
inline void userreg::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_phone)
  return user_phone_.GetNoArena();
}
inline void userreg::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_phone)
}
#if LANG_CXX11
inline void userreg::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_phone)
}
#endif
inline void userreg::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_phone)
}
inline void userreg::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_phone)
}
inline ::std::string* userreg::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_phone)
}

// string reg_code = 4;
inline void userreg::clear_reg_code() {
  reg_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::reg_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.reg_code)
  return reg_code_.GetNoArena();
}
inline void userreg::set_reg_code(const ::std::string& value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.reg_code)
}
#if LANG_CXX11
inline void userreg::set_reg_code(::std::string&& value) {
  
  reg_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.reg_code)
}
#endif
inline void userreg::set_reg_code(const char* value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.reg_code)
}
inline void userreg::set_reg_code(const char* value, size_t size) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.reg_code)
}
inline ::std::string* userreg::mutable_reg_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.reg_code)
  return reg_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_reg_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.reg_code)
  
  return reg_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_reg_code(::std::string* reg_code) {
  if (reg_code != NULL) {
    
  } else {
    
  }
  reg_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reg_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.reg_code)
}

// -------------------------------------------------------------------

// LoginIpLogs

// string user_id = 1;
inline void LoginIpLogs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginIpLogs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.user_id)
  return user_id_.GetNoArena();
}
inline void LoginIpLogs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.user_id)
}
#if LANG_CXX11
inline void LoginIpLogs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LoginIpLogs.user_id)
}
#endif
inline void LoginIpLogs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LoginIpLogs.user_id)
}
inline void LoginIpLogs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LoginIpLogs.user_id)
}
inline ::std::string* LoginIpLogs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LoginIpLogs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginIpLogs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.LoginIpLogs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginIpLogs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LoginIpLogs.user_id)
}

// uint32 loginip = 2;
inline void LoginIpLogs::clear_loginip() {
  loginip_ = 0u;
}
inline ::google::protobuf::uint32 LoginIpLogs::loginip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.loginip)
  return loginip_;
}
inline void LoginIpLogs::set_loginip(::google::protobuf::uint32 value) {
  
  loginip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.loginip)
}

// uint64 logindate = 3;
inline void LoginIpLogs::clear_logindate() {
  logindate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoginIpLogs::logindate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.logindate)
  return logindate_;
}
inline void LoginIpLogs::set_logindate(::google::protobuf::uint64 value) {
  
  logindate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.logindate)
}

// string user_client_UUID = 4;
inline void LoginIpLogs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginIpLogs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void LoginIpLogs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.user_client_UUID)
}
#if LANG_CXX11
inline void LoginIpLogs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LoginIpLogs.user_client_UUID)
}
#endif
inline void LoginIpLogs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LoginIpLogs.user_client_UUID)
}
inline void LoginIpLogs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LoginIpLogs.user_client_UUID)
}
inline ::std::string* LoginIpLogs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LoginIpLogs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginIpLogs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.LoginIpLogs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginIpLogs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LoginIpLogs.user_client_UUID)
}

// -------------------------------------------------------------------

// ServerLoginIPLog

// repeated .qiuwanli.LoginIpLogs loginliplog = 1;
inline int ServerLoginIPLog::loginliplog_size() const {
  return loginliplog_.size();
}
inline void ServerLoginIPLog::clear_loginliplog() {
  loginliplog_.Clear();
}
inline const ::qiuwanli::LoginIpLogs& ServerLoginIPLog::loginliplog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_.Get(index);
}
inline ::qiuwanli::LoginIpLogs* ServerLoginIPLog::mutable_loginliplog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_.Mutable(index);
}
inline ::qiuwanli::LoginIpLogs* ServerLoginIPLog::add_loginliplog() {
  // @@protoc_insertion_point(field_add:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::LoginIpLogs >*
ServerLoginIPLog::mutable_loginliplog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ServerLoginIPLog.loginliplog)
  return &loginliplog_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::LoginIpLogs >&
ServerLoginIPLog::loginliplog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_;
}

// -------------------------------------------------------------------

// Logs

// string user_id = 1;
inline void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
inline void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
inline void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
inline void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
inline void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
inline ::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// uint64 log_date = 2;
inline void Logs::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_;
}
inline void Logs::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}

// string log_info = 3;
inline void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
inline void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
inline void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
inline void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
inline void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
inline ::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
inline void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
inline void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
inline void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
inline void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
inline void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
inline ::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
inline void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
inline void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
inline void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
inline void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
inline ::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

// -------------------------------------------------------------------

// AllLog

// string logdate = 1;
inline void AllLog::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllLog::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.logdate)
  return logdate_.GetNoArena();
}
inline void AllLog::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.AllLog.logdate)
}
#if LANG_CXX11
inline void AllLog::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.AllLog.logdate)
}
#endif
inline void AllLog::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.AllLog.logdate)
}
inline void AllLog::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.AllLog.logdate)
}
inline ::std::string* AllLog::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllLog::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.AllLog.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllLog::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.AllLog.logdate)
}

// repeated .qiuwanli.Logs log = 2;
inline int AllLog::log_size() const {
  return log_.size();
}
inline void AllLog::clear_log() {
  log_.Clear();
}
inline const ::qiuwanli::Logs& AllLog::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.log)
  return log_.Get(index);
}
inline ::qiuwanli::Logs* AllLog::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.log)
  return log_.Mutable(index);
}
inline ::qiuwanli::Logs* AllLog::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.AllLog.log)
  return log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
AllLog::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.AllLog.log)
  return &log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
AllLog::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.AllLog.log)
  return log_;
}

// -------------------------------------------------------------------

// FilesSharedLog

// string shared_url = 1;
inline void FilesSharedLog::clear_shared_url() {
  shared_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilesSharedLog::shared_url() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_url)
  return shared_url_.GetNoArena();
}
inline void FilesSharedLog::set_shared_url(const ::std::string& value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_url)
}
#if LANG_CXX11
inline void FilesSharedLog::set_shared_url(::std::string&& value) {
  
  shared_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.shared_url)
}
#endif
inline void FilesSharedLog::set_shared_url(const char* value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.shared_url)
}
inline void FilesSharedLog::set_shared_url(const char* value, size_t size) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.shared_url)
}
inline ::std::string* FilesSharedLog::mutable_shared_url() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.shared_url)
  return shared_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilesSharedLog::release_shared_url() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.shared_url)
  
  return shared_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilesSharedLog::set_allocated_shared_url(::std::string* shared_url) {
  if (shared_url != NULL) {
    
  } else {
    
  }
  shared_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_url);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.shared_url)
}

// string shared_ps = 2;
inline void FilesSharedLog::clear_shared_ps() {
  shared_ps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilesSharedLog::shared_ps() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_ps)
  return shared_ps_.GetNoArena();
}
inline void FilesSharedLog::set_shared_ps(const ::std::string& value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_ps)
}
#if LANG_CXX11
inline void FilesSharedLog::set_shared_ps(::std::string&& value) {
  
  shared_ps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.shared_ps)
}
#endif
inline void FilesSharedLog::set_shared_ps(const char* value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.shared_ps)
}
inline void FilesSharedLog::set_shared_ps(const char* value, size_t size) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.shared_ps)
}
inline ::std::string* FilesSharedLog::mutable_shared_ps() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.shared_ps)
  return shared_ps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilesSharedLog::release_shared_ps() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.shared_ps)
  
  return shared_ps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilesSharedLog::set_allocated_shared_ps(::std::string* shared_ps) {
  if (shared_ps != NULL) {
    
  } else {
    
  }
  shared_ps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_ps);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.shared_ps)
}

// uint64 shared_time = 3;
inline void FilesSharedLog::clear_shared_time() {
  shared_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FilesSharedLog::shared_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_time)
  return shared_time_;
}
inline void FilesSharedLog::set_shared_time(::google::protobuf::uint64 value) {
  
  shared_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_time)
}

// uint32 shared_timelenth = 4;
inline void FilesSharedLog::clear_shared_timelenth() {
  shared_timelenth_ = 0u;
}
inline ::google::protobuf::uint32 FilesSharedLog::shared_timelenth() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_timelenth)
  return shared_timelenth_;
}
inline void FilesSharedLog::set_shared_timelenth(::google::protobuf::uint32 value) {
  
  shared_timelenth_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_timelenth)
}

// bytes shared_types = 5;
inline void FilesSharedLog::clear_shared_types() {
  shared_types_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilesSharedLog::shared_types() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_types)
  return shared_types_.GetNoArena();
}
inline void FilesSharedLog::set_shared_types(const ::std::string& value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_types)
}
#if LANG_CXX11
inline void FilesSharedLog::set_shared_types(::std::string&& value) {
  
  shared_types_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.shared_types)
}
#endif
inline void FilesSharedLog::set_shared_types(const char* value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.shared_types)
}
inline void FilesSharedLog::set_shared_types(const void* value, size_t size) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.shared_types)
}
inline ::std::string* FilesSharedLog::mutable_shared_types() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.shared_types)
  return shared_types_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilesSharedLog::release_shared_types() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.shared_types)
  
  return shared_types_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilesSharedLog::set_allocated_shared_types(::std::string* shared_types) {
  if (shared_types != NULL) {
    
  } else {
    
  }
  shared_types_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_types);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.shared_types)
}

// -------------------------------------------------------------------

// MyFriend

// string friendID = 1;
inline void MyFriend::clear_friendid() {
  friendid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyFriend::friendid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.MyFriend.friendID)
  return friendid_.GetNoArena();
}
inline void MyFriend::set_friendid(const ::std::string& value) {
  
  friendid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.MyFriend.friendID)
}
#if LANG_CXX11
inline void MyFriend::set_friendid(::std::string&& value) {
  
  friendid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.MyFriend.friendID)
}
#endif
inline void MyFriend::set_friendid(const char* value) {
  
  friendid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.MyFriend.friendID)
}
inline void MyFriend::set_friendid(const char* value, size_t size) {
  
  friendid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.MyFriend.friendID)
}
inline ::std::string* MyFriend::mutable_friendid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.MyFriend.friendID)
  return friendid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyFriend::release_friendid() {
  // @@protoc_insertion_point(field_release:qiuwanli.MyFriend.friendID)
  
  return friendid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyFriend::set_allocated_friendid(::std::string* friendid) {
  if (friendid != NULL) {
    
  } else {
    
  }
  friendid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friendid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.MyFriend.friendID)
}

// string name = 2;
inline void MyFriend::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyFriend::name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.MyFriend.name)
  return name_.GetNoArena();
}
inline void MyFriend::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.MyFriend.name)
}
#if LANG_CXX11
inline void MyFriend::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.MyFriend.name)
}
#endif
inline void MyFriend::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.MyFriend.name)
}
inline void MyFriend::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.MyFriend.name)
}
inline ::std::string* MyFriend::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.MyFriend.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyFriend::release_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.MyFriend.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyFriend::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.MyFriend.name)
}

// string status = 3;
inline void MyFriend::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyFriend::status() const {
  // @@protoc_insertion_point(field_get:qiuwanli.MyFriend.status)
  return status_.GetNoArena();
}
inline void MyFriend::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.MyFriend.status)
}
#if LANG_CXX11
inline void MyFriend::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.MyFriend.status)
}
#endif
inline void MyFriend::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.MyFriend.status)
}
inline void MyFriend::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.MyFriend.status)
}
inline ::std::string* MyFriend::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.MyFriend.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyFriend::release_status() {
  // @@protoc_insertion_point(field_release:qiuwanli.MyFriend.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyFriend::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.MyFriend.status)
}

// -------------------------------------------------------------------

// FileShared

// repeated .qiuwanli.FilesSharedLog sharedlog = 1;
inline int FileShared::sharedlog_size() const {
  return sharedlog_.size();
}
inline void FileShared::clear_sharedlog() {
  sharedlog_.Clear();
}
inline const ::qiuwanli::FilesSharedLog& FileShared::sharedlog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Get(index);
}
inline ::qiuwanli::FilesSharedLog* FileShared::mutable_sharedlog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Mutable(index);
}
inline ::qiuwanli::FilesSharedLog* FileShared::add_sharedlog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >*
FileShared::mutable_sharedlog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileShared.sharedlog)
  return &sharedlog_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >&
FileShared::sharedlog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileShared.sharedlog)
  return sharedlog_;
}

// -------------------------------------------------------------------

// FriednList

// repeated .qiuwanli.MyFriend friend = 1;
inline int FriednList::friend__size() const {
  return friend__.size();
}
inline void FriednList::clear_friend_() {
  friend__.Clear();
}
inline const ::qiuwanli::MyFriend& FriednList::friend_(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FriednList.friend)
  return friend__.Get(index);
}
inline ::qiuwanli::MyFriend* FriednList::mutable_friend_(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FriednList.friend)
  return friend__.Mutable(index);
}
inline ::qiuwanli::MyFriend* FriednList::add_friend_() {
  // @@protoc_insertion_point(field_add:qiuwanli.FriednList.friend)
  return friend__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::MyFriend >*
FriednList::mutable_friend_() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FriednList.friend)
  return &friend__;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::MyFriend >&
FriednList::friend_() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FriednList.friend)
  return friend__;
}

// -------------------------------------------------------------------

// FileDownLog

// string filename = 1;
inline void FileDownLog::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDownLog::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.filename)
  return filename_.GetNoArena();
}
inline void FileDownLog::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.filename)
}
#if LANG_CXX11
inline void FileDownLog::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.filename)
}
#endif
inline void FileDownLog::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.filename)
}
inline void FileDownLog::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.filename)
}
inline ::std::string* FileDownLog::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDownLog::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDownLog::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.filename)
}

// string filepath = 2;
inline void FileDownLog::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDownLog::filepath() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.filepath)
  return filepath_.GetNoArena();
}
inline void FileDownLog::set_filepath(const ::std::string& value) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.filepath)
}
#if LANG_CXX11
inline void FileDownLog::set_filepath(::std::string&& value) {
  
  filepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.filepath)
}
#endif
inline void FileDownLog::set_filepath(const char* value) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.filepath)
}
inline void FileDownLog::set_filepath(const char* value, size_t size) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.filepath)
}
inline ::std::string* FileDownLog::mutable_filepath() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.filepath)
  return filepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDownLog::release_filepath() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.filepath)
  
  return filepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDownLog::set_allocated_filepath(::std::string* filepath) {
  if (filepath != NULL) {
    
  } else {
    
  }
  filepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.filepath)
}

// string downtime = 3;
inline void FileDownLog::clear_downtime() {
  downtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDownLog::downtime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.downtime)
  return downtime_.GetNoArena();
}
inline void FileDownLog::set_downtime(const ::std::string& value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.downtime)
}
#if LANG_CXX11
inline void FileDownLog::set_downtime(::std::string&& value) {
  
  downtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.downtime)
}
#endif
inline void FileDownLog::set_downtime(const char* value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.downtime)
}
inline void FileDownLog::set_downtime(const char* value, size_t size) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.downtime)
}
inline ::std::string* FileDownLog::mutable_downtime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.downtime)
  return downtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDownLog::release_downtime() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.downtime)
  
  return downtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDownLog::set_allocated_downtime(::std::string* downtime) {
  if (downtime != NULL) {
    
  } else {
    
  }
  downtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downtime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.downtime)
}

// string filesize = 4;
inline void FileDownLog::clear_filesize() {
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDownLog::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.filesize)
  return filesize_.GetNoArena();
}
inline void FileDownLog::set_filesize(const ::std::string& value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.filesize)
}
#if LANG_CXX11
inline void FileDownLog::set_filesize(::std::string&& value) {
  
  filesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.filesize)
}
#endif
inline void FileDownLog::set_filesize(const char* value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.filesize)
}
inline void FileDownLog::set_filesize(const char* value, size_t size) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.filesize)
}
inline ::std::string* FileDownLog::mutable_filesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.filesize)
  return filesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDownLog::release_filesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.filesize)
  
  return filesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDownLog::set_allocated_filesize(::std::string* filesize) {
  if (filesize != NULL) {
    
  } else {
    
  }
  filesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.filesize)
}

// string status = 5;
inline void FileDownLog::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDownLog::status() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.status)
  return status_.GetNoArena();
}
inline void FileDownLog::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.status)
}
#if LANG_CXX11
inline void FileDownLog::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.status)
}
#endif
inline void FileDownLog::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.status)
}
inline void FileDownLog::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.status)
}
inline ::std::string* FileDownLog::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDownLog::release_status() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDownLog::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.status)
}

// -------------------------------------------------------------------

// FileDownLogFile

// repeated .qiuwanli.FileDownLog filelog = 1;
inline int FileDownLogFile::filelog_size() const {
  return filelog_.size();
}
inline void FileDownLogFile::clear_filelog() {
  filelog_.Clear();
}
inline const ::qiuwanli::FileDownLog& FileDownLogFile::filelog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLogFile.filelog)
  return filelog_.Get(index);
}
inline ::qiuwanli::FileDownLog* FileDownLogFile::mutable_filelog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLogFile.filelog)
  return filelog_.Mutable(index);
}
inline ::qiuwanli::FileDownLog* FileDownLogFile::add_filelog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileDownLogFile.filelog)
  return filelog_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDownLog >*
FileDownLogFile::mutable_filelog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileDownLogFile.filelog)
  return &filelog_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDownLog >&
FileDownLogFile::filelog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileDownLogFile.filelog)
  return filelog_;
}

// -------------------------------------------------------------------

// FileDowningLog

// string filename = 1;
inline void FileDowningLog::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filename)
  return filename_.GetNoArena();
}
inline void FileDowningLog::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filename)
}
#if LANG_CXX11
inline void FileDowningLog::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filename)
}
#endif
inline void FileDowningLog::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filename)
}
inline void FileDowningLog::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filename)
}
inline ::std::string* FileDowningLog::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filename)
}

// string filesize = 2;
inline void FileDowningLog::clear_filesize() {
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filesize)
  return filesize_.GetNoArena();
}
inline void FileDowningLog::set_filesize(const ::std::string& value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filesize)
}
#if LANG_CXX11
inline void FileDowningLog::set_filesize(::std::string&& value) {
  
  filesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filesize)
}
#endif
inline void FileDowningLog::set_filesize(const char* value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filesize)
}
inline void FileDowningLog::set_filesize(const char* value, size_t size) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filesize)
}
inline ::std::string* FileDowningLog::mutable_filesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filesize)
  return filesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_filesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filesize)
  
  return filesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_filesize(::std::string* filesize) {
  if (filesize != NULL) {
    
  } else {
    
  }
  filesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filesize)
}

// string downtime = 3;
inline void FileDowningLog::clear_downtime() {
  downtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::downtime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.downtime)
  return downtime_.GetNoArena();
}
inline void FileDowningLog::set_downtime(const ::std::string& value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.downtime)
}
#if LANG_CXX11
inline void FileDowningLog::set_downtime(::std::string&& value) {
  
  downtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.downtime)
}
#endif
inline void FileDowningLog::set_downtime(const char* value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.downtime)
}
inline void FileDowningLog::set_downtime(const char* value, size_t size) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.downtime)
}
inline ::std::string* FileDowningLog::mutable_downtime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.downtime)
  return downtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_downtime() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.downtime)
  
  return downtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_downtime(::std::string* downtime) {
  if (downtime != NULL) {
    
  } else {
    
  }
  downtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downtime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.downtime)
}

// string Downingstatus = 4;
inline void FileDowningLog::clear_downingstatus() {
  downingstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::downingstatus() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.Downingstatus)
  return downingstatus_.GetNoArena();
}
inline void FileDowningLog::set_downingstatus(const ::std::string& value) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.Downingstatus)
}
#if LANG_CXX11
inline void FileDowningLog::set_downingstatus(::std::string&& value) {
  
  downingstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.Downingstatus)
}
#endif
inline void FileDowningLog::set_downingstatus(const char* value) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.Downingstatus)
}
inline void FileDowningLog::set_downingstatus(const char* value, size_t size) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.Downingstatus)
}
inline ::std::string* FileDowningLog::mutable_downingstatus() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.Downingstatus)
  return downingstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_downingstatus() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.Downingstatus)
  
  return downingstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_downingstatus(::std::string* downingstatus) {
  if (downingstatus != NULL) {
    
  } else {
    
  }
  downingstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downingstatus);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.Downingstatus)
}

// string filesha512 = 5;
inline void FileDowningLog::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filesha512)
  return filesha512_.GetNoArena();
}
inline void FileDowningLog::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filesha512)
}
#if LANG_CXX11
inline void FileDowningLog::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filesha512)
}
#endif
inline void FileDowningLog::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filesha512)
}
inline void FileDowningLog::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filesha512)
}
inline ::std::string* FileDowningLog::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filesha512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filesha512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filesha512)
}

// -------------------------------------------------------------------

// FileDownLogFiles

// repeated .qiuwanli.FileDowningLog FileDownLog = 1;
inline int FileDownLogFiles::filedownlog_size() const {
  return filedownlog_.size();
}
inline void FileDownLogFiles::clear_filedownlog() {
  filedownlog_.Clear();
}
inline const ::qiuwanli::FileDowningLog& FileDownLogFiles::filedownlog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_.Get(index);
}
inline ::qiuwanli::FileDowningLog* FileDownLogFiles::mutable_filedownlog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_.Mutable(index);
}
inline ::qiuwanli::FileDowningLog* FileDownLogFiles::add_filedownlog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >*
FileDownLogFiles::mutable_filedownlog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileDownLogFiles.FileDownLog)
  return &filedownlog_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >&
FileDownLogFiles::filedownlog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_;
}

// -------------------------------------------------------------------

// Path4FilesOrDir

// bytes pathtypes = 2;
inline void Path4FilesOrDir::clear_pathtypes() {
  pathtypes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Path4FilesOrDir::pathtypes() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Path4FilesOrDir.pathtypes)
  return pathtypes_.GetNoArena();
}
inline void Path4FilesOrDir::set_pathtypes(const ::std::string& value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Path4FilesOrDir.pathtypes)
}
#if LANG_CXX11
inline void Path4FilesOrDir::set_pathtypes(::std::string&& value) {
  
  pathtypes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Path4FilesOrDir.pathtypes)
}
#endif
inline void Path4FilesOrDir::set_pathtypes(const char* value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Path4FilesOrDir.pathtypes)
}
inline void Path4FilesOrDir::set_pathtypes(const void* value, size_t size) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Path4FilesOrDir.pathtypes)
}
inline ::std::string* Path4FilesOrDir::mutable_pathtypes() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Path4FilesOrDir.pathtypes)
  return pathtypes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Path4FilesOrDir::release_pathtypes() {
  // @@protoc_insertion_point(field_release:qiuwanli.Path4FilesOrDir.pathtypes)
  
  return pathtypes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path4FilesOrDir::set_allocated_pathtypes(::std::string* pathtypes) {
  if (pathtypes != NULL) {
    
  } else {
    
  }
  pathtypes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathtypes);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Path4FilesOrDir.pathtypes)
}

// string pathOrName = 1;
inline void Path4FilesOrDir::clear_pathorname() {
  pathorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Path4FilesOrDir::pathorname() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Path4FilesOrDir.pathOrName)
  return pathorname_.GetNoArena();
}
inline void Path4FilesOrDir::set_pathorname(const ::std::string& value) {
  
  pathorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Path4FilesOrDir.pathOrName)
}
#if LANG_CXX11
inline void Path4FilesOrDir::set_pathorname(::std::string&& value) {
  
  pathorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Path4FilesOrDir.pathOrName)
}
#endif
inline void Path4FilesOrDir::set_pathorname(const char* value) {
  
  pathorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Path4FilesOrDir.pathOrName)
}
inline void Path4FilesOrDir::set_pathorname(const char* value, size_t size) {
  
  pathorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Path4FilesOrDir.pathOrName)
}
inline ::std::string* Path4FilesOrDir::mutable_pathorname() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Path4FilesOrDir.pathOrName)
  return pathorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Path4FilesOrDir::release_pathorname() {
  // @@protoc_insertion_point(field_release:qiuwanli.Path4FilesOrDir.pathOrName)
  
  return pathorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path4FilesOrDir::set_allocated_pathorname(::std::string* pathorname) {
  if (pathorname != NULL) {
    
  } else {
    
  }
  pathorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathorname);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Path4FilesOrDir.pathOrName)
}

// uint32 fileId = 3;
inline void Path4FilesOrDir::clear_fileid() {
  fileid_ = 0u;
}
inline ::google::protobuf::uint32 Path4FilesOrDir::fileid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Path4FilesOrDir.fileId)
  return fileid_;
}
inline void Path4FilesOrDir::set_fileid(::google::protobuf::uint32 value) {
  
  fileid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Path4FilesOrDir.fileId)
}

// -------------------------------------------------------------------

// AllFiles

// string pathList = 1;
inline void AllFiles::clear_pathlist() {
  pathlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllFiles::pathlist() const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllFiles.pathList)
  return pathlist_.GetNoArena();
}
inline void AllFiles::set_pathlist(const ::std::string& value) {
  
  pathlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.AllFiles.pathList)
}
#if LANG_CXX11
inline void AllFiles::set_pathlist(::std::string&& value) {
  
  pathlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.AllFiles.pathList)
}
#endif
inline void AllFiles::set_pathlist(const char* value) {
  
  pathlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.AllFiles.pathList)
}
inline void AllFiles::set_pathlist(const char* value, size_t size) {
  
  pathlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.AllFiles.pathList)
}
inline ::std::string* AllFiles::mutable_pathlist() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllFiles.pathList)
  return pathlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllFiles::release_pathlist() {
  // @@protoc_insertion_point(field_release:qiuwanli.AllFiles.pathList)
  
  return pathlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllFiles::set_allocated_pathlist(::std::string* pathlist) {
  if (pathlist != NULL) {
    
  } else {
    
  }
  pathlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathlist);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.AllFiles.pathList)
}

// repeated .qiuwanli.Path4FilesOrDir filespath = 2;
inline int AllFiles::filespath_size() const {
  return filespath_.size();
}
inline void AllFiles::clear_filespath() {
  filespath_.Clear();
}
inline const ::qiuwanli::Path4FilesOrDir& AllFiles::filespath(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllFiles.filespath)
  return filespath_.Get(index);
}
inline ::qiuwanli::Path4FilesOrDir* AllFiles::mutable_filespath(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllFiles.filespath)
  return filespath_.Mutable(index);
}
inline ::qiuwanli::Path4FilesOrDir* AllFiles::add_filespath() {
  // @@protoc_insertion_point(field_add:qiuwanli.AllFiles.filespath)
  return filespath_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Path4FilesOrDir >*
AllFiles::mutable_filespath() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.AllFiles.filespath)
  return &filespath_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Path4FilesOrDir >&
AllFiles::filespath() const {
  // @@protoc_insertion_point(field_list:qiuwanli.AllFiles.filespath)
  return filespath_;
}

// -------------------------------------------------------------------

// FileInfo

// string fileId = 1;
inline void FileInfo::clear_fileid() {
  fileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::fileid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.fileId)
  return fileid_.GetNoArena();
}
inline void FileInfo::set_fileid(const ::std::string& value) {
  
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.fileId)
}
#if LANG_CXX11
inline void FileInfo::set_fileid(::std::string&& value) {
  
  fileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.fileId)
}
#endif
inline void FileInfo::set_fileid(const char* value) {
  
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.fileId)
}
inline void FileInfo::set_fileid(const char* value, size_t size) {
  
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.fileId)
}
inline ::std::string* FileInfo::mutable_fileid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.fileId)
  return fileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_fileid() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.fileId)
  
  return fileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_fileid(::std::string* fileid) {
  if (fileid != NULL) {
    
  } else {
    
  }
  fileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fileid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.fileId)
}

// uint32 filesize = 2;
inline void FileInfo::clear_filesize() {
  filesize_ = 0u;
}
inline ::google::protobuf::uint32 FileInfo::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filesize)
  return filesize_;
}
inline void FileInfo::set_filesize(::google::protobuf::uint32 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filesize)
}

// string filemd5_1 = 3;
inline void FileInfo::clear_filemd5_1() {
  filemd5_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::filemd5_1() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.GetNoArena();
}
inline void FileInfo::set_filemd5_1(const ::std::string& value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_1)
}
#if LANG_CXX11
inline void FileInfo::set_filemd5_1(::std::string&& value) {
  
  filemd5_1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_1)
}
#endif
inline void FileInfo::set_filemd5_1(const char* value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_1)
}
inline void FileInfo::set_filemd5_1(const char* value, size_t size) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_1)
}
inline ::std::string* FileInfo::mutable_filemd5_1() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_filemd5_1() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_1)
  
  return filemd5_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_filemd5_1(::std::string* filemd5_1) {
  if (filemd5_1 != NULL) {
    
  } else {
    
  }
  filemd5_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_1);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_1)
}

// string filemd5_2 = 4;
inline void FileInfo::clear_filemd5_2() {
  filemd5_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::filemd5_2() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.GetNoArena();
}
inline void FileInfo::set_filemd5_2(const ::std::string& value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_2)
}
#if LANG_CXX11
inline void FileInfo::set_filemd5_2(::std::string&& value) {
  
  filemd5_2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_2)
}
#endif
inline void FileInfo::set_filemd5_2(const char* value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_2)
}
inline void FileInfo::set_filemd5_2(const char* value, size_t size) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_2)
}
inline ::std::string* FileInfo::mutable_filemd5_2() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_filemd5_2() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_2)
  
  return filemd5_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_filemd5_2(::std::string* filemd5_2) {
  if (filemd5_2 != NULL) {
    
  } else {
    
  }
  filemd5_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_2);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_2)
}

// uint64 filecreatedate = 5;
inline void FileInfo::clear_filecreatedate() {
  filecreatedate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileInfo::filecreatedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filecreatedate)
  return filecreatedate_;
}
inline void FileInfo::set_filecreatedate(::google::protobuf::uint64 value) {
  
  filecreatedate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filecreatedate)
}

// uint32 filepathid = 7;
inline void FileInfo::clear_filepathid() {
  filepathid_ = 0u;
}
inline ::google::protobuf::uint32 FileInfo::filepathid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filepathid)
  return filepathid_;
}
inline void FileInfo::set_filepathid(::google::protobuf::uint32 value) {
  
  filepathid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filepathid)
}

// -------------------------------------------------------------------

// FileInfoFile

// repeated .qiuwanli.FileInfo info = 1;
inline int FileInfoFile::info_size() const {
  return info_.size();
}
inline void FileInfoFile::clear_info() {
  info_.Clear();
}
inline const ::qiuwanli::FileInfo& FileInfoFile::info(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoFile.info)
  return info_.Get(index);
}
inline ::qiuwanli::FileInfo* FileInfoFile::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoFile.info)
  return info_.Mutable(index);
}
inline ::qiuwanli::FileInfo* FileInfoFile::add_info() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileInfoFile.info)
  return info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfo >*
FileInfoFile::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileInfoFile.info)
  return &info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfo >&
FileInfoFile::info() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileInfoFile.info)
  return info_;
}

// -------------------------------------------------------------------

// BufferBlock

// uint32 maxsize = 1;
inline void BufferBlock::clear_maxsize() {
  maxsize_ = 0u;
}
inline ::google::protobuf::uint32 BufferBlock::maxsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlock.maxsize)
  return maxsize_;
}
inline void BufferBlock::set_maxsize(::google::protobuf::uint32 value) {
  
  maxsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlock.maxsize)
}

// uint32 currsize = 2;
inline void BufferBlock::clear_currsize() {
  currsize_ = 0u;
}
inline ::google::protobuf::uint32 BufferBlock::currsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlock.currsize)
  return currsize_;
}
inline void BufferBlock::set_currsize(::google::protobuf::uint32 value) {
  
  currsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlock.currsize)
}

// bytes bufferdata = 3;
inline void BufferBlock::clear_bufferdata() {
  bufferdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BufferBlock::bufferdata() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlock.bufferdata)
  return bufferdata_.GetNoArena();
}
inline void BufferBlock::set_bufferdata(const ::std::string& value) {
  
  bufferdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlock.bufferdata)
}
#if LANG_CXX11
inline void BufferBlock::set_bufferdata(::std::string&& value) {
  
  bufferdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BufferBlock.bufferdata)
}
#endif
inline void BufferBlock::set_bufferdata(const char* value) {
  
  bufferdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BufferBlock.bufferdata)
}
inline void BufferBlock::set_bufferdata(const void* value, size_t size) {
  
  bufferdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BufferBlock.bufferdata)
}
inline ::std::string* BufferBlock::mutable_bufferdata() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BufferBlock.bufferdata)
  return bufferdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BufferBlock::release_bufferdata() {
  // @@protoc_insertion_point(field_release:qiuwanli.BufferBlock.bufferdata)
  
  return bufferdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BufferBlock::set_allocated_bufferdata(::std::string* bufferdata) {
  if (bufferdata != NULL) {
    
  } else {
    
  }
  bufferdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bufferdata);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BufferBlock.bufferdata)
}

// -------------------------------------------------------------------

// BufferBlockPool

// uint32 PoolMaxSize = 1;
inline void BufferBlockPool::clear_poolmaxsize() {
  poolmaxsize_ = 0u;
}
inline ::google::protobuf::uint32 BufferBlockPool::poolmaxsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlockPool.PoolMaxSize)
  return poolmaxsize_;
}
inline void BufferBlockPool::set_poolmaxsize(::google::protobuf::uint32 value) {
  
  poolmaxsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlockPool.PoolMaxSize)
}

// uint32 PoolSize = 2;
inline void BufferBlockPool::clear_poolsize() {
  poolsize_ = 0u;
}
inline ::google::protobuf::uint32 BufferBlockPool::poolsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlockPool.PoolSize)
  return poolsize_;
}
inline void BufferBlockPool::set_poolsize(::google::protobuf::uint32 value) {
  
  poolsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlockPool.PoolSize)
}

// repeated .qiuwanli.BufferBlock buffer = 3;
inline int BufferBlockPool::buffer_size() const {
  return buffer_.size();
}
inline void BufferBlockPool::clear_buffer() {
  buffer_.Clear();
}
inline const ::qiuwanli::BufferBlock& BufferBlockPool::buffer(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlockPool.buffer)
  return buffer_.Get(index);
}
inline ::qiuwanli::BufferBlock* BufferBlockPool::mutable_buffer(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BufferBlockPool.buffer)
  return buffer_.Mutable(index);
}
inline ::qiuwanli::BufferBlock* BufferBlockPool::add_buffer() {
  // @@protoc_insertion_point(field_add:qiuwanli.BufferBlockPool.buffer)
  return buffer_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BufferBlock >*
BufferBlockPool::mutable_buffer() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BufferBlockPool.buffer)
  return &buffer_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BufferBlock >&
BufferBlockPool::buffer() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BufferBlockPool.buffer)
  return buffer_;
}

// -------------------------------------------------------------------

// FileBlockInfo

// string file_id = 1;
inline void FileBlockInfo::clear_file_id() {
  file_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileBlockInfo::file_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_id)
  return file_id_.GetNoArena();
}
inline void FileBlockInfo::set_file_id(const ::std::string& value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_id)
}
#if LANG_CXX11
inline void FileBlockInfo::set_file_id(::std::string&& value) {
  
  file_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_id)
}
#endif
inline void FileBlockInfo::set_file_id(const char* value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_id)
}
inline void FileBlockInfo::set_file_id(const char* value, size_t size) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_id)
}
inline ::std::string* FileBlockInfo::mutable_file_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_id)
  return file_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileBlockInfo::release_file_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_id)
  
  return file_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileBlockInfo::set_allocated_file_id(::std::string* file_id) {
  if (file_id != NULL) {
    
  } else {
    
  }
  file_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_id)
}

// uint32 fileblock_num = 2;
inline void FileBlockInfo::clear_fileblock_num() {
  fileblock_num_ = 0u;
}
inline ::google::protobuf::uint32 FileBlockInfo::fileblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.fileblock_num)
  return fileblock_num_;
}
inline void FileBlockInfo::set_fileblock_num(::google::protobuf::uint32 value) {
  
  fileblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.fileblock_num)
}

// string file_CRC = 3;
inline void FileBlockInfo::clear_file_crc() {
  file_crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileBlockInfo::file_crc() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.GetNoArena();
}
inline void FileBlockInfo::set_file_crc(const ::std::string& value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_CRC)
}
#if LANG_CXX11
inline void FileBlockInfo::set_file_crc(::std::string&& value) {
  
  file_crc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_CRC)
}
#endif
inline void FileBlockInfo::set_file_crc(const char* value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_CRC)
}
inline void FileBlockInfo::set_file_crc(const char* value, size_t size) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_CRC)
}
inline ::std::string* FileBlockInfo::mutable_file_crc() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileBlockInfo::release_file_crc() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_CRC)
  
  return file_crc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileBlockInfo::set_allocated_file_crc(::std::string* file_crc) {
  if (file_crc != NULL) {
    
  } else {
    
  }
  file_crc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_crc);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_CRC)
}

// -------------------------------------------------------------------

// filetemp

// .qiuwanli.FileBlockInfo fileinfo = 1;
inline bool filetemp::has_fileinfo() const {
  return this != internal_default_instance() && fileinfo_ != NULL;
}
inline void filetemp::clear_fileinfo() {
  if (GetArenaNoVirtual() == NULL && fileinfo_ != NULL) delete fileinfo_;
  fileinfo_ = NULL;
}
inline const ::qiuwanli::FileBlockInfo& filetemp::fileinfo() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filetemp.fileinfo)
  return fileinfo_ != NULL ? *fileinfo_
                         : *::qiuwanli::FileBlockInfo::internal_default_instance();
}
inline ::qiuwanli::FileBlockInfo* filetemp::mutable_fileinfo() {
  
  if (fileinfo_ == NULL) {
    fileinfo_ = new ::qiuwanli::FileBlockInfo;
  }
  // @@protoc_insertion_point(field_mutable:qiuwanli.filetemp.fileinfo)
  return fileinfo_;
}
inline ::qiuwanli::FileBlockInfo* filetemp::release_fileinfo() {
  // @@protoc_insertion_point(field_release:qiuwanli.filetemp.fileinfo)
  
  ::qiuwanli::FileBlockInfo* temp = fileinfo_;
  fileinfo_ = NULL;
  return temp;
}
inline void filetemp::set_allocated_fileinfo(::qiuwanli::FileBlockInfo* fileinfo) {
  delete fileinfo_;
  fileinfo_ = fileinfo;
  if (fileinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filetemp.fileinfo)
}

// bytes BitMap = 2;
inline void filetemp::clear_bitmap() {
  bitmap_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& filetemp::bitmap() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filetemp.BitMap)
  return bitmap_.GetNoArena();
}
inline void filetemp::set_bitmap(const ::std::string& value) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filetemp.BitMap)
}
#if LANG_CXX11
inline void filetemp::set_bitmap(::std::string&& value) {
  
  bitmap_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filetemp.BitMap)
}
#endif
inline void filetemp::set_bitmap(const char* value) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filetemp.BitMap)
}
inline void filetemp::set_bitmap(const void* value, size_t size) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filetemp.BitMap)
}
inline ::std::string* filetemp::mutable_bitmap() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filetemp.BitMap)
  return bitmap_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* filetemp::release_bitmap() {
  // @@protoc_insertion_point(field_release:qiuwanli.filetemp.BitMap)
  
  return bitmap_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void filetemp::set_allocated_bitmap(::std::string* bitmap) {
  if (bitmap != NULL) {
    
  } else {
    
  }
  bitmap_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bitmap);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filetemp.BitMap)
}

// string NowStatus = 3;
inline void filetemp::clear_nowstatus() {
  nowstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& filetemp::nowstatus() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filetemp.NowStatus)
  return nowstatus_.GetNoArena();
}
inline void filetemp::set_nowstatus(const ::std::string& value) {
  
  nowstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filetemp.NowStatus)
}
#if LANG_CXX11
inline void filetemp::set_nowstatus(::std::string&& value) {
  
  nowstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filetemp.NowStatus)
}
#endif
inline void filetemp::set_nowstatus(const char* value) {
  
  nowstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filetemp.NowStatus)
}
inline void filetemp::set_nowstatus(const char* value, size_t size) {
  
  nowstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filetemp.NowStatus)
}
inline ::std::string* filetemp::mutable_nowstatus() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filetemp.NowStatus)
  return nowstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* filetemp::release_nowstatus() {
  // @@protoc_insertion_point(field_release:qiuwanli.filetemp.NowStatus)
  
  return nowstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void filetemp::set_allocated_nowstatus(::std::string* nowstatus) {
  if (nowstatus != NULL) {
    
  } else {
    
  }
  nowstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nowstatus);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filetemp.NowStatus)
}

// -------------------------------------------------------------------

// allfiles

// string user_id = 1;
inline void allfiles::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& allfiles::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.user_id)
  return user_id_.GetNoArena();
}
inline void allfiles::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.user_id)
}
#if LANG_CXX11
inline void allfiles::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.user_id)
}
#endif
inline void allfiles::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.user_id)
}
inline void allfiles::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.user_id)
}
inline ::std::string* allfiles::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* allfiles::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void allfiles::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.user_id)
}

// uint32 files_ip = 2;
inline void allfiles::clear_files_ip() {
  files_ip_ = 0u;
}
inline ::google::protobuf::uint32 allfiles::files_ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.files_ip)
  return files_ip_;
}
inline void allfiles::set_files_ip(::google::protobuf::uint32 value) {
  
  files_ip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.files_ip)
}

// string shared_id = 3;
inline void allfiles::clear_shared_id() {
  shared_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& allfiles::shared_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.shared_id)
  return shared_id_.GetNoArena();
}
inline void allfiles::set_shared_id(const ::std::string& value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.shared_id)
}
#if LANG_CXX11
inline void allfiles::set_shared_id(::std::string&& value) {
  
  shared_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.shared_id)
}
#endif
inline void allfiles::set_shared_id(const char* value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.shared_id)
}
inline void allfiles::set_shared_id(const char* value, size_t size) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.shared_id)
}
inline ::std::string* allfiles::mutable_shared_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.shared_id)
  return shared_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* allfiles::release_shared_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.shared_id)
  
  return shared_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void allfiles::set_allocated_shared_id(::std::string* shared_id) {
  if (shared_id != NULL) {
    
  } else {
    
  }
  shared_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.shared_id)
}

// uint32 filesblock_num = 4;
inline void allfiles::clear_filesblock_num() {
  filesblock_num_ = 0u;
}
inline ::google::protobuf::uint32 allfiles::filesblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_num)
  return filesblock_num_;
}
inline void allfiles::set_filesblock_num(::google::protobuf::uint32 value) {
  
  filesblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_num)
}

// uint32 filesblock_start = 5;
inline void allfiles::clear_filesblock_start() {
  filesblock_start_ = 0u;
}
inline ::google::protobuf::uint32 allfiles::filesblock_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_start)
  return filesblock_start_;
}
inline void allfiles::set_filesblock_start(::google::protobuf::uint32 value) {
  
  filesblock_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_start)
}

// -------------------------------------------------------------------

// files_small

// string file_small_name = 1;
inline void files_small::clear_file_small_name() {
  file_small_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& files_small::file_small_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_name)
  return file_small_name_.GetNoArena();
}
inline void files_small::set_file_small_name(const ::std::string& value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_name)
}
#if LANG_CXX11
inline void files_small::set_file_small_name(::std::string&& value) {
  
  file_small_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small.file_small_name)
}
#endif
inline void files_small::set_file_small_name(const char* value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small.file_small_name)
}
inline void files_small::set_file_small_name(const char* value, size_t size) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small.file_small_name)
}
inline ::std::string* files_small::mutable_file_small_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small.file_small_name)
  return file_small_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* files_small::release_file_small_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small.file_small_name)
  
  return file_small_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void files_small::set_allocated_file_small_name(::std::string* file_small_name) {
  if (file_small_name != NULL) {
    
  } else {
    
  }
  file_small_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_small_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small.file_small_name)
}

// uint32 file_small_create_time = 2;
inline void files_small::clear_file_small_create_time() {
  file_small_create_time_ = 0u;
}
inline ::google::protobuf::uint32 files_small::file_small_create_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_create_time)
  return file_small_create_time_;
}
inline void files_small::set_file_small_create_time(::google::protobuf::uint32 value) {
  
  file_small_create_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_create_time)
}

// uint32 file_small_start = 3;
inline void files_small::clear_file_small_start() {
  file_small_start_ = 0u;
}
inline ::google::protobuf::uint32 files_small::file_small_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_start)
  return file_small_start_;
}
inline void files_small::set_file_small_start(::google::protobuf::uint32 value) {
  
  file_small_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_start)
}

// uint32 file_small_length = 4;
inline void files_small::clear_file_small_length() {
  file_small_length_ = 0u;
}
inline ::google::protobuf::uint32 files_small::file_small_length() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_length)
  return file_small_length_;
}
inline void files_small::set_file_small_length(::google::protobuf::uint32 value) {
  
  file_small_length_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_length)
}

// -------------------------------------------------------------------

// files_small_block

// bytes files_small_blocks = 1;
inline void files_small_block::clear_files_small_blocks() {
  files_small_blocks_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& files_small_block::files_small_blocks() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.GetNoArena();
}
inline void files_small_block::set_files_small_blocks(const ::std::string& value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small_block.files_small_blocks)
}
#if LANG_CXX11
inline void files_small_block::set_files_small_blocks(::std::string&& value) {
  
  files_small_blocks_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small_block.files_small_blocks)
}
#endif
inline void files_small_block::set_files_small_blocks(const char* value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small_block.files_small_blocks)
}
inline void files_small_block::set_files_small_blocks(const void* value, size_t size) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small_block.files_small_blocks)
}
inline ::std::string* files_small_block::mutable_files_small_blocks() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* files_small_block::release_files_small_blocks() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small_block.files_small_blocks)
  
  return files_small_blocks_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void files_small_block::set_allocated_files_small_blocks(::std::string* files_small_blocks) {
  if (files_small_blocks != NULL) {
    
  } else {
    
  }
  files_small_blocks_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), files_small_blocks);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small_block.files_small_blocks)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MyDataStruct_2eproto__INCLUDED

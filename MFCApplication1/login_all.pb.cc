// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login_all.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login_all.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qiuwanli {
class userDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<user> {
} _user_default_instance_;
class realuserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<realuser> {
} _realuser_default_instance_;
class userregDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<userreg> {
} _userreg_default_instance_;
class FileInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileInfo> {
} _FileInfo_default_instance_;
class FileBlockInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileBlockInfo> {
} _FileBlockInfo_default_instance_;
class loginIpLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<loginIpLog> {
} _loginIpLog_default_instance_;
class logDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<log> {
} _log_default_instance_;
class allfilesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<allfiles> {
} _allfiles_default_instance_;
class sharedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<shared> {
} _shared_default_instance_;
class files_smallDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<files_small> {
} _files_small_default_instance_;
class files_small_blockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<files_small_block> {
} _files_small_block_default_instance_;
class filespathDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<filespath> {
} _filespath_default_instance_;

namespace protobuf_login_5fall_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user, user_password_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user, user_client_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user, login_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(user, user_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_name_real_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_idcard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_live_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_qq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_mirchat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_bri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realuser, user_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, user_password_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, user_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, reg_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filemd5_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filemd5_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, folecreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filepathid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, fileblock_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, file_crc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginIpLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginIpLog, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginIpLog, loginip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginIpLog, logindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(loginIpLog, user_client_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log, log_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log, log_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log, log_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log, user_client_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, files_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, shared_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, filesblock_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, filesblock_start_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shared, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shared, shared_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shared, shared_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shared, shared_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shared, shared_timelenth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(shared, shared_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small_block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small_block, files_small_blocks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filespath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filespath, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filespath, pathtypes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filespath, pathid_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(user)},
  { 10, -1, sizeof(realuser)},
  { 24, -1, sizeof(userreg)},
  { 32, -1, sizeof(FileInfo)},
  { 43, -1, sizeof(FileBlockInfo)},
  { 50, -1, sizeof(loginIpLog)},
  { 58, -1, sizeof(log)},
  { 67, -1, sizeof(allfiles)},
  { 76, -1, sizeof(shared)},
  { 85, -1, sizeof(files_small)},
  { 93, -1, sizeof(files_small_block)},
  { 98, -1, sizeof(filespath)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_user_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_realuser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_userreg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileBlockInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_loginIpLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_log_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_allfiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_shared_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_files_small_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_files_small_block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_filespath_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "login_all.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

}  // namespace

void TableStruct::Shutdown() {
  _user_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _realuser_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _userreg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _FileInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _FileBlockInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _loginIpLog_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _log_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _allfiles_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _shared_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _files_small_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _files_small_block_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _filespath_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _user_default_instance_.DefaultConstruct();
  _realuser_default_instance_.DefaultConstruct();
  _userreg_default_instance_.DefaultConstruct();
  _FileInfo_default_instance_.DefaultConstruct();
  _FileBlockInfo_default_instance_.DefaultConstruct();
  _loginIpLog_default_instance_.DefaultConstruct();
  _log_default_instance_.DefaultConstruct();
  _allfiles_default_instance_.DefaultConstruct();
  _shared_default_instance_.DefaultConstruct();
  _files_small_default_instance_.DefaultConstruct();
  _files_small_block_default_instance_.DefaultConstruct();
  _filespath_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017login_all.proto\022\010qiuwanli\"\206\001\n\004user\022\017\n\007"
      "user_id\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t\022\031\n\021user"
      "_password_md5\030\003 \001(\t\022\030\n\020user_client_UUID\030"
      "\004 \001(\t\022\022\n\nlogin_code\030\005 \001(\t\022\021\n\tuser_type\030\006"
      " \001(\014\"\332\001\n\010realuser\022\017\n\007user_id\030\001 \001(\t\022\026\n\016us"
      "er_name_real\030\002 \001(\t\022\023\n\013user_idcard\030\003 \001(\t\022"
      "\031\n\021user_live_address\030\004 \001(\t\022\022\n\nuser_phone"
      "\030\005 \001(\t\022\017\n\007user_qq\030\006 \001(\t\022\024\n\014user_mirchat\030"
      "\007 \001(\t\022\022\n\nuser_email\030\010 \001(\t\022\020\n\010user_bri\030\t "
      "\001(\t\022\024\n\014user_address\030\n \001(\t\"]\n\007userreg\022\021\n\t"
      "user_name\030\001 \001(\t\022\031\n\021user_password_md5\030\002 \001"
      "(\t\022\022\n\nuser_phone\030\003 \001(\t\022\020\n\010reg_code\030\004 \001(\t"
      "\"\222\001\n\010FileInfo\022\020\n\010filename\030\001 \001(\t\022\020\n\010files"
      "ize\030\002 \001(\r\022\021\n\tfilemd5_1\030\003 \001(\t\022\021\n\tfilemd5_"
      "2\030\004 \001(\t\022\026\n\016folecreatedate\030\005 \001(\004\022\020\n\010filet"
      "ype\030\006 \001(\014\022\022\n\nfilepathid\030\007 \001(\r\"I\n\rFileBlo"
      "ckInfo\022\017\n\007file_id\030\001 \001(\t\022\025\n\rfileblock_num"
      "\030\002 \001(\r\022\020\n\010file_CRC\030\003 \001(\t\"[\n\nloginIpLog\022\017"
      "\n\007user_id\030\001 \001(\t\022\017\n\007loginip\030\002 \001(\r\022\021\n\tlogi"
      "ndate\030\003 \001(\004\022\030\n\020user_client_UUID\030\004 \001(\t\"f\n"
      "\003log\022\017\n\007user_id\030\001 \001(\t\022\020\n\010log_date\030\002 \001(\004\022"
      "\020\n\010log_info\030\003 \001(\t\022\020\n\010log_type\030\004 \001(\014\022\030\n\020u"
      "ser_client_UUID\030\005 \001(\t\"r\n\010allfiles\022\017\n\007use"
      "r_id\030\001 \001(\t\022\020\n\010files_ip\030\002 \001(\r\022\021\n\tshared_i"
      "d\030\003 \001(\t\022\026\n\016filesblock_num\030\004 \001(\r\022\030\n\020files"
      "block_start\030\005 \001(\r\"t\n\006shared\022\022\n\nshared_ur"
      "l\030\001 \001(\t\022\021\n\tshared_ps\030\002 \001(\t\022\023\n\013shared_tim"
      "e\030\003 \001(\004\022\030\n\020shared_timelenth\030\004 \001(\r\022\024\n\014sha"
      "red_types\030\005 \001(\014\"{\n\013files_small\022\027\n\017file_s"
      "mall_name\030\001 \001(\t\022\036\n\026file_small_create_tim"
      "e\030\002 \001(\r\022\030\n\020file_small_start\030\003 \001(\r\022\031\n\021fil"
      "e_small_length\030\004 \001(\r\"/\n\021files_small_bloc"
      "k\022\032\n\022files_small_blocks\030\001 \001(\014\"<\n\tfilespa"
      "th\022\014\n\004path\030\001 \001(\t\022\021\n\tpathtypes\030\002 \001(\014\022\016\n\006p"
      "athid\030\003 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1379);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login_all.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_login_5fall_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int user::kUserIdFieldNumber;
const int user::kUserNameFieldNumber;
const int user::kUserPasswordMd5FieldNumber;
const int user::kUserClientUUIDFieldNumber;
const int user::kLoginCodeFieldNumber;
const int user::kUserTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

user::user()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.user)
}
user::user(const user& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_password_md5().size() > 0) {
    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  login_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_code().size() > 0) {
    login_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_code_);
  }
  user_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_type().size() > 0) {
    user_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_type_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.user)
}

void user::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

user::~user() {
  // @@protoc_insertion_point(destructor:qiuwanli.user)
  SharedDtor();
}

void user::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void user::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* user::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[0].descriptor;
}

const user& user::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

user* user::New(::google::protobuf::Arena* arena) const {
  user* n = new user;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void user::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.user)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool user::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.user)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.user.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.user.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_password_md5 = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_password_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_password_md5().data(), this->user_password_md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.user.user_password_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.user.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_code = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_code().data(), this->login_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.user.login_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes user_type = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.user)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.user)
  return false;
#undef DO_
}

void user::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.user)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // string user_password_md5 = 3;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_password_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_password_md5(), output);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_client_uuid(), output);
  }

  // string login_code = 5;
  if (this->login_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_code().data(), this->login_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.login_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->login_code(), output);
  }

  // bytes user_type = 6;
  if (this->user_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->user_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.user)
}

::google::protobuf::uint8* user::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.user)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // string user_password_md5 = 3;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_password_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_password_md5(), target);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_client_uuid(), target);
  }

  // string login_code = 5;
  if (this->login_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_code().data(), this->login_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.user.login_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->login_code(), target);
  }

  // bytes user_type = 6;
  if (this->user_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->user_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.user)
  return target;
}

size_t user::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.user)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string user_password_md5 = 3;
  if (this->user_password_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_password_md5());
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  // string login_code = 5;
  if (this->login_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_code());
  }

  // bytes user_type = 6;
  if (this->user_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->user_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void user::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.user)
  GOOGLE_DCHECK_NE(&from, this);
  const user* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const user>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.user)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.user)
    MergeFrom(*source);
  }
}

void user::MergeFrom(const user& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.user)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.user_password_md5().size() > 0) {

    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  if (from.login_code().size() > 0) {

    login_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_code_);
  }
  if (from.user_type().size() > 0) {

    user_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_type_);
  }
}

void user::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user::CopyFrom(const user& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.user)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user::IsInitialized() const {
  return true;
}

void user::Swap(user* other) {
  if (other == this) return;
  InternalSwap(other);
}
void user::InternalSwap(user* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  user_password_md5_.Swap(&other->user_password_md5_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  login_code_.Swap(&other->login_code_);
  user_type_.Swap(&other->user_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata user::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// user

// string user_id = 1;
void user::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& user::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_id)
  return user_id_.GetNoArena();
}
void user::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_id)
}
#if LANG_CXX11
void user::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_id)
}
#endif
void user::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_id)
}
void user::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_id)
}
::std::string* user::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* user::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void user::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_id)
}

// string user_name = 2;
void user::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& user::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_name)
  return user_name_.GetNoArena();
}
void user::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_name)
}
#if LANG_CXX11
void user::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_name)
}
#endif
void user::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_name)
}
void user::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_name)
}
::std::string* user::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* user::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void user::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_name)
}

// string user_password_md5 = 3;
void user::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& user::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_password_md5)
  return user_password_md5_.GetNoArena();
}
void user::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_password_md5)
}
#if LANG_CXX11
void user::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_password_md5)
}
#endif
void user::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_password_md5)
}
void user::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_password_md5)
}
::std::string* user::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* user::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void user::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_password_md5)
}

// string user_client_UUID = 4;
void user::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& user::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void user::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_client_UUID)
}
#if LANG_CXX11
void user::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_client_UUID)
}
#endif
void user::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_client_UUID)
}
void user::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_client_UUID)
}
::std::string* user::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* user::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void user::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_client_UUID)
}

// string login_code = 5;
void user::clear_login_code() {
  login_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& user::login_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.login_code)
  return login_code_.GetNoArena();
}
void user::set_login_code(const ::std::string& value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.login_code)
}
#if LANG_CXX11
void user::set_login_code(::std::string&& value) {
  
  login_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.login_code)
}
#endif
void user::set_login_code(const char* value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.login_code)
}
void user::set_login_code(const char* value, size_t size) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.login_code)
}
::std::string* user::mutable_login_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.login_code)
  return login_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* user::release_login_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.login_code)
  
  return login_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void user::set_allocated_login_code(::std::string* login_code) {
  if (login_code != NULL) {
    
  } else {
    
  }
  login_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.login_code)
}

// bytes user_type = 6;
void user::clear_user_type() {
  user_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& user::user_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_type)
  return user_type_.GetNoArena();
}
void user::set_user_type(const ::std::string& value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_type)
}
#if LANG_CXX11
void user::set_user_type(::std::string&& value) {
  
  user_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_type)
}
#endif
void user::set_user_type(const char* value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_type)
}
void user::set_user_type(const void* value, size_t size) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_type)
}
::std::string* user::mutable_user_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_type)
  return user_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* user::release_user_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_type)
  
  return user_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void user::set_allocated_user_type(::std::string* user_type) {
  if (user_type != NULL) {
    
  } else {
    
  }
  user_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int realuser::kUserIdFieldNumber;
const int realuser::kUserNameRealFieldNumber;
const int realuser::kUserIdcardFieldNumber;
const int realuser::kUserLiveAddressFieldNumber;
const int realuser::kUserPhoneFieldNumber;
const int realuser::kUserQqFieldNumber;
const int realuser::kUserMirchatFieldNumber;
const int realuser::kUserEmailFieldNumber;
const int realuser::kUserBriFieldNumber;
const int realuser::kUserAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

realuser::realuser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.realuser)
}
realuser::realuser(const realuser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_name_real_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name_real().size() > 0) {
    user_name_real_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_real_);
  }
  user_idcard_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_idcard().size() > 0) {
    user_idcard_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_idcard_);
  }
  user_live_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_live_address().size() > 0) {
    user_live_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_live_address_);
  }
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_phone().size() > 0) {
    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  user_qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_qq().size() > 0) {
    user_qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_qq_);
  }
  user_mirchat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_mirchat().size() > 0) {
    user_mirchat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_mirchat_);
  }
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_email().size() > 0) {
    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  user_bri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_bri().size() > 0) {
    user_bri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_bri_);
  }
  user_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_address().size() > 0) {
    user_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_address_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.realuser)
}

void realuser::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_real_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_idcard_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_live_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_mirchat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_bri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

realuser::~realuser() {
  // @@protoc_insertion_point(destructor:qiuwanli.realuser)
  SharedDtor();
}

void realuser::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_real_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_idcard_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_live_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_qq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_mirchat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_bri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void realuser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* realuser::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[1].descriptor;
}

const realuser& realuser::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

realuser* realuser::New(::google::protobuf::Arena* arena) const {
  realuser* n = new realuser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void realuser::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.realuser)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_real_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_live_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_mirchat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_bri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool realuser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.realuser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name_real = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name_real()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name_real().data(), this->user_name_real().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_name_real"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_idcard = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_idcard()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_idcard().data(), this->user_idcard().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_idcard"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_live_address = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_live_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_live_address().data(), this->user_live_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_live_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_phone = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_phone().data(), this->user_phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_qq = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_qq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_qq().data(), this->user_qq().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_qq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_mirchat = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_mirchat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_mirchat().data(), this->user_mirchat().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_mirchat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_email = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_email().data(), this->user_email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_bri = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_bri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_bri().data(), this->user_bri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_bri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_address = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_address().data(), this->user_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.realuser.user_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.realuser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.realuser)
  return false;
#undef DO_
}

void realuser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.realuser)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string user_name_real = 2;
  if (this->user_name_real().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name_real().data(), this->user_name_real().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_name_real");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name_real(), output);
  }

  // string user_idcard = 3;
  if (this->user_idcard().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_idcard().data(), this->user_idcard().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_idcard");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_idcard(), output);
  }

  // string user_live_address = 4;
  if (this->user_live_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_live_address().data(), this->user_live_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_live_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_live_address(), output);
  }

  // string user_phone = 5;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_phone(), output);
  }

  // string user_qq = 6;
  if (this->user_qq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_qq().data(), this->user_qq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_qq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_qq(), output);
  }

  // string user_mirchat = 7;
  if (this->user_mirchat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_mirchat().data(), this->user_mirchat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_mirchat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_mirchat(), output);
  }

  // string user_email = 8;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), this->user_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user_email(), output);
  }

  // string user_bri = 9;
  if (this->user_bri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_bri().data(), this->user_bri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_bri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->user_bri(), output);
  }

  // string user_address = 10;
  if (this->user_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_address().data(), this->user_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->user_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.realuser)
}

::google::protobuf::uint8* realuser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.realuser)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string user_name_real = 2;
  if (this->user_name_real().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name_real().data(), this->user_name_real().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_name_real");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name_real(), target);
  }

  // string user_idcard = 3;
  if (this->user_idcard().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_idcard().data(), this->user_idcard().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_idcard");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_idcard(), target);
  }

  // string user_live_address = 4;
  if (this->user_live_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_live_address().data(), this->user_live_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_live_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_live_address(), target);
  }

  // string user_phone = 5;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_phone(), target);
  }

  // string user_qq = 6;
  if (this->user_qq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_qq().data(), this->user_qq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_qq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_qq(), target);
  }

  // string user_mirchat = 7;
  if (this->user_mirchat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_mirchat().data(), this->user_mirchat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_mirchat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->user_mirchat(), target);
  }

  // string user_email = 8;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), this->user_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user_email(), target);
  }

  // string user_bri = 9;
  if (this->user_bri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_bri().data(), this->user_bri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_bri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->user_bri(), target);
  }

  // string user_address = 10;
  if (this->user_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_address().data(), this->user_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.realuser.user_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->user_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.realuser)
  return target;
}

size_t realuser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.realuser)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string user_name_real = 2;
  if (this->user_name_real().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name_real());
  }

  // string user_idcard = 3;
  if (this->user_idcard().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_idcard());
  }

  // string user_live_address = 4;
  if (this->user_live_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_live_address());
  }

  // string user_phone = 5;
  if (this->user_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_phone());
  }

  // string user_qq = 6;
  if (this->user_qq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_qq());
  }

  // string user_mirchat = 7;
  if (this->user_mirchat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_mirchat());
  }

  // string user_email = 8;
  if (this->user_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_email());
  }

  // string user_bri = 9;
  if (this->user_bri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_bri());
  }

  // string user_address = 10;
  if (this->user_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void realuser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.realuser)
  GOOGLE_DCHECK_NE(&from, this);
  const realuser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const realuser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.realuser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.realuser)
    MergeFrom(*source);
  }
}

void realuser::MergeFrom(const realuser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.realuser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_name_real().size() > 0) {

    user_name_real_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_real_);
  }
  if (from.user_idcard().size() > 0) {

    user_idcard_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_idcard_);
  }
  if (from.user_live_address().size() > 0) {

    user_live_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_live_address_);
  }
  if (from.user_phone().size() > 0) {

    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  if (from.user_qq().size() > 0) {

    user_qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_qq_);
  }
  if (from.user_mirchat().size() > 0) {

    user_mirchat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_mirchat_);
  }
  if (from.user_email().size() > 0) {

    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  if (from.user_bri().size() > 0) {

    user_bri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_bri_);
  }
  if (from.user_address().size() > 0) {

    user_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_address_);
  }
}

void realuser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.realuser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void realuser::CopyFrom(const realuser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.realuser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool realuser::IsInitialized() const {
  return true;
}

void realuser::Swap(realuser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void realuser::InternalSwap(realuser* other) {
  user_id_.Swap(&other->user_id_);
  user_name_real_.Swap(&other->user_name_real_);
  user_idcard_.Swap(&other->user_idcard_);
  user_live_address_.Swap(&other->user_live_address_);
  user_phone_.Swap(&other->user_phone_);
  user_qq_.Swap(&other->user_qq_);
  user_mirchat_.Swap(&other->user_mirchat_);
  user_email_.Swap(&other->user_email_);
  user_bri_.Swap(&other->user_bri_);
  user_address_.Swap(&other->user_address_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata realuser::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// realuser

// string user_id = 1;
void realuser::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_id)
  return user_id_.GetNoArena();
}
void realuser::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_id)
}
#if LANG_CXX11
void realuser::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_id)
}
#endif
void realuser::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_id)
}
void realuser::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_id)
}
::std::string* realuser::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_id)
}

// string user_name_real = 2;
void realuser::clear_user_name_real() {
  user_name_real_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_name_real() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_name_real)
  return user_name_real_.GetNoArena();
}
void realuser::set_user_name_real(const ::std::string& value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_name_real)
}
#if LANG_CXX11
void realuser::set_user_name_real(::std::string&& value) {
  
  user_name_real_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_name_real)
}
#endif
void realuser::set_user_name_real(const char* value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_name_real)
}
void realuser::set_user_name_real(const char* value, size_t size) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_name_real)
}
::std::string* realuser::mutable_user_name_real() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_name_real)
  return user_name_real_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_name_real() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_name_real)
  
  return user_name_real_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_name_real(::std::string* user_name_real) {
  if (user_name_real != NULL) {
    
  } else {
    
  }
  user_name_real_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name_real);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_name_real)
}

// string user_idcard = 3;
void realuser::clear_user_idcard() {
  user_idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_idcard() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_idcard)
  return user_idcard_.GetNoArena();
}
void realuser::set_user_idcard(const ::std::string& value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_idcard)
}
#if LANG_CXX11
void realuser::set_user_idcard(::std::string&& value) {
  
  user_idcard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_idcard)
}
#endif
void realuser::set_user_idcard(const char* value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_idcard)
}
void realuser::set_user_idcard(const char* value, size_t size) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_idcard)
}
::std::string* realuser::mutable_user_idcard() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_idcard)
  return user_idcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_idcard() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_idcard)
  
  return user_idcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_idcard(::std::string* user_idcard) {
  if (user_idcard != NULL) {
    
  } else {
    
  }
  user_idcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_idcard);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_idcard)
}

// string user_live_address = 4;
void realuser::clear_user_live_address() {
  user_live_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_live_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_live_address)
  return user_live_address_.GetNoArena();
}
void realuser::set_user_live_address(const ::std::string& value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_live_address)
}
#if LANG_CXX11
void realuser::set_user_live_address(::std::string&& value) {
  
  user_live_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_live_address)
}
#endif
void realuser::set_user_live_address(const char* value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_live_address)
}
void realuser::set_user_live_address(const char* value, size_t size) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_live_address)
}
::std::string* realuser::mutable_user_live_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_live_address)
  return user_live_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_live_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_live_address)
  
  return user_live_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_live_address(::std::string* user_live_address) {
  if (user_live_address != NULL) {
    
  } else {
    
  }
  user_live_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_live_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_live_address)
}

// string user_phone = 5;
void realuser::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_phone)
  return user_phone_.GetNoArena();
}
void realuser::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_phone)
}
#if LANG_CXX11
void realuser::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_phone)
}
#endif
void realuser::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_phone)
}
void realuser::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_phone)
}
::std::string* realuser::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_phone)
}

// string user_qq = 6;
void realuser::clear_user_qq() {
  user_qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_qq() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_qq)
  return user_qq_.GetNoArena();
}
void realuser::set_user_qq(const ::std::string& value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_qq)
}
#if LANG_CXX11
void realuser::set_user_qq(::std::string&& value) {
  
  user_qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_qq)
}
#endif
void realuser::set_user_qq(const char* value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_qq)
}
void realuser::set_user_qq(const char* value, size_t size) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_qq)
}
::std::string* realuser::mutable_user_qq() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_qq)
  return user_qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_qq() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_qq)
  
  return user_qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_qq(::std::string* user_qq) {
  if (user_qq != NULL) {
    
  } else {
    
  }
  user_qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_qq);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_qq)
}

// string user_mirchat = 7;
void realuser::clear_user_mirchat() {
  user_mirchat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_mirchat() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_mirchat)
  return user_mirchat_.GetNoArena();
}
void realuser::set_user_mirchat(const ::std::string& value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_mirchat)
}
#if LANG_CXX11
void realuser::set_user_mirchat(::std::string&& value) {
  
  user_mirchat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_mirchat)
}
#endif
void realuser::set_user_mirchat(const char* value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_mirchat)
}
void realuser::set_user_mirchat(const char* value, size_t size) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_mirchat)
}
::std::string* realuser::mutable_user_mirchat() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_mirchat)
  return user_mirchat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_mirchat() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_mirchat)
  
  return user_mirchat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_mirchat(::std::string* user_mirchat) {
  if (user_mirchat != NULL) {
    
  } else {
    
  }
  user_mirchat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_mirchat);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_mirchat)
}

// string user_email = 8;
void realuser::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_email() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_email)
  return user_email_.GetNoArena();
}
void realuser::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_email)
}
#if LANG_CXX11
void realuser::set_user_email(::std::string&& value) {
  
  user_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_email)
}
#endif
void realuser::set_user_email(const char* value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_email)
}
void realuser::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_email)
}
::std::string* realuser::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_email() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_email)
}

// string user_bri = 9;
void realuser::clear_user_bri() {
  user_bri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_bri() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_bri)
  return user_bri_.GetNoArena();
}
void realuser::set_user_bri(const ::std::string& value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_bri)
}
#if LANG_CXX11
void realuser::set_user_bri(::std::string&& value) {
  
  user_bri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_bri)
}
#endif
void realuser::set_user_bri(const char* value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_bri)
}
void realuser::set_user_bri(const char* value, size_t size) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_bri)
}
::std::string* realuser::mutable_user_bri() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_bri)
  return user_bri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_bri() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_bri)
  
  return user_bri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_bri(::std::string* user_bri) {
  if (user_bri != NULL) {
    
  } else {
    
  }
  user_bri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_bri);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_bri)
}

// string user_address = 10;
void realuser::clear_user_address() {
  user_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& realuser::user_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_address)
  return user_address_.GetNoArena();
}
void realuser::set_user_address(const ::std::string& value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_address)
}
#if LANG_CXX11
void realuser::set_user_address(::std::string&& value) {
  
  user_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_address)
}
#endif
void realuser::set_user_address(const char* value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_address)
}
void realuser::set_user_address(const char* value, size_t size) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_address)
}
::std::string* realuser::mutable_user_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_address)
  return user_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* realuser::release_user_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_address)
  
  return user_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void realuser::set_allocated_user_address(::std::string* user_address) {
  if (user_address != NULL) {
    
  } else {
    
  }
  user_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int userreg::kUserNameFieldNumber;
const int userreg::kUserPasswordMd5FieldNumber;
const int userreg::kUserPhoneFieldNumber;
const int userreg::kRegCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

userreg::userreg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.userreg)
}
userreg::userreg(const userreg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_password_md5().size() > 0) {
    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_phone().size() > 0) {
    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  reg_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reg_code().size() > 0) {
    reg_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reg_code_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.userreg)
}

void userreg::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

userreg::~userreg() {
  // @@protoc_insertion_point(destructor:qiuwanli.userreg)
  SharedDtor();
}

void userreg::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void userreg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* userreg::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[2].descriptor;
}

const userreg& userreg::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

userreg* userreg::New(::google::protobuf::Arena* arena) const {
  userreg* n = new userreg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void userreg::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.userreg)
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool userreg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.userreg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_password_md5 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_password_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_password_md5().data(), this->user_password_md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.user_password_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_phone = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_phone().data(), this->user_phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.user_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reg_code = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reg_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reg_code().data(), this->reg_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.reg_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.userreg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.userreg)
  return false;
#undef DO_
}

void userreg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.userreg)
  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // string user_password_md5 = 2;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_password_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_password_md5(), output);
  }

  // string user_phone = 3;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_phone(), output);
  }

  // string reg_code = 4;
  if (this->reg_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reg_code().data(), this->reg_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.reg_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reg_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.userreg)
}

::google::protobuf::uint8* userreg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.userreg)
  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // string user_password_md5 = 2;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_password_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_password_md5(), target);
  }

  // string user_phone = 3;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_phone(), target);
  }

  // string reg_code = 4;
  if (this->reg_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reg_code().data(), this->reg_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.reg_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reg_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.userreg)
  return target;
}

size_t userreg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.userreg)
  size_t total_size = 0;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string user_password_md5 = 2;
  if (this->user_password_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_password_md5());
  }

  // string user_phone = 3;
  if (this->user_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_phone());
  }

  // string reg_code = 4;
  if (this->reg_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reg_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void userreg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.userreg)
  GOOGLE_DCHECK_NE(&from, this);
  const userreg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const userreg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.userreg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.userreg)
    MergeFrom(*source);
  }
}

void userreg::MergeFrom(const userreg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.userreg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.user_password_md5().size() > 0) {

    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  if (from.user_phone().size() > 0) {

    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  if (from.reg_code().size() > 0) {

    reg_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reg_code_);
  }
}

void userreg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.userreg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void userreg::CopyFrom(const userreg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.userreg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool userreg::IsInitialized() const {
  return true;
}

void userreg::Swap(userreg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void userreg::InternalSwap(userreg* other) {
  user_name_.Swap(&other->user_name_);
  user_password_md5_.Swap(&other->user_password_md5_);
  user_phone_.Swap(&other->user_phone_);
  reg_code_.Swap(&other->reg_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata userreg::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// userreg

// string user_name = 1;
void userreg::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_name)
  return user_name_.GetNoArena();
}
void userreg::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_name)
}
#if LANG_CXX11
void userreg::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_name)
}
#endif
void userreg::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_name)
}
void userreg::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_name)
}
::std::string* userreg::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_name)
}

// string user_password_md5 = 2;
void userreg::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.GetNoArena();
}
void userreg::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_password_md5)
}
#if LANG_CXX11
void userreg::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_password_md5)
}
#endif
void userreg::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_password_md5)
}
void userreg::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_password_md5)
}
::std::string* userreg::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_password_md5)
}

// string user_phone = 3;
void userreg::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_phone)
  return user_phone_.GetNoArena();
}
void userreg::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_phone)
}
#if LANG_CXX11
void userreg::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_phone)
}
#endif
void userreg::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_phone)
}
void userreg::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_phone)
}
::std::string* userreg::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_phone)
}

// string reg_code = 4;
void userreg::clear_reg_code() {
  reg_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::reg_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.reg_code)
  return reg_code_.GetNoArena();
}
void userreg::set_reg_code(const ::std::string& value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.reg_code)
}
#if LANG_CXX11
void userreg::set_reg_code(::std::string&& value) {
  
  reg_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.reg_code)
}
#endif
void userreg::set_reg_code(const char* value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.reg_code)
}
void userreg::set_reg_code(const char* value, size_t size) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.reg_code)
}
::std::string* userreg::mutable_reg_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.reg_code)
  return reg_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_reg_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.reg_code)
  
  return reg_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_reg_code(::std::string* reg_code) {
  if (reg_code != NULL) {
    
  } else {
    
  }
  reg_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reg_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.reg_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfo::kFilenameFieldNumber;
const int FileInfo::kFilesizeFieldNumber;
const int FileInfo::kFilemd51FieldNumber;
const int FileInfo::kFilemd52FieldNumber;
const int FileInfo::kFolecreatedateFieldNumber;
const int FileInfo::kFiletypeFieldNumber;
const int FileInfo::kFilepathidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfo::FileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileInfo)
}
FileInfo::FileInfo(const FileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  filemd5_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filemd5_1().size() > 0) {
    filemd5_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_1_);
  }
  filemd5_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filemd5_2().size() > 0) {
    filemd5_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_2_);
  }
  filetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filetype().size() > 0) {
    filetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  ::memcpy(&filesize_, &from.filesize_,
    reinterpret_cast<char*>(&folecreatedate_) -
    reinterpret_cast<char*>(&filesize_) + sizeof(folecreatedate_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileInfo)
}

void FileInfo::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, reinterpret_cast<char*>(&folecreatedate_) -
    reinterpret_cast<char*>(&filesize_) + sizeof(folecreatedate_));
  _cached_size_ = 0;
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileInfo)
  SharedDtor();
}

void FileInfo::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileInfo::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[3].descriptor;
}

const FileInfo& FileInfo::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileInfo* FileInfo::New(::google::protobuf::Arena* arena) const {
  FileInfo* n = new FileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileInfo)
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, reinterpret_cast<char*>(&folecreatedate_) -
    reinterpret_cast<char*>(&filesize_) + sizeof(folecreatedate_));
}

bool FileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfo.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filesize = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filemd5_1 = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filemd5_1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filemd5_1().data(), this->filemd5_1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfo.filemd5_1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filemd5_2 = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filemd5_2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filemd5_2().data(), this->filemd5_2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfo.filemd5_2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 folecreatedate = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &folecreatedate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes filetype = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_filetype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filepathid = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filepathid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileInfo)
  return false;
#undef DO_
}

void FileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileInfo)
  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // uint32 filesize = 2;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->filesize(), output);
  }

  // string filemd5_1 = 3;
  if (this->filemd5_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_1().data(), this->filemd5_1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filemd5_1(), output);
  }

  // string filemd5_2 = 4;
  if (this->filemd5_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_2().data(), this->filemd5_2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filemd5_2(), output);
  }

  // uint64 folecreatedate = 5;
  if (this->folecreatedate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->folecreatedate(), output);
  }

  // bytes filetype = 6;
  if (this->filetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->filetype(), output);
  }

  // uint32 filepathid = 7;
  if (this->filepathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->filepathid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileInfo)
}

::google::protobuf::uint8* FileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileInfo)
  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // uint32 filesize = 2;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->filesize(), target);
  }

  // string filemd5_1 = 3;
  if (this->filemd5_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_1().data(), this->filemd5_1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filemd5_1(), target);
  }

  // string filemd5_2 = 4;
  if (this->filemd5_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_2().data(), this->filemd5_2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filemd5_2(), target);
  }

  // uint64 folecreatedate = 5;
  if (this->folecreatedate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->folecreatedate(), target);
  }

  // bytes filetype = 6;
  if (this->filetype().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->filetype(), target);
  }

  // uint32 filepathid = 7;
  if (this->filepathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->filepathid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileInfo)
  size_t total_size = 0;

  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string filemd5_1 = 3;
  if (this->filemd5_1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filemd5_1());
  }

  // string filemd5_2 = 4;
  if (this->filemd5_2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filemd5_2());
  }

  // bytes filetype = 6;
  if (this->filetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->filetype());
  }

  // uint32 filesize = 2;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filesize());
  }

  // uint32 filepathid = 7;
  if (this->filepathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filepathid());
  }

  // uint64 folecreatedate = 5;
  if (this->folecreatedate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->folecreatedate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileInfo)
    MergeFrom(*source);
  }
}

void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.filemd5_1().size() > 0) {

    filemd5_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_1_);
  }
  if (from.filemd5_2().size() > 0) {

    filemd5_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_2_);
  }
  if (from.filetype().size() > 0) {

    filetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
  if (from.filepathid() != 0) {
    set_filepathid(from.filepathid());
  }
  if (from.folecreatedate() != 0) {
    set_folecreatedate(from.folecreatedate());
  }
}

void FileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfo::IsInitialized() const {
  return true;
}

void FileInfo::Swap(FileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfo::InternalSwap(FileInfo* other) {
  filename_.Swap(&other->filename_);
  filemd5_1_.Swap(&other->filemd5_1_);
  filemd5_2_.Swap(&other->filemd5_2_);
  filetype_.Swap(&other->filetype_);
  std::swap(filesize_, other->filesize_);
  std::swap(filepathid_, other->filepathid_);
  std::swap(folecreatedate_, other->folecreatedate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileInfo::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileInfo

// string filename = 1;
void FileInfo::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filename)
  return filename_.GetNoArena();
}
void FileInfo::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filename)
}
#if LANG_CXX11
void FileInfo::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filename)
}
#endif
void FileInfo::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filename)
}
void FileInfo::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filename)
}
::std::string* FileInfo::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filename)
}

// uint32 filesize = 2;
void FileInfo::clear_filesize() {
  filesize_ = 0u;
}
::google::protobuf::uint32 FileInfo::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filesize)
  return filesize_;
}
void FileInfo::set_filesize(::google::protobuf::uint32 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filesize)
}

// string filemd5_1 = 3;
void FileInfo::clear_filemd5_1() {
  filemd5_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::filemd5_1() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.GetNoArena();
}
void FileInfo::set_filemd5_1(const ::std::string& value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_1)
}
#if LANG_CXX11
void FileInfo::set_filemd5_1(::std::string&& value) {
  
  filemd5_1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_1)
}
#endif
void FileInfo::set_filemd5_1(const char* value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_1)
}
void FileInfo::set_filemd5_1(const char* value, size_t size) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_1)
}
::std::string* FileInfo::mutable_filemd5_1() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_filemd5_1() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_1)
  
  return filemd5_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_filemd5_1(::std::string* filemd5_1) {
  if (filemd5_1 != NULL) {
    
  } else {
    
  }
  filemd5_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_1);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_1)
}

// string filemd5_2 = 4;
void FileInfo::clear_filemd5_2() {
  filemd5_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::filemd5_2() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.GetNoArena();
}
void FileInfo::set_filemd5_2(const ::std::string& value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_2)
}
#if LANG_CXX11
void FileInfo::set_filemd5_2(::std::string&& value) {
  
  filemd5_2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_2)
}
#endif
void FileInfo::set_filemd5_2(const char* value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_2)
}
void FileInfo::set_filemd5_2(const char* value, size_t size) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_2)
}
::std::string* FileInfo::mutable_filemd5_2() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_filemd5_2() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_2)
  
  return filemd5_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_filemd5_2(::std::string* filemd5_2) {
  if (filemd5_2 != NULL) {
    
  } else {
    
  }
  filemd5_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_2);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_2)
}

// uint64 folecreatedate = 5;
void FileInfo::clear_folecreatedate() {
  folecreatedate_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 FileInfo::folecreatedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.folecreatedate)
  return folecreatedate_;
}
void FileInfo::set_folecreatedate(::google::protobuf::uint64 value) {
  
  folecreatedate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.folecreatedate)
}

// bytes filetype = 6;
void FileInfo::clear_filetype() {
  filetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::filetype() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filetype)
  return filetype_.GetNoArena();
}
void FileInfo::set_filetype(const ::std::string& value) {
  
  filetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filetype)
}
#if LANG_CXX11
void FileInfo::set_filetype(::std::string&& value) {
  
  filetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filetype)
}
#endif
void FileInfo::set_filetype(const char* value) {
  
  filetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filetype)
}
void FileInfo::set_filetype(const void* value, size_t size) {
  
  filetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filetype)
}
::std::string* FileInfo::mutable_filetype() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filetype)
  return filetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_filetype() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filetype)
  
  return filetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_filetype(::std::string* filetype) {
  if (filetype != NULL) {
    
  } else {
    
  }
  filetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filetype);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filetype)
}

// uint32 filepathid = 7;
void FileInfo::clear_filepathid() {
  filepathid_ = 0u;
}
::google::protobuf::uint32 FileInfo::filepathid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filepathid)
  return filepathid_;
}
void FileInfo::set_filepathid(::google::protobuf::uint32 value) {
  
  filepathid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filepathid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileBlockInfo::kFileIdFieldNumber;
const int FileBlockInfo::kFileblockNumFieldNumber;
const int FileBlockInfo::kFileCRCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileBlockInfo::FileBlockInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileBlockInfo)
}
FileBlockInfo::FileBlockInfo(const FileBlockInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_id().size() > 0) {
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  file_crc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_crc().size() > 0) {
    file_crc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_crc_);
  }
  fileblock_num_ = from.fileblock_num_;
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileBlockInfo)
}

void FileBlockInfo::SharedCtor() {
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_crc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileblock_num_ = 0u;
  _cached_size_ = 0;
}

FileBlockInfo::~FileBlockInfo() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileBlockInfo)
  SharedDtor();
}

void FileBlockInfo::SharedDtor() {
  file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_crc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileBlockInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlockInfo::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[4].descriptor;
}

const FileBlockInfo& FileBlockInfo::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileBlockInfo* FileBlockInfo::New(::google::protobuf::Arena* arena) const {
  FileBlockInfo* n = new FileBlockInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileBlockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileBlockInfo)
  file_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileblock_num_ = 0u;
}

bool FileBlockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileBlockInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_id().data(), this->file_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileBlockInfo.file_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fileblock_num = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fileblock_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_CRC = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_crc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_crc().data(), this->file_crc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileBlockInfo.file_CRC"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileBlockInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileBlockInfo)
  return false;
#undef DO_
}

void FileBlockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileBlockInfo)
  // string file_id = 1;
  if (this->file_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id().data(), this->file_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_id(), output);
  }

  // uint32 fileblock_num = 2;
  if (this->fileblock_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fileblock_num(), output);
  }

  // string file_CRC = 3;
  if (this->file_crc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_crc().data(), this->file_crc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_CRC");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_crc(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileBlockInfo)
}

::google::protobuf::uint8* FileBlockInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileBlockInfo)
  // string file_id = 1;
  if (this->file_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id().data(), this->file_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_id(), target);
  }

  // uint32 fileblock_num = 2;
  if (this->fileblock_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fileblock_num(), target);
  }

  // string file_CRC = 3;
  if (this->file_crc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_crc().data(), this->file_crc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_CRC");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_crc(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileBlockInfo)
  return target;
}

size_t FileBlockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileBlockInfo)
  size_t total_size = 0;

  // string file_id = 1;
  if (this->file_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_id());
  }

  // string file_CRC = 3;
  if (this->file_crc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_crc());
  }

  // uint32 fileblock_num = 2;
  if (this->fileblock_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fileblock_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlockInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileBlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FileBlockInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileBlockInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileBlockInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileBlockInfo)
    MergeFrom(*source);
  }
}

void FileBlockInfo::MergeFrom(const FileBlockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileBlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.file_id().size() > 0) {

    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  if (from.file_crc().size() > 0) {

    file_crc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_crc_);
  }
  if (from.fileblock_num() != 0) {
    set_fileblock_num(from.fileblock_num());
  }
}

void FileBlockInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileBlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlockInfo::CopyFrom(const FileBlockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileBlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlockInfo::IsInitialized() const {
  return true;
}

void FileBlockInfo::Swap(FileBlockInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileBlockInfo::InternalSwap(FileBlockInfo* other) {
  file_id_.Swap(&other->file_id_);
  file_crc_.Swap(&other->file_crc_);
  std::swap(fileblock_num_, other->fileblock_num_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileBlockInfo::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileBlockInfo

// string file_id = 1;
void FileBlockInfo::clear_file_id() {
  file_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileBlockInfo::file_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_id)
  return file_id_.GetNoArena();
}
void FileBlockInfo::set_file_id(const ::std::string& value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_id)
}
#if LANG_CXX11
void FileBlockInfo::set_file_id(::std::string&& value) {
  
  file_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_id)
}
#endif
void FileBlockInfo::set_file_id(const char* value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_id)
}
void FileBlockInfo::set_file_id(const char* value, size_t size) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_id)
}
::std::string* FileBlockInfo::mutable_file_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_id)
  return file_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileBlockInfo::release_file_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_id)
  
  return file_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileBlockInfo::set_allocated_file_id(::std::string* file_id) {
  if (file_id != NULL) {
    
  } else {
    
  }
  file_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_id)
}

// uint32 fileblock_num = 2;
void FileBlockInfo::clear_fileblock_num() {
  fileblock_num_ = 0u;
}
::google::protobuf::uint32 FileBlockInfo::fileblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.fileblock_num)
  return fileblock_num_;
}
void FileBlockInfo::set_fileblock_num(::google::protobuf::uint32 value) {
  
  fileblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.fileblock_num)
}

// string file_CRC = 3;
void FileBlockInfo::clear_file_crc() {
  file_crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileBlockInfo::file_crc() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.GetNoArena();
}
void FileBlockInfo::set_file_crc(const ::std::string& value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_CRC)
}
#if LANG_CXX11
void FileBlockInfo::set_file_crc(::std::string&& value) {
  
  file_crc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_CRC)
}
#endif
void FileBlockInfo::set_file_crc(const char* value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_CRC)
}
void FileBlockInfo::set_file_crc(const char* value, size_t size) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_CRC)
}
::std::string* FileBlockInfo::mutable_file_crc() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileBlockInfo::release_file_crc() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_CRC)
  
  return file_crc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileBlockInfo::set_allocated_file_crc(::std::string* file_crc) {
  if (file_crc != NULL) {
    
  } else {
    
  }
  file_crc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_crc);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_CRC)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int loginIpLog::kUserIdFieldNumber;
const int loginIpLog::kLoginipFieldNumber;
const int loginIpLog::kLogindateFieldNumber;
const int loginIpLog::kUserClientUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

loginIpLog::loginIpLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.loginIpLog)
}
loginIpLog::loginIpLog(const loginIpLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  ::memcpy(&logindate_, &from.logindate_,
    reinterpret_cast<char*>(&loginip_) -
    reinterpret_cast<char*>(&logindate_) + sizeof(loginip_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.loginIpLog)
}

void loginIpLog::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logindate_, 0, reinterpret_cast<char*>(&loginip_) -
    reinterpret_cast<char*>(&logindate_) + sizeof(loginip_));
  _cached_size_ = 0;
}

loginIpLog::~loginIpLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.loginIpLog)
  SharedDtor();
}

void loginIpLog::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void loginIpLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* loginIpLog::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[5].descriptor;
}

const loginIpLog& loginIpLog::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

loginIpLog* loginIpLog::New(::google::protobuf::Arena* arena) const {
  loginIpLog* n = new loginIpLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void loginIpLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.loginIpLog)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logindate_, 0, reinterpret_cast<char*>(&loginip_) -
    reinterpret_cast<char*>(&logindate_) + sizeof(loginip_));
}

bool loginIpLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.loginIpLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.loginIpLog.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loginip = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loginip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 logindate = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logindate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.loginIpLog.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.loginIpLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.loginIpLog)
  return false;
#undef DO_
}

void loginIpLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.loginIpLog)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.loginIpLog.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // uint32 loginip = 2;
  if (this->loginip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loginip(), output);
  }

  // uint64 logindate = 3;
  if (this->logindate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->logindate(), output);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.loginIpLog.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_client_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.loginIpLog)
}

::google::protobuf::uint8* loginIpLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.loginIpLog)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.loginIpLog.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // uint32 loginip = 2;
  if (this->loginip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loginip(), target);
  }

  // uint64 logindate = 3;
  if (this->logindate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->logindate(), target);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.loginIpLog.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_client_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.loginIpLog)
  return target;
}

size_t loginIpLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.loginIpLog)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  // uint64 logindate = 3;
  if (this->logindate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logindate());
  }

  // uint32 loginip = 2;
  if (this->loginip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loginip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void loginIpLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.loginIpLog)
  GOOGLE_DCHECK_NE(&from, this);
  const loginIpLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const loginIpLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.loginIpLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.loginIpLog)
    MergeFrom(*source);
  }
}

void loginIpLog::MergeFrom(const loginIpLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.loginIpLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  if (from.logindate() != 0) {
    set_logindate(from.logindate());
  }
  if (from.loginip() != 0) {
    set_loginip(from.loginip());
  }
}

void loginIpLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.loginIpLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loginIpLog::CopyFrom(const loginIpLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.loginIpLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loginIpLog::IsInitialized() const {
  return true;
}

void loginIpLog::Swap(loginIpLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void loginIpLog::InternalSwap(loginIpLog* other) {
  user_id_.Swap(&other->user_id_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  std::swap(logindate_, other->logindate_);
  std::swap(loginip_, other->loginip_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata loginIpLog::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// loginIpLog

// string user_id = 1;
void loginIpLog::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginIpLog::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.user_id)
  return user_id_.GetNoArena();
}
void loginIpLog::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.user_id)
}
#if LANG_CXX11
void loginIpLog::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.loginIpLog.user_id)
}
#endif
void loginIpLog::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.loginIpLog.user_id)
}
void loginIpLog::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.loginIpLog.user_id)
}
::std::string* loginIpLog::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.loginIpLog.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginIpLog::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.loginIpLog.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginIpLog::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.loginIpLog.user_id)
}

// uint32 loginip = 2;
void loginIpLog::clear_loginip() {
  loginip_ = 0u;
}
::google::protobuf::uint32 loginIpLog::loginip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.loginip)
  return loginip_;
}
void loginIpLog::set_loginip(::google::protobuf::uint32 value) {
  
  loginip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.loginip)
}

// uint64 logindate = 3;
void loginIpLog::clear_logindate() {
  logindate_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 loginIpLog::logindate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.logindate)
  return logindate_;
}
void loginIpLog::set_logindate(::google::protobuf::uint64 value) {
  
  logindate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.logindate)
}

// string user_client_UUID = 4;
void loginIpLog::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& loginIpLog::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void loginIpLog::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.user_client_UUID)
}
#if LANG_CXX11
void loginIpLog::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.loginIpLog.user_client_UUID)
}
#endif
void loginIpLog::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.loginIpLog.user_client_UUID)
}
void loginIpLog::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.loginIpLog.user_client_UUID)
}
::std::string* loginIpLog::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.loginIpLog.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* loginIpLog::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.loginIpLog.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void loginIpLog::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.loginIpLog.user_client_UUID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int log::kUserIdFieldNumber;
const int log::kLogDateFieldNumber;
const int log::kLogInfoFieldNumber;
const int log::kLogTypeFieldNumber;
const int log::kUserClientUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

log::log()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.log)
}
log::log(const log& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_info().size() > 0) {
    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_type().size() > 0) {
    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  log_date_ = from.log_date_;
  // @@protoc_insertion_point(copy_constructor:qiuwanli.log)
}

void log::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

log::~log() {
  // @@protoc_insertion_point(destructor:qiuwanli.log)
  SharedDtor();
}

void log::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void log::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* log::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[6].descriptor;
}

const log& log::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

log* log::New(::google::protobuf::Arena* arena) const {
  log* n = new log;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void log::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.log)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_ = GOOGLE_ULONGLONG(0);
}

bool log::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.log)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.log.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 log_date = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_info = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_info().data(), this->log_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.log.log_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes log_type = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.log.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.log)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.log)
  return false;
#undef DO_
}

void log::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.log)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.log.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->log_date(), output);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.log.log_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log_info(), output);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->log_type(), output);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.log.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_client_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.log)
}

::google::protobuf::uint8* log::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.log)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.log.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->log_date(), target);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.log.log_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log_info(), target);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->log_type(), target);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.log.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_client_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.log)
  return target;
}

size_t log::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.log)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_info());
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->log_type());
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->log_date());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void log::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.log)
  GOOGLE_DCHECK_NE(&from, this);
  const log* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const log>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.log)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.log)
    MergeFrom(*source);
  }
}

void log::MergeFrom(const log& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.log)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.log_info().size() > 0) {

    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  if (from.log_type().size() > 0) {

    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  if (from.log_date() != 0) {
    set_log_date(from.log_date());
  }
}

void log::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void log::CopyFrom(const log& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool log::IsInitialized() const {
  return true;
}

void log::Swap(log* other) {
  if (other == this) return;
  InternalSwap(other);
}
void log::InternalSwap(log* other) {
  user_id_.Swap(&other->user_id_);
  log_info_.Swap(&other->log_info_);
  log_type_.Swap(&other->log_type_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  std::swap(log_date_, other->log_date_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata log::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// log

// string user_id = 1;
void log::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& log::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.user_id)
  return user_id_.GetNoArena();
}
void log::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.user_id)
}
#if LANG_CXX11
void log::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.user_id)
}
#endif
void log::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.user_id)
}
void log::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.user_id)
}
::std::string* log::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* log::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void log::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.user_id)
}

// uint64 log_date = 2;
void log::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 log::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.log_date)
  return log_date_;
}
void log::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.log.log_date)
}

// string log_info = 3;
void log::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& log::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.log_info)
  return log_info_.GetNoArena();
}
void log::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.log_info)
}
#if LANG_CXX11
void log::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.log_info)
}
#endif
void log::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.log_info)
}
void log::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.log_info)
}
::std::string* log::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* log::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void log::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.log_info)
}

// bytes log_type = 4;
void log::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& log::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.log_type)
  return log_type_.GetNoArena();
}
void log::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.log_type)
}
#if LANG_CXX11
void log::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.log_type)
}
#endif
void log::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.log_type)
}
void log::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.log_type)
}
::std::string* log::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* log::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void log::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.log_type)
}

// string user_client_UUID = 5;
void log::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& log::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void log::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.user_client_UUID)
}
#if LANG_CXX11
void log::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.user_client_UUID)
}
#endif
void log::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.user_client_UUID)
}
void log::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.user_client_UUID)
}
::std::string* log::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* log::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void log::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.user_client_UUID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int allfiles::kUserIdFieldNumber;
const int allfiles::kFilesIpFieldNumber;
const int allfiles::kSharedIdFieldNumber;
const int allfiles::kFilesblockNumFieldNumber;
const int allfiles::kFilesblockStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

allfiles::allfiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.allfiles)
}
allfiles::allfiles(const allfiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  shared_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_id().size() > 0) {
    shared_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_id_);
  }
  ::memcpy(&files_ip_, &from.files_ip_,
    reinterpret_cast<char*>(&filesblock_start_) -
    reinterpret_cast<char*>(&files_ip_) + sizeof(filesblock_start_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.allfiles)
}

void allfiles::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&files_ip_, 0, reinterpret_cast<char*>(&filesblock_start_) -
    reinterpret_cast<char*>(&files_ip_) + sizeof(filesblock_start_));
  _cached_size_ = 0;
}

allfiles::~allfiles() {
  // @@protoc_insertion_point(destructor:qiuwanli.allfiles)
  SharedDtor();
}

void allfiles::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void allfiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* allfiles::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[7].descriptor;
}

const allfiles& allfiles::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

allfiles* allfiles::New(::google::protobuf::Arena* arena) const {
  allfiles* n = new allfiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void allfiles::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.allfiles)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&files_ip_, 0, reinterpret_cast<char*>(&filesblock_start_) -
    reinterpret_cast<char*>(&files_ip_) + sizeof(filesblock_start_));
}

bool allfiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.allfiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.allfiles.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 files_ip = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &files_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shared_id = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shared_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shared_id().data(), this->shared_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.allfiles.shared_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filesblock_num = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesblock_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filesblock_start = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesblock_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.allfiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.allfiles)
  return false;
#undef DO_
}

void allfiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.allfiles)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // uint32 files_ip = 2;
  if (this->files_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->files_ip(), output);
  }

  // string shared_id = 3;
  if (this->shared_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_id().data(), this->shared_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.shared_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->shared_id(), output);
  }

  // uint32 filesblock_num = 4;
  if (this->filesblock_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->filesblock_num(), output);
  }

  // uint32 filesblock_start = 5;
  if (this->filesblock_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->filesblock_start(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.allfiles)
}

::google::protobuf::uint8* allfiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.allfiles)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // uint32 files_ip = 2;
  if (this->files_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->files_ip(), target);
  }

  // string shared_id = 3;
  if (this->shared_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_id().data(), this->shared_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.shared_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->shared_id(), target);
  }

  // uint32 filesblock_num = 4;
  if (this->filesblock_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->filesblock_num(), target);
  }

  // uint32 filesblock_start = 5;
  if (this->filesblock_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->filesblock_start(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.allfiles)
  return target;
}

size_t allfiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.allfiles)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string shared_id = 3;
  if (this->shared_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shared_id());
  }

  // uint32 files_ip = 2;
  if (this->files_ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->files_ip());
  }

  // uint32 filesblock_num = 4;
  if (this->filesblock_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filesblock_num());
  }

  // uint32 filesblock_start = 5;
  if (this->filesblock_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filesblock_start());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void allfiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.allfiles)
  GOOGLE_DCHECK_NE(&from, this);
  const allfiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const allfiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.allfiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.allfiles)
    MergeFrom(*source);
  }
}

void allfiles::MergeFrom(const allfiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.allfiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.shared_id().size() > 0) {

    shared_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_id_);
  }
  if (from.files_ip() != 0) {
    set_files_ip(from.files_ip());
  }
  if (from.filesblock_num() != 0) {
    set_filesblock_num(from.filesblock_num());
  }
  if (from.filesblock_start() != 0) {
    set_filesblock_start(from.filesblock_start());
  }
}

void allfiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.allfiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void allfiles::CopyFrom(const allfiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.allfiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool allfiles::IsInitialized() const {
  return true;
}

void allfiles::Swap(allfiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void allfiles::InternalSwap(allfiles* other) {
  user_id_.Swap(&other->user_id_);
  shared_id_.Swap(&other->shared_id_);
  std::swap(files_ip_, other->files_ip_);
  std::swap(filesblock_num_, other->filesblock_num_);
  std::swap(filesblock_start_, other->filesblock_start_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata allfiles::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// allfiles

// string user_id = 1;
void allfiles::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& allfiles::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.user_id)
  return user_id_.GetNoArena();
}
void allfiles::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.user_id)
}
#if LANG_CXX11
void allfiles::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.user_id)
}
#endif
void allfiles::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.user_id)
}
void allfiles::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.user_id)
}
::std::string* allfiles::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* allfiles::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void allfiles::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.user_id)
}

// uint32 files_ip = 2;
void allfiles::clear_files_ip() {
  files_ip_ = 0u;
}
::google::protobuf::uint32 allfiles::files_ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.files_ip)
  return files_ip_;
}
void allfiles::set_files_ip(::google::protobuf::uint32 value) {
  
  files_ip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.files_ip)
}

// string shared_id = 3;
void allfiles::clear_shared_id() {
  shared_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& allfiles::shared_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.shared_id)
  return shared_id_.GetNoArena();
}
void allfiles::set_shared_id(const ::std::string& value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.shared_id)
}
#if LANG_CXX11
void allfiles::set_shared_id(::std::string&& value) {
  
  shared_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.shared_id)
}
#endif
void allfiles::set_shared_id(const char* value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.shared_id)
}
void allfiles::set_shared_id(const char* value, size_t size) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.shared_id)
}
::std::string* allfiles::mutable_shared_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.shared_id)
  return shared_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* allfiles::release_shared_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.shared_id)
  
  return shared_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void allfiles::set_allocated_shared_id(::std::string* shared_id) {
  if (shared_id != NULL) {
    
  } else {
    
  }
  shared_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.shared_id)
}

// uint32 filesblock_num = 4;
void allfiles::clear_filesblock_num() {
  filesblock_num_ = 0u;
}
::google::protobuf::uint32 allfiles::filesblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_num)
  return filesblock_num_;
}
void allfiles::set_filesblock_num(::google::protobuf::uint32 value) {
  
  filesblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_num)
}

// uint32 filesblock_start = 5;
void allfiles::clear_filesblock_start() {
  filesblock_start_ = 0u;
}
::google::protobuf::uint32 allfiles::filesblock_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_start)
  return filesblock_start_;
}
void allfiles::set_filesblock_start(::google::protobuf::uint32 value) {
  
  filesblock_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int shared::kSharedUrlFieldNumber;
const int shared::kSharedPsFieldNumber;
const int shared::kSharedTimeFieldNumber;
const int shared::kSharedTimelenthFieldNumber;
const int shared::kSharedTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

shared::shared()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.shared)
}
shared::shared(const shared& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shared_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_url().size() > 0) {
    shared_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_url_);
  }
  shared_ps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_ps().size() > 0) {
    shared_ps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_ps_);
  }
  shared_types_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_types().size() > 0) {
    shared_types_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_types_);
  }
  ::memcpy(&shared_time_, &from.shared_time_,
    reinterpret_cast<char*>(&shared_timelenth_) -
    reinterpret_cast<char*>(&shared_time_) + sizeof(shared_timelenth_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.shared)
}

void shared::SharedCtor() {
  shared_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_ps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_types_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shared_time_, 0, reinterpret_cast<char*>(&shared_timelenth_) -
    reinterpret_cast<char*>(&shared_time_) + sizeof(shared_timelenth_));
  _cached_size_ = 0;
}

shared::~shared() {
  // @@protoc_insertion_point(destructor:qiuwanli.shared)
  SharedDtor();
}

void shared::SharedDtor() {
  shared_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_ps_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_types_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void shared::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* shared::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[8].descriptor;
}

const shared& shared::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

shared* shared::New(::google::protobuf::Arena* arena) const {
  shared* n = new shared;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void shared::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.shared)
  shared_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_ps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_types_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shared_time_, 0, reinterpret_cast<char*>(&shared_timelenth_) -
    reinterpret_cast<char*>(&shared_time_) + sizeof(shared_timelenth_));
}

bool shared::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.shared)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string shared_url = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shared_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shared_url().data(), this->shared_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.shared.shared_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shared_ps = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shared_ps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shared_ps().data(), this->shared_ps().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.shared.shared_ps"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 shared_time = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shared_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 shared_timelenth = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shared_timelenth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes shared_types = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_shared_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.shared)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.shared)
  return false;
#undef DO_
}

void shared::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.shared)
  // string shared_url = 1;
  if (this->shared_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_url().data(), this->shared_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.shared.shared_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->shared_url(), output);
  }

  // string shared_ps = 2;
  if (this->shared_ps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_ps().data(), this->shared_ps().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.shared.shared_ps");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shared_ps(), output);
  }

  // uint64 shared_time = 3;
  if (this->shared_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->shared_time(), output);
  }

  // uint32 shared_timelenth = 4;
  if (this->shared_timelenth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->shared_timelenth(), output);
  }

  // bytes shared_types = 5;
  if (this->shared_types().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->shared_types(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.shared)
}

::google::protobuf::uint8* shared::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.shared)
  // string shared_url = 1;
  if (this->shared_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_url().data(), this->shared_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.shared.shared_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->shared_url(), target);
  }

  // string shared_ps = 2;
  if (this->shared_ps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_ps().data(), this->shared_ps().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.shared.shared_ps");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shared_ps(), target);
  }

  // uint64 shared_time = 3;
  if (this->shared_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->shared_time(), target);
  }

  // uint32 shared_timelenth = 4;
  if (this->shared_timelenth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->shared_timelenth(), target);
  }

  // bytes shared_types = 5;
  if (this->shared_types().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->shared_types(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.shared)
  return target;
}

size_t shared::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.shared)
  size_t total_size = 0;

  // string shared_url = 1;
  if (this->shared_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shared_url());
  }

  // string shared_ps = 2;
  if (this->shared_ps().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shared_ps());
  }

  // bytes shared_types = 5;
  if (this->shared_types().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->shared_types());
  }

  // uint64 shared_time = 3;
  if (this->shared_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->shared_time());
  }

  // uint32 shared_timelenth = 4;
  if (this->shared_timelenth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shared_timelenth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void shared::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.shared)
  GOOGLE_DCHECK_NE(&from, this);
  const shared* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const shared>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.shared)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.shared)
    MergeFrom(*source);
  }
}

void shared::MergeFrom(const shared& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.shared)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.shared_url().size() > 0) {

    shared_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_url_);
  }
  if (from.shared_ps().size() > 0) {

    shared_ps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_ps_);
  }
  if (from.shared_types().size() > 0) {

    shared_types_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_types_);
  }
  if (from.shared_time() != 0) {
    set_shared_time(from.shared_time());
  }
  if (from.shared_timelenth() != 0) {
    set_shared_timelenth(from.shared_timelenth());
  }
}

void shared::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.shared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void shared::CopyFrom(const shared& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.shared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool shared::IsInitialized() const {
  return true;
}

void shared::Swap(shared* other) {
  if (other == this) return;
  InternalSwap(other);
}
void shared::InternalSwap(shared* other) {
  shared_url_.Swap(&other->shared_url_);
  shared_ps_.Swap(&other->shared_ps_);
  shared_types_.Swap(&other->shared_types_);
  std::swap(shared_time_, other->shared_time_);
  std::swap(shared_timelenth_, other->shared_timelenth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata shared::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// shared

// string shared_url = 1;
void shared::clear_shared_url() {
  shared_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& shared::shared_url() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_url)
  return shared_url_.GetNoArena();
}
void shared::set_shared_url(const ::std::string& value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_url)
}
#if LANG_CXX11
void shared::set_shared_url(::std::string&& value) {
  
  shared_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.shared.shared_url)
}
#endif
void shared::set_shared_url(const char* value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.shared.shared_url)
}
void shared::set_shared_url(const char* value, size_t size) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.shared.shared_url)
}
::std::string* shared::mutable_shared_url() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.shared.shared_url)
  return shared_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* shared::release_shared_url() {
  // @@protoc_insertion_point(field_release:qiuwanli.shared.shared_url)
  
  return shared_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void shared::set_allocated_shared_url(::std::string* shared_url) {
  if (shared_url != NULL) {
    
  } else {
    
  }
  shared_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_url);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.shared.shared_url)
}

// string shared_ps = 2;
void shared::clear_shared_ps() {
  shared_ps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& shared::shared_ps() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_ps)
  return shared_ps_.GetNoArena();
}
void shared::set_shared_ps(const ::std::string& value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_ps)
}
#if LANG_CXX11
void shared::set_shared_ps(::std::string&& value) {
  
  shared_ps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.shared.shared_ps)
}
#endif
void shared::set_shared_ps(const char* value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.shared.shared_ps)
}
void shared::set_shared_ps(const char* value, size_t size) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.shared.shared_ps)
}
::std::string* shared::mutable_shared_ps() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.shared.shared_ps)
  return shared_ps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* shared::release_shared_ps() {
  // @@protoc_insertion_point(field_release:qiuwanli.shared.shared_ps)
  
  return shared_ps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void shared::set_allocated_shared_ps(::std::string* shared_ps) {
  if (shared_ps != NULL) {
    
  } else {
    
  }
  shared_ps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_ps);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.shared.shared_ps)
}

// uint64 shared_time = 3;
void shared::clear_shared_time() {
  shared_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 shared::shared_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_time)
  return shared_time_;
}
void shared::set_shared_time(::google::protobuf::uint64 value) {
  
  shared_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_time)
}

// uint32 shared_timelenth = 4;
void shared::clear_shared_timelenth() {
  shared_timelenth_ = 0u;
}
::google::protobuf::uint32 shared::shared_timelenth() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_timelenth)
  return shared_timelenth_;
}
void shared::set_shared_timelenth(::google::protobuf::uint32 value) {
  
  shared_timelenth_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_timelenth)
}

// bytes shared_types = 5;
void shared::clear_shared_types() {
  shared_types_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& shared::shared_types() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_types)
  return shared_types_.GetNoArena();
}
void shared::set_shared_types(const ::std::string& value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_types)
}
#if LANG_CXX11
void shared::set_shared_types(::std::string&& value) {
  
  shared_types_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.shared.shared_types)
}
#endif
void shared::set_shared_types(const char* value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.shared.shared_types)
}
void shared::set_shared_types(const void* value, size_t size) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.shared.shared_types)
}
::std::string* shared::mutable_shared_types() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.shared.shared_types)
  return shared_types_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* shared::release_shared_types() {
  // @@protoc_insertion_point(field_release:qiuwanli.shared.shared_types)
  
  return shared_types_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void shared::set_allocated_shared_types(::std::string* shared_types) {
  if (shared_types != NULL) {
    
  } else {
    
  }
  shared_types_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_types);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.shared.shared_types)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int files_small::kFileSmallNameFieldNumber;
const int files_small::kFileSmallCreateTimeFieldNumber;
const int files_small::kFileSmallStartFieldNumber;
const int files_small::kFileSmallLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

files_small::files_small()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.files_small)
}
files_small::files_small(const files_small& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_small_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_small_name().size() > 0) {
    file_small_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_small_name_);
  }
  ::memcpy(&file_small_create_time_, &from.file_small_create_time_,
    reinterpret_cast<char*>(&file_small_length_) -
    reinterpret_cast<char*>(&file_small_create_time_) + sizeof(file_small_length_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.files_small)
}

void files_small::SharedCtor() {
  file_small_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_small_create_time_, 0, reinterpret_cast<char*>(&file_small_length_) -
    reinterpret_cast<char*>(&file_small_create_time_) + sizeof(file_small_length_));
  _cached_size_ = 0;
}

files_small::~files_small() {
  // @@protoc_insertion_point(destructor:qiuwanli.files_small)
  SharedDtor();
}

void files_small::SharedDtor() {
  file_small_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void files_small::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* files_small::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[9].descriptor;
}

const files_small& files_small::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

files_small* files_small::New(::google::protobuf::Arena* arena) const {
  files_small* n = new files_small;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void files_small::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.files_small)
  file_small_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_small_create_time_, 0, reinterpret_cast<char*>(&file_small_length_) -
    reinterpret_cast<char*>(&file_small_create_time_) + sizeof(file_small_length_));
}

bool files_small::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.files_small)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_small_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_small_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_small_name().data(), this->file_small_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.files_small.file_small_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_small_create_time = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_small_create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_small_start = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_small_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_small_length = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_small_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.files_small)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.files_small)
  return false;
#undef DO_
}

void files_small::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.files_small)
  // string file_small_name = 1;
  if (this->file_small_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_small_name().data(), this->file_small_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.files_small.file_small_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_small_name(), output);
  }

  // uint32 file_small_create_time = 2;
  if (this->file_small_create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->file_small_create_time(), output);
  }

  // uint32 file_small_start = 3;
  if (this->file_small_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->file_small_start(), output);
  }

  // uint32 file_small_length = 4;
  if (this->file_small_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_small_length(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.files_small)
}

::google::protobuf::uint8* files_small::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.files_small)
  // string file_small_name = 1;
  if (this->file_small_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_small_name().data(), this->file_small_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.files_small.file_small_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_small_name(), target);
  }

  // uint32 file_small_create_time = 2;
  if (this->file_small_create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->file_small_create_time(), target);
  }

  // uint32 file_small_start = 3;
  if (this->file_small_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->file_small_start(), target);
  }

  // uint32 file_small_length = 4;
  if (this->file_small_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_small_length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.files_small)
  return target;
}

size_t files_small::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.files_small)
  size_t total_size = 0;

  // string file_small_name = 1;
  if (this->file_small_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_small_name());
  }

  // uint32 file_small_create_time = 2;
  if (this->file_small_create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_small_create_time());
  }

  // uint32 file_small_start = 3;
  if (this->file_small_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_small_start());
  }

  // uint32 file_small_length = 4;
  if (this->file_small_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_small_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void files_small::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.files_small)
  GOOGLE_DCHECK_NE(&from, this);
  const files_small* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const files_small>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.files_small)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.files_small)
    MergeFrom(*source);
  }
}

void files_small::MergeFrom(const files_small& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.files_small)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.file_small_name().size() > 0) {

    file_small_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_small_name_);
  }
  if (from.file_small_create_time() != 0) {
    set_file_small_create_time(from.file_small_create_time());
  }
  if (from.file_small_start() != 0) {
    set_file_small_start(from.file_small_start());
  }
  if (from.file_small_length() != 0) {
    set_file_small_length(from.file_small_length());
  }
}

void files_small::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.files_small)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void files_small::CopyFrom(const files_small& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.files_small)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool files_small::IsInitialized() const {
  return true;
}

void files_small::Swap(files_small* other) {
  if (other == this) return;
  InternalSwap(other);
}
void files_small::InternalSwap(files_small* other) {
  file_small_name_.Swap(&other->file_small_name_);
  std::swap(file_small_create_time_, other->file_small_create_time_);
  std::swap(file_small_start_, other->file_small_start_);
  std::swap(file_small_length_, other->file_small_length_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata files_small::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// files_small

// string file_small_name = 1;
void files_small::clear_file_small_name() {
  file_small_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& files_small::file_small_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_name)
  return file_small_name_.GetNoArena();
}
void files_small::set_file_small_name(const ::std::string& value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_name)
}
#if LANG_CXX11
void files_small::set_file_small_name(::std::string&& value) {
  
  file_small_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small.file_small_name)
}
#endif
void files_small::set_file_small_name(const char* value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small.file_small_name)
}
void files_small::set_file_small_name(const char* value, size_t size) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small.file_small_name)
}
::std::string* files_small::mutable_file_small_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small.file_small_name)
  return file_small_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* files_small::release_file_small_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small.file_small_name)
  
  return file_small_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void files_small::set_allocated_file_small_name(::std::string* file_small_name) {
  if (file_small_name != NULL) {
    
  } else {
    
  }
  file_small_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_small_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small.file_small_name)
}

// uint32 file_small_create_time = 2;
void files_small::clear_file_small_create_time() {
  file_small_create_time_ = 0u;
}
::google::protobuf::uint32 files_small::file_small_create_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_create_time)
  return file_small_create_time_;
}
void files_small::set_file_small_create_time(::google::protobuf::uint32 value) {
  
  file_small_create_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_create_time)
}

// uint32 file_small_start = 3;
void files_small::clear_file_small_start() {
  file_small_start_ = 0u;
}
::google::protobuf::uint32 files_small::file_small_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_start)
  return file_small_start_;
}
void files_small::set_file_small_start(::google::protobuf::uint32 value) {
  
  file_small_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_start)
}

// uint32 file_small_length = 4;
void files_small::clear_file_small_length() {
  file_small_length_ = 0u;
}
::google::protobuf::uint32 files_small::file_small_length() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_length)
  return file_small_length_;
}
void files_small::set_file_small_length(::google::protobuf::uint32 value) {
  
  file_small_length_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int files_small_block::kFilesSmallBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

files_small_block::files_small_block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.files_small_block)
}
files_small_block::files_small_block(const files_small_block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  files_small_blocks_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.files_small_blocks().size() > 0) {
    files_small_blocks_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.files_small_blocks_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.files_small_block)
}

void files_small_block::SharedCtor() {
  files_small_blocks_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

files_small_block::~files_small_block() {
  // @@protoc_insertion_point(destructor:qiuwanli.files_small_block)
  SharedDtor();
}

void files_small_block::SharedDtor() {
  files_small_blocks_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void files_small_block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* files_small_block::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[10].descriptor;
}

const files_small_block& files_small_block::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

files_small_block* files_small_block::New(::google::protobuf::Arena* arena) const {
  files_small_block* n = new files_small_block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void files_small_block::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.files_small_block)
  files_small_blocks_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool files_small_block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.files_small_block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes files_small_blocks = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_files_small_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.files_small_block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.files_small_block)
  return false;
#undef DO_
}

void files_small_block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.files_small_block)
  // bytes files_small_blocks = 1;
  if (this->files_small_blocks().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->files_small_blocks(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.files_small_block)
}

::google::protobuf::uint8* files_small_block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.files_small_block)
  // bytes files_small_blocks = 1;
  if (this->files_small_blocks().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->files_small_blocks(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.files_small_block)
  return target;
}

size_t files_small_block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.files_small_block)
  size_t total_size = 0;

  // bytes files_small_blocks = 1;
  if (this->files_small_blocks().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->files_small_blocks());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void files_small_block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.files_small_block)
  GOOGLE_DCHECK_NE(&from, this);
  const files_small_block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const files_small_block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.files_small_block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.files_small_block)
    MergeFrom(*source);
  }
}

void files_small_block::MergeFrom(const files_small_block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.files_small_block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.files_small_blocks().size() > 0) {

    files_small_blocks_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.files_small_blocks_);
  }
}

void files_small_block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.files_small_block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void files_small_block::CopyFrom(const files_small_block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.files_small_block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool files_small_block::IsInitialized() const {
  return true;
}

void files_small_block::Swap(files_small_block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void files_small_block::InternalSwap(files_small_block* other) {
  files_small_blocks_.Swap(&other->files_small_blocks_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata files_small_block::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// files_small_block

// bytes files_small_blocks = 1;
void files_small_block::clear_files_small_blocks() {
  files_small_blocks_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& files_small_block::files_small_blocks() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.GetNoArena();
}
void files_small_block::set_files_small_blocks(const ::std::string& value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small_block.files_small_blocks)
}
#if LANG_CXX11
void files_small_block::set_files_small_blocks(::std::string&& value) {
  
  files_small_blocks_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small_block.files_small_blocks)
}
#endif
void files_small_block::set_files_small_blocks(const char* value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small_block.files_small_blocks)
}
void files_small_block::set_files_small_blocks(const void* value, size_t size) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small_block.files_small_blocks)
}
::std::string* files_small_block::mutable_files_small_blocks() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* files_small_block::release_files_small_blocks() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small_block.files_small_blocks)
  
  return files_small_blocks_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void files_small_block::set_allocated_files_small_blocks(::std::string* files_small_blocks) {
  if (files_small_blocks != NULL) {
    
  } else {
    
  }
  files_small_blocks_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), files_small_blocks);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small_block.files_small_blocks)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int filespath::kPathFieldNumber;
const int filespath::kPathtypesFieldNumber;
const int filespath::kPathidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

filespath::filespath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_5fall_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.filespath)
}
filespath::filespath(const filespath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  pathtypes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pathtypes().size() > 0) {
    pathtypes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathtypes_);
  }
  pathid_ = from.pathid_;
  // @@protoc_insertion_point(copy_constructor:qiuwanli.filespath)
}

void filespath::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathtypes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathid_ = 0u;
  _cached_size_ = 0;
}

filespath::~filespath() {
  // @@protoc_insertion_point(destructor:qiuwanli.filespath)
  SharedDtor();
}

void filespath::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathtypes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void filespath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* filespath::descriptor() {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[11].descriptor;
}

const filespath& filespath::default_instance() {
  protobuf_login_5fall_2eproto::InitDefaults();
  return *internal_default_instance();
}

filespath* filespath::New(::google::protobuf::Arena* arena) const {
  filespath* n = new filespath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void filespath::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.filespath)
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathtypes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathid_ = 0u;
}

bool filespath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.filespath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.filespath.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes pathtypes = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pathtypes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pathid = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pathid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.filespath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.filespath)
  return false;
#undef DO_
}

void filespath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.filespath)
  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.filespath.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // bytes pathtypes = 2;
  if (this->pathtypes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pathtypes(), output);
  }

  // uint32 pathid = 3;
  if (this->pathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pathid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.filespath)
}

::google::protobuf::uint8* filespath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.filespath)
  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.filespath.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // bytes pathtypes = 2;
  if (this->pathtypes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pathtypes(), target);
  }

  // uint32 pathid = 3;
  if (this->pathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pathid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.filespath)
  return target;
}

size_t filespath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.filespath)
  size_t total_size = 0;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // bytes pathtypes = 2;
  if (this->pathtypes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pathtypes());
  }

  // uint32 pathid = 3;
  if (this->pathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pathid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void filespath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.filespath)
  GOOGLE_DCHECK_NE(&from, this);
  const filespath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const filespath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.filespath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.filespath)
    MergeFrom(*source);
  }
}

void filespath::MergeFrom(const filespath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.filespath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.pathtypes().size() > 0) {

    pathtypes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathtypes_);
  }
  if (from.pathid() != 0) {
    set_pathid(from.pathid());
  }
}

void filespath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.filespath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void filespath::CopyFrom(const filespath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.filespath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool filespath::IsInitialized() const {
  return true;
}

void filespath::Swap(filespath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void filespath::InternalSwap(filespath* other) {
  path_.Swap(&other->path_);
  pathtypes_.Swap(&other->pathtypes_);
  std::swap(pathid_, other->pathid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata filespath::GetMetadata() const {
  protobuf_login_5fall_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_5fall_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// filespath

// string path = 1;
void filespath::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& filespath::path() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filespath.path)
  return path_.GetNoArena();
}
void filespath::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filespath.path)
}
#if LANG_CXX11
void filespath::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filespath.path)
}
#endif
void filespath::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filespath.path)
}
void filespath::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filespath.path)
}
::std::string* filespath::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filespath.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* filespath::release_path() {
  // @@protoc_insertion_point(field_release:qiuwanli.filespath.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void filespath::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filespath.path)
}

// bytes pathtypes = 2;
void filespath::clear_pathtypes() {
  pathtypes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& filespath::pathtypes() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filespath.pathtypes)
  return pathtypes_.GetNoArena();
}
void filespath::set_pathtypes(const ::std::string& value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filespath.pathtypes)
}
#if LANG_CXX11
void filespath::set_pathtypes(::std::string&& value) {
  
  pathtypes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filespath.pathtypes)
}
#endif
void filespath::set_pathtypes(const char* value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filespath.pathtypes)
}
void filespath::set_pathtypes(const void* value, size_t size) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filespath.pathtypes)
}
::std::string* filespath::mutable_pathtypes() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filespath.pathtypes)
  return pathtypes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* filespath::release_pathtypes() {
  // @@protoc_insertion_point(field_release:qiuwanli.filespath.pathtypes)
  
  return pathtypes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void filespath::set_allocated_pathtypes(::std::string* pathtypes) {
  if (pathtypes != NULL) {
    
  } else {
    
  }
  pathtypes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathtypes);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filespath.pathtypes)
}

// uint32 pathid = 3;
void filespath::clear_pathid() {
  pathid_ = 0u;
}
::google::protobuf::uint32 filespath::pathid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filespath.pathid)
  return pathid_;
}
void filespath::set_pathid(::google::protobuf::uint32 value) {
  
  pathid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.filespath.pathid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

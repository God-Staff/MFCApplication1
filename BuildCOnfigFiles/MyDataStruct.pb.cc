// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MyDataStruct.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MyDataStruct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qiuwanli {
class UsersDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Users> {
} _Users_default_instance_;
class ServerUserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ServerUser> {
} _ServerUser_default_instance_;
class RealUsersDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RealUsers> {
} _RealUsers_default_instance_;
class ServerRealUserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ServerRealUser> {
} _ServerRealUser_default_instance_;
class userregDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<userreg> {
} _userreg_default_instance_;
class LoginIpLogsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginIpLogs> {
} _LoginIpLogs_default_instance_;
class ServerLoginIPLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ServerLoginIPLog> {
} _ServerLoginIPLog_default_instance_;
class LogsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Logs> {
} _Logs_default_instance_;
class AllLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllLog> {
} _AllLog_default_instance_;
class FilesSharedLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FilesSharedLog> {
} _FilesSharedLog_default_instance_;
class MyFriendDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MyFriend> {
} _MyFriend_default_instance_;
class FileSharedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileShared> {
} _FileShared_default_instance_;
class FriednListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FriednList> {
} _FriednList_default_instance_;
class FileDownLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileDownLog> {
} _FileDownLog_default_instance_;
class FileDownLogFileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileDownLogFile> {
} _FileDownLogFile_default_instance_;
class FileDowningLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileDowningLog> {
} _FileDowningLog_default_instance_;
class FileDownLogFilesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileDownLogFiles> {
} _FileDownLogFiles_default_instance_;
class Path4FilesOrDirDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Path4FilesOrDir> {
} _Path4FilesOrDir_default_instance_;
class AllFilesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllFiles> {
} _AllFiles_default_instance_;
class FileInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileInfo> {
} _FileInfo_default_instance_;
class FileInfoFileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileInfoFile> {
} _FileInfoFile_default_instance_;
class BufferBlockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BufferBlock> {
} _BufferBlock_default_instance_;
class BufferBlockPoolDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BufferBlockPool> {
} _BufferBlockPool_default_instance_;
class FileBlockInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileBlockInfo> {
} _FileBlockInfo_default_instance_;
class filetempDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<filetemp> {
} _filetemp_default_instance_;
class allfilesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<allfiles> {
} _allfiles_default_instance_;
class files_smallDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<files_small> {
} _files_small_default_instance_;
class files_small_blockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<files_small_block> {
} _files_small_block_default_instance_;

namespace protobuf_MyDataStruct_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[28];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Users, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Users, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Users, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Users, user_password_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Users, user_client_uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Users, login_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Users, user_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUser, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_name_real_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_idcard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_live_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_qq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_mirchat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_bri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RealUsers, user_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRealUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRealUser, realuer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, user_password_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, user_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(userreg, reg_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIpLogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIpLogs, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIpLogs, loginip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIpLogs, logindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIpLogs, user_client_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLoginIPLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLoginIPLog, loginliplog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, user_client_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllLog, logdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllLog, log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, shared_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, shared_ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, shared_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, shared_timelenth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, shared_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyFriend, friendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyFriend, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyFriend, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileShared, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileShared, sharedlog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriednList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriednList, friend__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLog, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLog, filepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLog, downtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLog, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLog, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLogFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLogFile, filelog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDowningLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDowningLog, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDowningLog, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDowningLog, downtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDowningLog, downingstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDowningLog, filesha512_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLogFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileDownLogFiles, filedownlog_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path4FilesOrDir, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path4FilesOrDir, pathtypes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path4FilesOrDir, pathorname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path4FilesOrDir, fileid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllFiles, pathlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllFiles, filespath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, fileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filemd5_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filemd5_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filecreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfo, filepathid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoFile, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlock, maxsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlock, currsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlock, bufferdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlockPool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlockPool, poolmaxsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlockPool, poolsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BufferBlockPool, buffer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, fileblock_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileBlockInfo, file_crc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filetemp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filetemp, fileinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filetemp, bitmap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(filetemp, nowstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, files_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, shared_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, filesblock_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(allfiles, filesblock_start_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small, file_small_length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small_block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(files_small_block, files_small_blocks_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Users)},
  { 10, -1, sizeof(ServerUser)},
  { 15, -1, sizeof(RealUsers)},
  { 29, -1, sizeof(ServerRealUser)},
  { 34, -1, sizeof(userreg)},
  { 42, -1, sizeof(LoginIpLogs)},
  { 50, -1, sizeof(ServerLoginIPLog)},
  { 55, -1, sizeof(Logs)},
  { 64, -1, sizeof(AllLog)},
  { 70, -1, sizeof(FilesSharedLog)},
  { 79, -1, sizeof(MyFriend)},
  { 86, -1, sizeof(FileShared)},
  { 91, -1, sizeof(FriednList)},
  { 96, -1, sizeof(FileDownLog)},
  { 105, -1, sizeof(FileDownLogFile)},
  { 110, -1, sizeof(FileDowningLog)},
  { 119, -1, sizeof(FileDownLogFiles)},
  { 124, -1, sizeof(Path4FilesOrDir)},
  { 131, -1, sizeof(AllFiles)},
  { 137, -1, sizeof(FileInfo)},
  { 147, -1, sizeof(FileInfoFile)},
  { 152, -1, sizeof(BufferBlock)},
  { 159, -1, sizeof(BufferBlockPool)},
  { 166, -1, sizeof(FileBlockInfo)},
  { 173, -1, sizeof(filetemp)},
  { 180, -1, sizeof(allfiles)},
  { 189, -1, sizeof(files_small)},
  { 197, -1, sizeof(files_small_block)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Users_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RealUsers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerRealUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_userreg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginIpLogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerLoginIPLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Logs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FilesSharedLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MyFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileShared_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FriednList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileDownLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileDownLogFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileDowningLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileDownLogFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Path4FilesOrDir_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileInfoFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BufferBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BufferBlockPool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileBlockInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_filetemp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_allfiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_files_small_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_files_small_block_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MyDataStruct.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

}  // namespace

void TableStruct::Shutdown() {
  _Users_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ServerUser_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RealUsers_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ServerRealUser_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _userreg_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LoginIpLogs_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ServerLoginIPLog_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Logs_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _AllLog_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _FilesSharedLog_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _MyFriend_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _FileShared_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _FriednList_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _FileDownLog_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _FileDownLogFile_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _FileDowningLog_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _FileDownLogFiles_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _Path4FilesOrDir_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _AllFiles_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _FileInfo_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _FileInfoFile_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _BufferBlock_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _BufferBlockPool_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _FileBlockInfo_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _filetemp_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _allfiles_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _files_small_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _files_small_block_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Users_default_instance_.DefaultConstruct();
  _ServerUser_default_instance_.DefaultConstruct();
  _RealUsers_default_instance_.DefaultConstruct();
  _ServerRealUser_default_instance_.DefaultConstruct();
  _userreg_default_instance_.DefaultConstruct();
  _LoginIpLogs_default_instance_.DefaultConstruct();
  _ServerLoginIPLog_default_instance_.DefaultConstruct();
  _Logs_default_instance_.DefaultConstruct();
  _AllLog_default_instance_.DefaultConstruct();
  _FilesSharedLog_default_instance_.DefaultConstruct();
  _MyFriend_default_instance_.DefaultConstruct();
  _FileShared_default_instance_.DefaultConstruct();
  _FriednList_default_instance_.DefaultConstruct();
  _FileDownLog_default_instance_.DefaultConstruct();
  _FileDownLogFile_default_instance_.DefaultConstruct();
  _FileDowningLog_default_instance_.DefaultConstruct();
  _FileDownLogFiles_default_instance_.DefaultConstruct();
  _Path4FilesOrDir_default_instance_.DefaultConstruct();
  _AllFiles_default_instance_.DefaultConstruct();
  _FileInfo_default_instance_.DefaultConstruct();
  _FileInfoFile_default_instance_.DefaultConstruct();
  _BufferBlock_default_instance_.DefaultConstruct();
  _BufferBlockPool_default_instance_.DefaultConstruct();
  _FileBlockInfo_default_instance_.DefaultConstruct();
  _filetemp_default_instance_.DefaultConstruct();
  _allfiles_default_instance_.DefaultConstruct();
  _files_small_default_instance_.DefaultConstruct();
  _files_small_block_default_instance_.DefaultConstruct();
  _filetemp_default_instance_.get_mutable()->fileinfo_ = const_cast< ::qiuwanli::FileBlockInfo*>(
      ::qiuwanli::FileBlockInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022MyDataStruct.proto\022\010qiuwanli\"\207\001\n\005Users"
      "\022\017\n\007user_id\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t\022\031\n\021"
      "user_password_md5\030\003 \001(\t\022\030\n\020user_client_U"
      "UID\030\004 \001(\t\022\022\n\nlogin_code\030\005 \001(\t\022\021\n\tuser_ty"
      "pe\030\006 \001(\014\"+\n\nServerUser\022\035\n\004user\030\001 \003(\0132\017.q"
      "iuwanli.Users\"\333\001\n\tRealUsers\022\017\n\007user_id\030\001"
      " \001(\t\022\026\n\016user_name_real\030\002 \001(\t\022\023\n\013user_idc"
      "ard\030\003 \001(\t\022\031\n\021user_live_address\030\004 \001(\t\022\022\n\n"
      "user_phone\030\005 \001(\t\022\017\n\007user_qq\030\006 \001(\t\022\024\n\014use"
      "r_mirchat\030\007 \001(\t\022\022\n\nuser_email\030\010 \001(\t\022\020\n\010u"
      "ser_bri\030\t \001(\t\022\024\n\014user_address\030\n \001(\t\"6\n\016S"
      "erverRealUser\022$\n\007realuer\030\001 \003(\0132\023.qiuwanl"
      "i.RealUsers\"]\n\007userreg\022\021\n\tuser_name\030\001 \001("
      "\t\022\031\n\021user_password_md5\030\002 \001(\t\022\022\n\nuser_pho"
      "ne\030\003 \001(\t\022\020\n\010reg_code\030\004 \001(\t\"\\\n\013LoginIpLog"
      "s\022\017\n\007user_id\030\001 \001(\t\022\017\n\007loginip\030\002 \001(\r\022\021\n\tl"
      "ogindate\030\003 \001(\004\022\030\n\020user_client_UUID\030\004 \001(\t"
      "\">\n\020ServerLoginIPLog\022*\n\013loginliplog\030\001 \003("
      "\0132\025.qiuwanli.LoginIpLogs\"g\n\004Logs\022\017\n\007user"
      "_id\030\001 \001(\t\022\020\n\010log_date\030\002 \001(\004\022\020\n\010log_info\030"
      "\003 \001(\t\022\020\n\010log_type\030\004 \001(\014\022\030\n\020user_client_U"
      "UID\030\005 \001(\t\"6\n\006AllLog\022\017\n\007logdate\030\001 \001(\t\022\033\n\003"
      "log\030\002 \003(\0132\016.qiuwanli.Logs\"|\n\016FilesShared"
      "Log\022\022\n\nshared_url\030\001 \001(\t\022\021\n\tshared_ps\030\002 \001"
      "(\t\022\023\n\013shared_time\030\003 \001(\004\022\030\n\020shared_timele"
      "nth\030\004 \001(\r\022\024\n\014shared_types\030\005 \001(\014\":\n\010MyFri"
      "end\022\020\n\010friendID\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006s"
      "tatus\030\003 \001(\t\"9\n\nFileShared\022+\n\tsharedlog\030\001"
      " \003(\0132\030.qiuwanli.FilesSharedLog\"0\n\nFriedn"
      "List\022\"\n\006friend\030\001 \003(\0132\022.qiuwanli.MyFriend"
      "\"e\n\013FileDownLog\022\020\n\010filename\030\001 \001(\t\022\020\n\010fil"
      "epath\030\002 \001(\t\022\020\n\010downtime\030\003 \001(\t\022\020\n\010filesiz"
      "e\030\004 \001(\t\022\016\n\006status\030\005 \001(\t\"9\n\017FileDownLogFi"
      "le\022&\n\007filelog\030\001 \003(\0132\025.qiuwanli.FileDownL"
      "og\"q\n\016FileDowningLog\022\020\n\010filename\030\001 \001(\t\022\020"
      "\n\010filesize\030\002 \001(\t\022\020\n\010downtime\030\003 \001(\t\022\025\n\rDo"
      "wningstatus\030\004 \001(\t\022\022\n\nfilesha512\030\005 \001(\t\"A\n"
      "\020FileDownLogFiles\022-\n\013FileDownLog\030\001 \003(\0132\030"
      ".qiuwanli.FileDowningLog\"H\n\017Path4FilesOr"
      "Dir\022\021\n\tpathtypes\030\002 \001(\014\022\022\n\npathOrName\030\001 \001"
      "(\t\022\016\n\006fileId\030\003 \001(\r\"J\n\010AllFiles\022\020\n\010pathLi"
      "st\030\001 \001(\t\022,\n\tfilespath\030\002 \003(\0132\031.qiuwanli.P"
      "ath4FilesOrDir\"~\n\010FileInfo\022\016\n\006fileId\030\001 \001"
      "(\t\022\020\n\010filesize\030\002 \001(\r\022\021\n\tfilemd5_1\030\003 \001(\t\022"
      "\021\n\tfilemd5_2\030\004 \001(\t\022\026\n\016filecreatedate\030\005 \001"
      "(\004\022\022\n\nfilepathid\030\007 \001(\r\"0\n\014FileInfoFile\022 "
      "\n\004info\030\001 \003(\0132\022.qiuwanli.FileInfo\"D\n\013Buff"
      "erBlock\022\017\n\007maxsize\030\001 \001(\r\022\020\n\010currsize\030\002 \001"
      "(\r\022\022\n\nbufferdata\030\003 \001(\014\"_\n\017BufferBlockPoo"
      "l\022\023\n\013PoolMaxSize\030\001 \001(\r\022\020\n\010PoolSize\030\002 \001(\r"
      "\022%\n\006buffer\030\003 \003(\0132\025.qiuwanli.BufferBlock\""
      "I\n\rFileBlockInfo\022\017\n\007file_id\030\001 \001(\t\022\025\n\rfil"
      "eblock_num\030\002 \001(\r\022\020\n\010file_CRC\030\003 \001(\t\"X\n\010fi"
      "letemp\022)\n\010fileinfo\030\001 \001(\0132\027.qiuwanli.File"
      "BlockInfo\022\016\n\006BitMap\030\002 \001(\014\022\021\n\tNowStatus\030\003"
      " \001(\t\"r\n\010allfiles\022\017\n\007user_id\030\001 \001(\t\022\020\n\010fil"
      "es_ip\030\002 \001(\r\022\021\n\tshared_id\030\003 \001(\t\022\026\n\016filesb"
      "lock_num\030\004 \001(\r\022\030\n\020filesblock_start\030\005 \001(\r"
      "\"{\n\013files_small\022\027\n\017file_small_name\030\001 \001(\t"
      "\022\036\n\026file_small_create_time\030\002 \001(\r\022\030\n\020file"
      "_small_start\030\003 \001(\r\022\031\n\021file_small_length\030"
      "\004 \001(\r\"/\n\021files_small_block\022\032\n\022files_smal"
      "l_blocks\030\001 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2502);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MyDataStruct.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_MyDataStruct_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Users::kUserIdFieldNumber;
const int Users::kUserNameFieldNumber;
const int Users::kUserPasswordMd5FieldNumber;
const int Users::kUserClientUUIDFieldNumber;
const int Users::kLoginCodeFieldNumber;
const int Users::kUserTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Users::Users()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.Users)
}
Users::Users(const Users& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_password_md5().size() > 0) {
    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  login_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_code().size() > 0) {
    login_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_code_);
  }
  user_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_type().size() > 0) {
    user_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_type_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.Users)
}

void Users::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Users::~Users() {
  // @@protoc_insertion_point(destructor:qiuwanli.Users)
  SharedDtor();
}

void Users::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Users::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Users::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[0].descriptor;
}

const Users& Users::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

Users* Users::New(::google::protobuf::Arena* arena) const {
  Users* n = new Users;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Users::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.Users)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Users::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.Users)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Users.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Users.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_password_md5 = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_password_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_password_md5().data(), this->user_password_md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Users.user_password_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Users.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_code = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_code().data(), this->login_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Users.login_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes user_type = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_user_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.Users)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.Users)
  return false;
#undef DO_
}

void Users::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.Users)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // string user_password_md5 = 3;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_password_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_password_md5(), output);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_client_uuid(), output);
  }

  // string login_code = 5;
  if (this->login_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_code().data(), this->login_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.login_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->login_code(), output);
  }

  // bytes user_type = 6;
  if (this->user_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->user_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.Users)
}

::google::protobuf::uint8* Users::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.Users)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // string user_password_md5 = 3;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_password_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_password_md5(), target);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_client_uuid(), target);
  }

  // string login_code = 5;
  if (this->login_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_code().data(), this->login_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Users.login_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->login_code(), target);
  }

  // bytes user_type = 6;
  if (this->user_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->user_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.Users)
  return target;
}

size_t Users::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.Users)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string user_password_md5 = 3;
  if (this->user_password_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_password_md5());
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  // string login_code = 5;
  if (this->login_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_code());
  }

  // bytes user_type = 6;
  if (this->user_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->user_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Users::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.Users)
  GOOGLE_DCHECK_NE(&from, this);
  const Users* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Users>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.Users)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.Users)
    MergeFrom(*source);
  }
}

void Users::MergeFrom(const Users& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.Users)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.user_password_md5().size() > 0) {

    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  if (from.login_code().size() > 0) {

    login_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_code_);
  }
  if (from.user_type().size() > 0) {

    user_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_type_);
  }
}

void Users::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.Users)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Users::CopyFrom(const Users& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.Users)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Users::IsInitialized() const {
  return true;
}

void Users::Swap(Users* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Users::InternalSwap(Users* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  user_password_md5_.Swap(&other->user_password_md5_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  login_code_.Swap(&other->login_code_);
  user_type_.Swap(&other->user_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Users::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Users

// string user_id = 1;
void Users::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Users::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_id)
  return user_id_.GetNoArena();
}
void Users::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_id)
}
#if LANG_CXX11
void Users::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_id)
}
#endif
void Users::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_id)
}
void Users::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_id)
}
::std::string* Users::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Users::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Users::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_id)
}

// string user_name = 2;
void Users::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Users::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_name)
  return user_name_.GetNoArena();
}
void Users::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_name)
}
#if LANG_CXX11
void Users::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_name)
}
#endif
void Users::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_name)
}
void Users::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_name)
}
::std::string* Users::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Users::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Users::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_name)
}

// string user_password_md5 = 3;
void Users::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Users::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_password_md5)
  return user_password_md5_.GetNoArena();
}
void Users::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_password_md5)
}
#if LANG_CXX11
void Users::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_password_md5)
}
#endif
void Users::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_password_md5)
}
void Users::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_password_md5)
}
::std::string* Users::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Users::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Users::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_password_md5)
}

// string user_client_UUID = 4;
void Users::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Users::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void Users::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_client_UUID)
}
#if LANG_CXX11
void Users::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_client_UUID)
}
#endif
void Users::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_client_UUID)
}
void Users::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_client_UUID)
}
::std::string* Users::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Users::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Users::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_client_UUID)
}

// string login_code = 5;
void Users::clear_login_code() {
  login_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Users::login_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.login_code)
  return login_code_.GetNoArena();
}
void Users::set_login_code(const ::std::string& value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.login_code)
}
#if LANG_CXX11
void Users::set_login_code(::std::string&& value) {
  
  login_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.login_code)
}
#endif
void Users::set_login_code(const char* value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.login_code)
}
void Users::set_login_code(const char* value, size_t size) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.login_code)
}
::std::string* Users::mutable_login_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.login_code)
  return login_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Users::release_login_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.login_code)
  
  return login_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Users::set_allocated_login_code(::std::string* login_code) {
  if (login_code != NULL) {
    
  } else {
    
  }
  login_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.login_code)
}

// bytes user_type = 6;
void Users::clear_user_type() {
  user_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Users::user_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Users.user_type)
  return user_type_.GetNoArena();
}
void Users::set_user_type(const ::std::string& value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Users.user_type)
}
#if LANG_CXX11
void Users::set_user_type(::std::string&& value) {
  
  user_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Users.user_type)
}
#endif
void Users::set_user_type(const char* value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Users.user_type)
}
void Users::set_user_type(const void* value, size_t size) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Users.user_type)
}
::std::string* Users::mutable_user_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Users.user_type)
  return user_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Users::release_user_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Users.user_type)
  
  return user_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Users::set_allocated_user_type(::std::string* user_type) {
  if (user_type != NULL) {
    
  } else {
    
  }
  user_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Users.user_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerUser::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerUser::ServerUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.ServerUser)
}
ServerUser::ServerUser(const ServerUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_(from.user_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.ServerUser)
}

void ServerUser::SharedCtor() {
  _cached_size_ = 0;
}

ServerUser::~ServerUser() {
  // @@protoc_insertion_point(destructor:qiuwanli.ServerUser)
  SharedDtor();
}

void ServerUser::SharedDtor() {
}

void ServerUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerUser::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[1].descriptor;
}

const ServerUser& ServerUser::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerUser* ServerUser::New(::google::protobuf::Arena* arena) const {
  ServerUser* n = new ServerUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerUser::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.ServerUser)
  user_.Clear();
}

bool ServerUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.ServerUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.Users user = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_user()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.ServerUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.ServerUser)
  return false;
#undef DO_
}

void ServerUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.ServerUser)
  // repeated .qiuwanli.Users user = 1;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.ServerUser)
}

::google::protobuf::uint8* ServerUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.ServerUser)
  // repeated .qiuwanli.Users user = 1;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->user(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.ServerUser)
  return target;
}

size_t ServerUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.ServerUser)
  size_t total_size = 0;

  // repeated .qiuwanli.Users user = 1;
  {
    unsigned int count = this->user_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.ServerUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.ServerUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.ServerUser)
    MergeFrom(*source);
  }
}

void ServerUser::MergeFrom(const ServerUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.ServerUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.MergeFrom(from.user_);
}

void ServerUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.ServerUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerUser::CopyFrom(const ServerUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.ServerUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerUser::IsInitialized() const {
  return true;
}

void ServerUser::Swap(ServerUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerUser::InternalSwap(ServerUser* other) {
  user_.UnsafeArenaSwap(&other->user_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerUser::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerUser

// repeated .qiuwanli.Users user = 1;
int ServerUser::user_size() const {
  return user_.size();
}
void ServerUser::clear_user() {
  user_.Clear();
}
const ::qiuwanli::Users& ServerUser::user(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ServerUser.user)
  return user_.Get(index);
}
::qiuwanli::Users* ServerUser::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ServerUser.user)
  return user_.Mutable(index);
}
::qiuwanli::Users* ServerUser::add_user() {
  // @@protoc_insertion_point(field_add:qiuwanli.ServerUser.user)
  return user_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::Users >*
ServerUser::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ServerUser.user)
  return &user_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Users >&
ServerUser::user() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ServerUser.user)
  return user_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RealUsers::kUserIdFieldNumber;
const int RealUsers::kUserNameRealFieldNumber;
const int RealUsers::kUserIdcardFieldNumber;
const int RealUsers::kUserLiveAddressFieldNumber;
const int RealUsers::kUserPhoneFieldNumber;
const int RealUsers::kUserQqFieldNumber;
const int RealUsers::kUserMirchatFieldNumber;
const int RealUsers::kUserEmailFieldNumber;
const int RealUsers::kUserBriFieldNumber;
const int RealUsers::kUserAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RealUsers::RealUsers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.RealUsers)
}
RealUsers::RealUsers(const RealUsers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_name_real_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name_real().size() > 0) {
    user_name_real_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_real_);
  }
  user_idcard_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_idcard().size() > 0) {
    user_idcard_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_idcard_);
  }
  user_live_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_live_address().size() > 0) {
    user_live_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_live_address_);
  }
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_phone().size() > 0) {
    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  user_qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_qq().size() > 0) {
    user_qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_qq_);
  }
  user_mirchat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_mirchat().size() > 0) {
    user_mirchat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_mirchat_);
  }
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_email().size() > 0) {
    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  user_bri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_bri().size() > 0) {
    user_bri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_bri_);
  }
  user_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_address().size() > 0) {
    user_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_address_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.RealUsers)
}

void RealUsers::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_real_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_idcard_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_live_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_mirchat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_bri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RealUsers::~RealUsers() {
  // @@protoc_insertion_point(destructor:qiuwanli.RealUsers)
  SharedDtor();
}

void RealUsers::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_real_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_idcard_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_live_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_qq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_mirchat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_bri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RealUsers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RealUsers::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[2].descriptor;
}

const RealUsers& RealUsers::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

RealUsers* RealUsers::New(::google::protobuf::Arena* arena) const {
  RealUsers* n = new RealUsers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RealUsers::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.RealUsers)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_real_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_live_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_mirchat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_bri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RealUsers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.RealUsers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name_real = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name_real()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name_real().data(), this->user_name_real().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_name_real"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_idcard = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_idcard()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_idcard().data(), this->user_idcard().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_idcard"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_live_address = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_live_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_live_address().data(), this->user_live_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_live_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_phone = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_phone().data(), this->user_phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_qq = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_qq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_qq().data(), this->user_qq().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_qq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_mirchat = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_mirchat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_mirchat().data(), this->user_mirchat().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_mirchat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_email = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_email().data(), this->user_email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_bri = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_bri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_bri().data(), this->user_bri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_bri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_address = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_address().data(), this->user_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.RealUsers.user_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.RealUsers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.RealUsers)
  return false;
#undef DO_
}

void RealUsers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.RealUsers)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string user_name_real = 2;
  if (this->user_name_real().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name_real().data(), this->user_name_real().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_name_real");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name_real(), output);
  }

  // string user_idcard = 3;
  if (this->user_idcard().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_idcard().data(), this->user_idcard().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_idcard");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_idcard(), output);
  }

  // string user_live_address = 4;
  if (this->user_live_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_live_address().data(), this->user_live_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_live_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_live_address(), output);
  }

  // string user_phone = 5;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_phone(), output);
  }

  // string user_qq = 6;
  if (this->user_qq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_qq().data(), this->user_qq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_qq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_qq(), output);
  }

  // string user_mirchat = 7;
  if (this->user_mirchat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_mirchat().data(), this->user_mirchat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_mirchat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_mirchat(), output);
  }

  // string user_email = 8;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), this->user_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user_email(), output);
  }

  // string user_bri = 9;
  if (this->user_bri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_bri().data(), this->user_bri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_bri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->user_bri(), output);
  }

  // string user_address = 10;
  if (this->user_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_address().data(), this->user_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->user_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.RealUsers)
}

::google::protobuf::uint8* RealUsers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.RealUsers)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string user_name_real = 2;
  if (this->user_name_real().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name_real().data(), this->user_name_real().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_name_real");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name_real(), target);
  }

  // string user_idcard = 3;
  if (this->user_idcard().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_idcard().data(), this->user_idcard().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_idcard");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_idcard(), target);
  }

  // string user_live_address = 4;
  if (this->user_live_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_live_address().data(), this->user_live_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_live_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_live_address(), target);
  }

  // string user_phone = 5;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_phone(), target);
  }

  // string user_qq = 6;
  if (this->user_qq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_qq().data(), this->user_qq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_qq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_qq(), target);
  }

  // string user_mirchat = 7;
  if (this->user_mirchat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_mirchat().data(), this->user_mirchat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_mirchat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->user_mirchat(), target);
  }

  // string user_email = 8;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), this->user_email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user_email(), target);
  }

  // string user_bri = 9;
  if (this->user_bri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_bri().data(), this->user_bri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_bri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->user_bri(), target);
  }

  // string user_address = 10;
  if (this->user_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_address().data(), this->user_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.RealUsers.user_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->user_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.RealUsers)
  return target;
}

size_t RealUsers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.RealUsers)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string user_name_real = 2;
  if (this->user_name_real().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name_real());
  }

  // string user_idcard = 3;
  if (this->user_idcard().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_idcard());
  }

  // string user_live_address = 4;
  if (this->user_live_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_live_address());
  }

  // string user_phone = 5;
  if (this->user_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_phone());
  }

  // string user_qq = 6;
  if (this->user_qq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_qq());
  }

  // string user_mirchat = 7;
  if (this->user_mirchat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_mirchat());
  }

  // string user_email = 8;
  if (this->user_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_email());
  }

  // string user_bri = 9;
  if (this->user_bri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_bri());
  }

  // string user_address = 10;
  if (this->user_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RealUsers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.RealUsers)
  GOOGLE_DCHECK_NE(&from, this);
  const RealUsers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RealUsers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.RealUsers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.RealUsers)
    MergeFrom(*source);
  }
}

void RealUsers::MergeFrom(const RealUsers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.RealUsers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_name_real().size() > 0) {

    user_name_real_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_real_);
  }
  if (from.user_idcard().size() > 0) {

    user_idcard_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_idcard_);
  }
  if (from.user_live_address().size() > 0) {

    user_live_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_live_address_);
  }
  if (from.user_phone().size() > 0) {

    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  if (from.user_qq().size() > 0) {

    user_qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_qq_);
  }
  if (from.user_mirchat().size() > 0) {

    user_mirchat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_mirchat_);
  }
  if (from.user_email().size() > 0) {

    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  if (from.user_bri().size() > 0) {

    user_bri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_bri_);
  }
  if (from.user_address().size() > 0) {

    user_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_address_);
  }
}

void RealUsers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.RealUsers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealUsers::CopyFrom(const RealUsers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.RealUsers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealUsers::IsInitialized() const {
  return true;
}

void RealUsers::Swap(RealUsers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RealUsers::InternalSwap(RealUsers* other) {
  user_id_.Swap(&other->user_id_);
  user_name_real_.Swap(&other->user_name_real_);
  user_idcard_.Swap(&other->user_idcard_);
  user_live_address_.Swap(&other->user_live_address_);
  user_phone_.Swap(&other->user_phone_);
  user_qq_.Swap(&other->user_qq_);
  user_mirchat_.Swap(&other->user_mirchat_);
  user_email_.Swap(&other->user_email_);
  user_bri_.Swap(&other->user_bri_);
  user_address_.Swap(&other->user_address_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RealUsers::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RealUsers

// string user_id = 1;
void RealUsers::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_id)
  return user_id_.GetNoArena();
}
void RealUsers::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_id)
}
#if LANG_CXX11
void RealUsers::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_id)
}
#endif
void RealUsers::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_id)
}
void RealUsers::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_id)
}
::std::string* RealUsers::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_id)
}

// string user_name_real = 2;
void RealUsers::clear_user_name_real() {
  user_name_real_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_name_real() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_name_real)
  return user_name_real_.GetNoArena();
}
void RealUsers::set_user_name_real(const ::std::string& value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_name_real)
}
#if LANG_CXX11
void RealUsers::set_user_name_real(::std::string&& value) {
  
  user_name_real_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_name_real)
}
#endif
void RealUsers::set_user_name_real(const char* value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_name_real)
}
void RealUsers::set_user_name_real(const char* value, size_t size) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_name_real)
}
::std::string* RealUsers::mutable_user_name_real() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_name_real)
  return user_name_real_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_name_real() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_name_real)
  
  return user_name_real_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_name_real(::std::string* user_name_real) {
  if (user_name_real != NULL) {
    
  } else {
    
  }
  user_name_real_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name_real);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_name_real)
}

// string user_idcard = 3;
void RealUsers::clear_user_idcard() {
  user_idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_idcard() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_idcard)
  return user_idcard_.GetNoArena();
}
void RealUsers::set_user_idcard(const ::std::string& value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_idcard)
}
#if LANG_CXX11
void RealUsers::set_user_idcard(::std::string&& value) {
  
  user_idcard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_idcard)
}
#endif
void RealUsers::set_user_idcard(const char* value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_idcard)
}
void RealUsers::set_user_idcard(const char* value, size_t size) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_idcard)
}
::std::string* RealUsers::mutable_user_idcard() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_idcard)
  return user_idcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_idcard() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_idcard)
  
  return user_idcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_idcard(::std::string* user_idcard) {
  if (user_idcard != NULL) {
    
  } else {
    
  }
  user_idcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_idcard);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_idcard)
}

// string user_live_address = 4;
void RealUsers::clear_user_live_address() {
  user_live_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_live_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_live_address)
  return user_live_address_.GetNoArena();
}
void RealUsers::set_user_live_address(const ::std::string& value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_live_address)
}
#if LANG_CXX11
void RealUsers::set_user_live_address(::std::string&& value) {
  
  user_live_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_live_address)
}
#endif
void RealUsers::set_user_live_address(const char* value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_live_address)
}
void RealUsers::set_user_live_address(const char* value, size_t size) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_live_address)
}
::std::string* RealUsers::mutable_user_live_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_live_address)
  return user_live_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_live_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_live_address)
  
  return user_live_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_live_address(::std::string* user_live_address) {
  if (user_live_address != NULL) {
    
  } else {
    
  }
  user_live_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_live_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_live_address)
}

// string user_phone = 5;
void RealUsers::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_phone)
  return user_phone_.GetNoArena();
}
void RealUsers::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_phone)
}
#if LANG_CXX11
void RealUsers::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_phone)
}
#endif
void RealUsers::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_phone)
}
void RealUsers::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_phone)
}
::std::string* RealUsers::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_phone)
}

// string user_qq = 6;
void RealUsers::clear_user_qq() {
  user_qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_qq() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_qq)
  return user_qq_.GetNoArena();
}
void RealUsers::set_user_qq(const ::std::string& value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_qq)
}
#if LANG_CXX11
void RealUsers::set_user_qq(::std::string&& value) {
  
  user_qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_qq)
}
#endif
void RealUsers::set_user_qq(const char* value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_qq)
}
void RealUsers::set_user_qq(const char* value, size_t size) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_qq)
}
::std::string* RealUsers::mutable_user_qq() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_qq)
  return user_qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_qq() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_qq)
  
  return user_qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_qq(::std::string* user_qq) {
  if (user_qq != NULL) {
    
  } else {
    
  }
  user_qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_qq);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_qq)
}

// string user_mirchat = 7;
void RealUsers::clear_user_mirchat() {
  user_mirchat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_mirchat() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_mirchat)
  return user_mirchat_.GetNoArena();
}
void RealUsers::set_user_mirchat(const ::std::string& value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_mirchat)
}
#if LANG_CXX11
void RealUsers::set_user_mirchat(::std::string&& value) {
  
  user_mirchat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_mirchat)
}
#endif
void RealUsers::set_user_mirchat(const char* value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_mirchat)
}
void RealUsers::set_user_mirchat(const char* value, size_t size) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_mirchat)
}
::std::string* RealUsers::mutable_user_mirchat() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_mirchat)
  return user_mirchat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_mirchat() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_mirchat)
  
  return user_mirchat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_mirchat(::std::string* user_mirchat) {
  if (user_mirchat != NULL) {
    
  } else {
    
  }
  user_mirchat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_mirchat);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_mirchat)
}

// string user_email = 8;
void RealUsers::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_email() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_email)
  return user_email_.GetNoArena();
}
void RealUsers::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_email)
}
#if LANG_CXX11
void RealUsers::set_user_email(::std::string&& value) {
  
  user_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_email)
}
#endif
void RealUsers::set_user_email(const char* value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_email)
}
void RealUsers::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_email)
}
::std::string* RealUsers::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_email() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_email)
}

// string user_bri = 9;
void RealUsers::clear_user_bri() {
  user_bri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_bri() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_bri)
  return user_bri_.GetNoArena();
}
void RealUsers::set_user_bri(const ::std::string& value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_bri)
}
#if LANG_CXX11
void RealUsers::set_user_bri(::std::string&& value) {
  
  user_bri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_bri)
}
#endif
void RealUsers::set_user_bri(const char* value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_bri)
}
void RealUsers::set_user_bri(const char* value, size_t size) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_bri)
}
::std::string* RealUsers::mutable_user_bri() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_bri)
  return user_bri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_bri() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_bri)
  
  return user_bri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_bri(::std::string* user_bri) {
  if (user_bri != NULL) {
    
  } else {
    
  }
  user_bri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_bri);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_bri)
}

// string user_address = 10;
void RealUsers::clear_user_address() {
  user_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RealUsers::user_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.RealUsers.user_address)
  return user_address_.GetNoArena();
}
void RealUsers::set_user_address(const ::std::string& value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.RealUsers.user_address)
}
#if LANG_CXX11
void RealUsers::set_user_address(::std::string&& value) {
  
  user_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.RealUsers.user_address)
}
#endif
void RealUsers::set_user_address(const char* value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.RealUsers.user_address)
}
void RealUsers::set_user_address(const char* value, size_t size) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.RealUsers.user_address)
}
::std::string* RealUsers::mutable_user_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.RealUsers.user_address)
  return user_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RealUsers::release_user_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.RealUsers.user_address)
  
  return user_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RealUsers::set_allocated_user_address(::std::string* user_address) {
  if (user_address != NULL) {
    
  } else {
    
  }
  user_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.RealUsers.user_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRealUser::kRealuerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRealUser::ServerRealUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.ServerRealUser)
}
ServerRealUser::ServerRealUser(const ServerRealUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      realuer_(from.realuer_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.ServerRealUser)
}

void ServerRealUser::SharedCtor() {
  _cached_size_ = 0;
}

ServerRealUser::~ServerRealUser() {
  // @@protoc_insertion_point(destructor:qiuwanli.ServerRealUser)
  SharedDtor();
}

void ServerRealUser::SharedDtor() {
}

void ServerRealUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRealUser::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[3].descriptor;
}

const ServerRealUser& ServerRealUser::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerRealUser* ServerRealUser::New(::google::protobuf::Arena* arena) const {
  ServerRealUser* n = new ServerRealUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerRealUser::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.ServerRealUser)
  realuer_.Clear();
}

bool ServerRealUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.ServerRealUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.RealUsers realuer = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_realuer()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.ServerRealUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.ServerRealUser)
  return false;
#undef DO_
}

void ServerRealUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.ServerRealUser)
  // repeated .qiuwanli.RealUsers realuer = 1;
  for (unsigned int i = 0, n = this->realuer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->realuer(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.ServerRealUser)
}

::google::protobuf::uint8* ServerRealUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.ServerRealUser)
  // repeated .qiuwanli.RealUsers realuer = 1;
  for (unsigned int i = 0, n = this->realuer_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->realuer(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.ServerRealUser)
  return target;
}

size_t ServerRealUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.ServerRealUser)
  size_t total_size = 0;

  // repeated .qiuwanli.RealUsers realuer = 1;
  {
    unsigned int count = this->realuer_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->realuer(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRealUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.ServerRealUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRealUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRealUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.ServerRealUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.ServerRealUser)
    MergeFrom(*source);
  }
}

void ServerRealUser::MergeFrom(const ServerRealUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.ServerRealUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  realuer_.MergeFrom(from.realuer_);
}

void ServerRealUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.ServerRealUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRealUser::CopyFrom(const ServerRealUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.ServerRealUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRealUser::IsInitialized() const {
  return true;
}

void ServerRealUser::Swap(ServerRealUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRealUser::InternalSwap(ServerRealUser* other) {
  realuer_.UnsafeArenaSwap(&other->realuer_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRealUser::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerRealUser

// repeated .qiuwanli.RealUsers realuer = 1;
int ServerRealUser::realuer_size() const {
  return realuer_.size();
}
void ServerRealUser::clear_realuer() {
  realuer_.Clear();
}
const ::qiuwanli::RealUsers& ServerRealUser::realuer(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ServerRealUser.realuer)
  return realuer_.Get(index);
}
::qiuwanli::RealUsers* ServerRealUser::mutable_realuer(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ServerRealUser.realuer)
  return realuer_.Mutable(index);
}
::qiuwanli::RealUsers* ServerRealUser::add_realuer() {
  // @@protoc_insertion_point(field_add:qiuwanli.ServerRealUser.realuer)
  return realuer_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::RealUsers >*
ServerRealUser::mutable_realuer() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ServerRealUser.realuer)
  return &realuer_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::RealUsers >&
ServerRealUser::realuer() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ServerRealUser.realuer)
  return realuer_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int userreg::kUserNameFieldNumber;
const int userreg::kUserPasswordMd5FieldNumber;
const int userreg::kUserPhoneFieldNumber;
const int userreg::kRegCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

userreg::userreg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.userreg)
}
userreg::userreg(const userreg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_password_md5().size() > 0) {
    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_phone().size() > 0) {
    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  reg_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reg_code().size() > 0) {
    reg_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reg_code_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.userreg)
}

void userreg::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

userreg::~userreg() {
  // @@protoc_insertion_point(destructor:qiuwanli.userreg)
  SharedDtor();
}

void userreg::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void userreg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* userreg::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[4].descriptor;
}

const userreg& userreg::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

userreg* userreg::New(::google::protobuf::Arena* arena) const {
  userreg* n = new userreg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void userreg::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.userreg)
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reg_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool userreg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.userreg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_password_md5 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_password_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_password_md5().data(), this->user_password_md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.user_password_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_phone = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_phone().data(), this->user_phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.user_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reg_code = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reg_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reg_code().data(), this->reg_code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.userreg.reg_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.userreg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.userreg)
  return false;
#undef DO_
}

void userreg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.userreg)
  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // string user_password_md5 = 2;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_password_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_password_md5(), output);
  }

  // string user_phone = 3;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_phone(), output);
  }

  // string reg_code = 4;
  if (this->reg_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reg_code().data(), this->reg_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.reg_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reg_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.userreg)
}

::google::protobuf::uint8* userreg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.userreg)
  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // string user_password_md5 = 2;
  if (this->user_password_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_password_md5().data(), this->user_password_md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_password_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_password_md5(), target);
  }

  // string user_phone = 3;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), this->user_phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.user_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_phone(), target);
  }

  // string reg_code = 4;
  if (this->reg_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reg_code().data(), this->reg_code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.userreg.reg_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reg_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.userreg)
  return target;
}

size_t userreg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.userreg)
  size_t total_size = 0;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string user_password_md5 = 2;
  if (this->user_password_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_password_md5());
  }

  // string user_phone = 3;
  if (this->user_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_phone());
  }

  // string reg_code = 4;
  if (this->reg_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reg_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void userreg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.userreg)
  GOOGLE_DCHECK_NE(&from, this);
  const userreg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const userreg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.userreg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.userreg)
    MergeFrom(*source);
  }
}

void userreg::MergeFrom(const userreg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.userreg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.user_password_md5().size() > 0) {

    user_password_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_password_md5_);
  }
  if (from.user_phone().size() > 0) {

    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  if (from.reg_code().size() > 0) {

    reg_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reg_code_);
  }
}

void userreg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.userreg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void userreg::CopyFrom(const userreg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.userreg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool userreg::IsInitialized() const {
  return true;
}

void userreg::Swap(userreg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void userreg::InternalSwap(userreg* other) {
  user_name_.Swap(&other->user_name_);
  user_password_md5_.Swap(&other->user_password_md5_);
  user_phone_.Swap(&other->user_phone_);
  reg_code_.Swap(&other->reg_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata userreg::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// userreg

// string user_name = 1;
void userreg::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_name)
  return user_name_.GetNoArena();
}
void userreg::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_name)
}
#if LANG_CXX11
void userreg::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_name)
}
#endif
void userreg::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_name)
}
void userreg::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_name)
}
::std::string* userreg::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_name)
}

// string user_password_md5 = 2;
void userreg::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.GetNoArena();
}
void userreg::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_password_md5)
}
#if LANG_CXX11
void userreg::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_password_md5)
}
#endif
void userreg::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_password_md5)
}
void userreg::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_password_md5)
}
::std::string* userreg::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_password_md5)
}

// string user_phone = 3;
void userreg::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_phone)
  return user_phone_.GetNoArena();
}
void userreg::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_phone)
}
#if LANG_CXX11
void userreg::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_phone)
}
#endif
void userreg::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_phone)
}
void userreg::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_phone)
}
::std::string* userreg::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_phone)
}

// string reg_code = 4;
void userreg::clear_reg_code() {
  reg_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& userreg::reg_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.reg_code)
  return reg_code_.GetNoArena();
}
void userreg::set_reg_code(const ::std::string& value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.reg_code)
}
#if LANG_CXX11
void userreg::set_reg_code(::std::string&& value) {
  
  reg_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.reg_code)
}
#endif
void userreg::set_reg_code(const char* value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.reg_code)
}
void userreg::set_reg_code(const char* value, size_t size) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.reg_code)
}
::std::string* userreg::mutable_reg_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.reg_code)
  return reg_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* userreg::release_reg_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.reg_code)
  
  return reg_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void userreg::set_allocated_reg_code(::std::string* reg_code) {
  if (reg_code != NULL) {
    
  } else {
    
  }
  reg_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reg_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.reg_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginIpLogs::kUserIdFieldNumber;
const int LoginIpLogs::kLoginipFieldNumber;
const int LoginIpLogs::kLogindateFieldNumber;
const int LoginIpLogs::kUserClientUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginIpLogs::LoginIpLogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.LoginIpLogs)
}
LoginIpLogs::LoginIpLogs(const LoginIpLogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  ::memcpy(&logindate_, &from.logindate_,
    reinterpret_cast<char*>(&loginip_) -
    reinterpret_cast<char*>(&logindate_) + sizeof(loginip_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.LoginIpLogs)
}

void LoginIpLogs::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logindate_, 0, reinterpret_cast<char*>(&loginip_) -
    reinterpret_cast<char*>(&logindate_) + sizeof(loginip_));
  _cached_size_ = 0;
}

LoginIpLogs::~LoginIpLogs() {
  // @@protoc_insertion_point(destructor:qiuwanli.LoginIpLogs)
  SharedDtor();
}

void LoginIpLogs::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginIpLogs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginIpLogs::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[5].descriptor;
}

const LoginIpLogs& LoginIpLogs::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginIpLogs* LoginIpLogs::New(::google::protobuf::Arena* arena) const {
  LoginIpLogs* n = new LoginIpLogs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginIpLogs::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.LoginIpLogs)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logindate_, 0, reinterpret_cast<char*>(&loginip_) -
    reinterpret_cast<char*>(&logindate_) + sizeof(loginip_));
}

bool LoginIpLogs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.LoginIpLogs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.LoginIpLogs.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loginip = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loginip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 logindate = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logindate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.LoginIpLogs.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.LoginIpLogs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.LoginIpLogs)
  return false;
#undef DO_
}

void LoginIpLogs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.LoginIpLogs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.LoginIpLogs.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // uint32 loginip = 2;
  if (this->loginip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loginip(), output);
  }

  // uint64 logindate = 3;
  if (this->logindate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->logindate(), output);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.LoginIpLogs.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_client_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.LoginIpLogs)
}

::google::protobuf::uint8* LoginIpLogs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.LoginIpLogs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.LoginIpLogs.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // uint32 loginip = 2;
  if (this->loginip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loginip(), target);
  }

  // uint64 logindate = 3;
  if (this->logindate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->logindate(), target);
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.LoginIpLogs.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_client_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.LoginIpLogs)
  return target;
}

size_t LoginIpLogs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.LoginIpLogs)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string user_client_UUID = 4;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  // uint64 logindate = 3;
  if (this->logindate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logindate());
  }

  // uint32 loginip = 2;
  if (this->loginip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loginip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginIpLogs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.LoginIpLogs)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginIpLogs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginIpLogs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.LoginIpLogs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.LoginIpLogs)
    MergeFrom(*source);
  }
}

void LoginIpLogs::MergeFrom(const LoginIpLogs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.LoginIpLogs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  if (from.logindate() != 0) {
    set_logindate(from.logindate());
  }
  if (from.loginip() != 0) {
    set_loginip(from.loginip());
  }
}

void LoginIpLogs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.LoginIpLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginIpLogs::CopyFrom(const LoginIpLogs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.LoginIpLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginIpLogs::IsInitialized() const {
  return true;
}

void LoginIpLogs::Swap(LoginIpLogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginIpLogs::InternalSwap(LoginIpLogs* other) {
  user_id_.Swap(&other->user_id_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  std::swap(logindate_, other->logindate_);
  std::swap(loginip_, other->loginip_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginIpLogs::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginIpLogs

// string user_id = 1;
void LoginIpLogs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginIpLogs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.user_id)
  return user_id_.GetNoArena();
}
void LoginIpLogs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.user_id)
}
#if LANG_CXX11
void LoginIpLogs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LoginIpLogs.user_id)
}
#endif
void LoginIpLogs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LoginIpLogs.user_id)
}
void LoginIpLogs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LoginIpLogs.user_id)
}
::std::string* LoginIpLogs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LoginIpLogs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginIpLogs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.LoginIpLogs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginIpLogs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LoginIpLogs.user_id)
}

// uint32 loginip = 2;
void LoginIpLogs::clear_loginip() {
  loginip_ = 0u;
}
::google::protobuf::uint32 LoginIpLogs::loginip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.loginip)
  return loginip_;
}
void LoginIpLogs::set_loginip(::google::protobuf::uint32 value) {
  
  loginip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.loginip)
}

// uint64 logindate = 3;
void LoginIpLogs::clear_logindate() {
  logindate_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 LoginIpLogs::logindate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.logindate)
  return logindate_;
}
void LoginIpLogs::set_logindate(::google::protobuf::uint64 value) {
  
  logindate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.logindate)
}

// string user_client_UUID = 4;
void LoginIpLogs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginIpLogs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LoginIpLogs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void LoginIpLogs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LoginIpLogs.user_client_UUID)
}
#if LANG_CXX11
void LoginIpLogs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LoginIpLogs.user_client_UUID)
}
#endif
void LoginIpLogs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LoginIpLogs.user_client_UUID)
}
void LoginIpLogs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LoginIpLogs.user_client_UUID)
}
::std::string* LoginIpLogs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LoginIpLogs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginIpLogs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.LoginIpLogs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginIpLogs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LoginIpLogs.user_client_UUID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerLoginIPLog::kLoginliplogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerLoginIPLog::ServerLoginIPLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.ServerLoginIPLog)
}
ServerLoginIPLog::ServerLoginIPLog(const ServerLoginIPLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      loginliplog_(from.loginliplog_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.ServerLoginIPLog)
}

void ServerLoginIPLog::SharedCtor() {
  _cached_size_ = 0;
}

ServerLoginIPLog::~ServerLoginIPLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.ServerLoginIPLog)
  SharedDtor();
}

void ServerLoginIPLog::SharedDtor() {
}

void ServerLoginIPLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerLoginIPLog::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[6].descriptor;
}

const ServerLoginIPLog& ServerLoginIPLog::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerLoginIPLog* ServerLoginIPLog::New(::google::protobuf::Arena* arena) const {
  ServerLoginIPLog* n = new ServerLoginIPLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerLoginIPLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.ServerLoginIPLog)
  loginliplog_.Clear();
}

bool ServerLoginIPLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.ServerLoginIPLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.LoginIpLogs loginliplog = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_loginliplog()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.ServerLoginIPLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.ServerLoginIPLog)
  return false;
#undef DO_
}

void ServerLoginIPLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.ServerLoginIPLog)
  // repeated .qiuwanli.LoginIpLogs loginliplog = 1;
  for (unsigned int i = 0, n = this->loginliplog_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->loginliplog(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.ServerLoginIPLog)
}

::google::protobuf::uint8* ServerLoginIPLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.ServerLoginIPLog)
  // repeated .qiuwanli.LoginIpLogs loginliplog = 1;
  for (unsigned int i = 0, n = this->loginliplog_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->loginliplog(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.ServerLoginIPLog)
  return target;
}

size_t ServerLoginIPLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.ServerLoginIPLog)
  size_t total_size = 0;

  // repeated .qiuwanli.LoginIpLogs loginliplog = 1;
  {
    unsigned int count = this->loginliplog_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->loginliplog(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerLoginIPLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.ServerLoginIPLog)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLoginIPLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerLoginIPLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.ServerLoginIPLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.ServerLoginIPLog)
    MergeFrom(*source);
  }
}

void ServerLoginIPLog::MergeFrom(const ServerLoginIPLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.ServerLoginIPLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loginliplog_.MergeFrom(from.loginliplog_);
}

void ServerLoginIPLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.ServerLoginIPLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLoginIPLog::CopyFrom(const ServerLoginIPLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.ServerLoginIPLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLoginIPLog::IsInitialized() const {
  return true;
}

void ServerLoginIPLog::Swap(ServerLoginIPLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerLoginIPLog::InternalSwap(ServerLoginIPLog* other) {
  loginliplog_.UnsafeArenaSwap(&other->loginliplog_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerLoginIPLog::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerLoginIPLog

// repeated .qiuwanli.LoginIpLogs loginliplog = 1;
int ServerLoginIPLog::loginliplog_size() const {
  return loginliplog_.size();
}
void ServerLoginIPLog::clear_loginliplog() {
  loginliplog_.Clear();
}
const ::qiuwanli::LoginIpLogs& ServerLoginIPLog::loginliplog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_.Get(index);
}
::qiuwanli::LoginIpLogs* ServerLoginIPLog::mutable_loginliplog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_.Mutable(index);
}
::qiuwanli::LoginIpLogs* ServerLoginIPLog::add_loginliplog() {
  // @@protoc_insertion_point(field_add:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::LoginIpLogs >*
ServerLoginIPLog::mutable_loginliplog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ServerLoginIPLog.loginliplog)
  return &loginliplog_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::LoginIpLogs >&
ServerLoginIPLog::loginliplog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ServerLoginIPLog.loginliplog)
  return loginliplog_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Logs::kUserIdFieldNumber;
const int Logs::kLogDateFieldNumber;
const int Logs::kLogInfoFieldNumber;
const int Logs::kLogTypeFieldNumber;
const int Logs::kUserClientUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Logs::Logs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.Logs)
}
Logs::Logs(const Logs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_info().size() > 0) {
    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_type().size() > 0) {
    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  log_date_ = from.log_date_;
  // @@protoc_insertion_point(copy_constructor:qiuwanli.Logs)
}

void Logs::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Logs::~Logs() {
  // @@protoc_insertion_point(destructor:qiuwanli.Logs)
  SharedDtor();
}

void Logs::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Logs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Logs::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[7].descriptor;
}

const Logs& Logs::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

Logs* Logs::New(::google::protobuf::Arena* arena) const {
  Logs* n = new Logs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Logs::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.Logs)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_ = GOOGLE_ULONGLONG(0);
}

bool Logs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.Logs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 log_date = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_info = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_info().data(), this->log_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.log_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes log_type = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.Logs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.Logs)
  return false;
#undef DO_
}

void Logs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.Logs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->log_date(), output);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log_info(), output);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->log_type(), output);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_client_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.Logs)
}

::google::protobuf::uint8* Logs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.Logs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->log_date(), target);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log_info(), target);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->log_type(), target);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_client_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.Logs)
  return target;
}

size_t Logs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.Logs)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_info());
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->log_type());
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->log_date());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Logs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.Logs)
  GOOGLE_DCHECK_NE(&from, this);
  const Logs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Logs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.Logs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.Logs)
    MergeFrom(*source);
  }
}

void Logs::MergeFrom(const Logs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.Logs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.log_info().size() > 0) {

    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  if (from.log_type().size() > 0) {

    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  if (from.log_date() != 0) {
    set_log_date(from.log_date());
  }
}

void Logs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.Logs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Logs::CopyFrom(const Logs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.Logs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Logs::IsInitialized() const {
  return true;
}

void Logs::Swap(Logs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Logs::InternalSwap(Logs* other) {
  user_id_.Swap(&other->user_id_);
  log_info_.Swap(&other->log_info_);
  log_type_.Swap(&other->log_type_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  std::swap(log_date_, other->log_date_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Logs::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Logs

// string user_id = 1;
void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// uint64 log_date = 2;
void Logs::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_;
}
void Logs::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}

// string log_info = 3;
void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllLog::kLogdateFieldNumber;
const int AllLog::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllLog::AllLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.AllLog)
}
AllLog::AllLog(const AllLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      log_(from.log_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logdate().size() > 0) {
    logdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logdate_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.AllLog)
}

void AllLog::SharedCtor() {
  logdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AllLog::~AllLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.AllLog)
  SharedDtor();
}

void AllLog::SharedDtor() {
  logdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllLog::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[8].descriptor;
}

const AllLog& AllLog::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllLog* AllLog::New(::google::protobuf::Arena* arena) const {
  AllLog* n = new AllLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.AllLog)
  log_.Clear();
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AllLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.AllLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string logdate = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logdate().data(), this->logdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.AllLog.logdate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qiuwanli.Logs log = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_log()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.AllLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.AllLog)
  return false;
#undef DO_
}

void AllLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.AllLog)
  // string logdate = 1;
  if (this->logdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logdate().data(), this->logdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.AllLog.logdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->logdate(), output);
  }

  // repeated .qiuwanli.Logs log = 2;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->log(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.AllLog)
}

::google::protobuf::uint8* AllLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.AllLog)
  // string logdate = 1;
  if (this->logdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logdate().data(), this->logdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.AllLog.logdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->logdate(), target);
  }

  // repeated .qiuwanli.Logs log = 2;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->log(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.AllLog)
  return target;
}

size_t AllLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.AllLog)
  size_t total_size = 0;

  // repeated .qiuwanli.Logs log = 2;
  {
    unsigned int count = this->log_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->log(i));
    }
  }

  // string logdate = 1;
  if (this->logdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logdate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.AllLog)
  GOOGLE_DCHECK_NE(&from, this);
  const AllLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.AllLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.AllLog)
    MergeFrom(*source);
  }
}

void AllLog::MergeFrom(const AllLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.AllLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_.MergeFrom(from.log_);
  if (from.logdate().size() > 0) {

    logdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logdate_);
  }
}

void AllLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.AllLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllLog::CopyFrom(const AllLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.AllLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllLog::IsInitialized() const {
  return true;
}

void AllLog::Swap(AllLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllLog::InternalSwap(AllLog* other) {
  log_.UnsafeArenaSwap(&other->log_);
  logdate_.Swap(&other->logdate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllLog::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllLog

// string logdate = 1;
void AllLog::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllLog::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.logdate)
  return logdate_.GetNoArena();
}
void AllLog::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.AllLog.logdate)
}
#if LANG_CXX11
void AllLog::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.AllLog.logdate)
}
#endif
void AllLog::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.AllLog.logdate)
}
void AllLog::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.AllLog.logdate)
}
::std::string* AllLog::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllLog::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.AllLog.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllLog::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.AllLog.logdate)
}

// repeated .qiuwanli.Logs log = 2;
int AllLog::log_size() const {
  return log_.size();
}
void AllLog::clear_log() {
  log_.Clear();
}
const ::qiuwanli::Logs& AllLog::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.log)
  return log_.Get(index);
}
::qiuwanli::Logs* AllLog::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.log)
  return log_.Mutable(index);
}
::qiuwanli::Logs* AllLog::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.AllLog.log)
  return log_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
AllLog::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.AllLog.log)
  return &log_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
AllLog::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.AllLog.log)
  return log_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilesSharedLog::kSharedUrlFieldNumber;
const int FilesSharedLog::kSharedPsFieldNumber;
const int FilesSharedLog::kSharedTimeFieldNumber;
const int FilesSharedLog::kSharedTimelenthFieldNumber;
const int FilesSharedLog::kSharedTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilesSharedLog::FilesSharedLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FilesSharedLog)
}
FilesSharedLog::FilesSharedLog(const FilesSharedLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shared_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_url().size() > 0) {
    shared_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_url_);
  }
  shared_ps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_ps().size() > 0) {
    shared_ps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_ps_);
  }
  shared_types_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_types().size() > 0) {
    shared_types_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_types_);
  }
  ::memcpy(&shared_time_, &from.shared_time_,
    reinterpret_cast<char*>(&shared_timelenth_) -
    reinterpret_cast<char*>(&shared_time_) + sizeof(shared_timelenth_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FilesSharedLog)
}

void FilesSharedLog::SharedCtor() {
  shared_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_ps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_types_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shared_time_, 0, reinterpret_cast<char*>(&shared_timelenth_) -
    reinterpret_cast<char*>(&shared_time_) + sizeof(shared_timelenth_));
  _cached_size_ = 0;
}

FilesSharedLog::~FilesSharedLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.FilesSharedLog)
  SharedDtor();
}

void FilesSharedLog::SharedDtor() {
  shared_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_ps_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_types_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FilesSharedLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilesSharedLog::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[9].descriptor;
}

const FilesSharedLog& FilesSharedLog::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FilesSharedLog* FilesSharedLog::New(::google::protobuf::Arena* arena) const {
  FilesSharedLog* n = new FilesSharedLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilesSharedLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FilesSharedLog)
  shared_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_ps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_types_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shared_time_, 0, reinterpret_cast<char*>(&shared_timelenth_) -
    reinterpret_cast<char*>(&shared_time_) + sizeof(shared_timelenth_));
}

bool FilesSharedLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FilesSharedLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string shared_url = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shared_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shared_url().data(), this->shared_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FilesSharedLog.shared_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shared_ps = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shared_ps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shared_ps().data(), this->shared_ps().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FilesSharedLog.shared_ps"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 shared_time = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shared_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 shared_timelenth = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shared_timelenth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes shared_types = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_shared_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FilesSharedLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FilesSharedLog)
  return false;
#undef DO_
}

void FilesSharedLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FilesSharedLog)
  // string shared_url = 1;
  if (this->shared_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_url().data(), this->shared_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.shared_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->shared_url(), output);
  }

  // string shared_ps = 2;
  if (this->shared_ps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_ps().data(), this->shared_ps().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.shared_ps");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shared_ps(), output);
  }

  // uint64 shared_time = 3;
  if (this->shared_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->shared_time(), output);
  }

  // uint32 shared_timelenth = 4;
  if (this->shared_timelenth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->shared_timelenth(), output);
  }

  // bytes shared_types = 5;
  if (this->shared_types().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->shared_types(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FilesSharedLog)
}

::google::protobuf::uint8* FilesSharedLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FilesSharedLog)
  // string shared_url = 1;
  if (this->shared_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_url().data(), this->shared_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.shared_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->shared_url(), target);
  }

  // string shared_ps = 2;
  if (this->shared_ps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_ps().data(), this->shared_ps().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.shared_ps");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shared_ps(), target);
  }

  // uint64 shared_time = 3;
  if (this->shared_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->shared_time(), target);
  }

  // uint32 shared_timelenth = 4;
  if (this->shared_timelenth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->shared_timelenth(), target);
  }

  // bytes shared_types = 5;
  if (this->shared_types().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->shared_types(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FilesSharedLog)
  return target;
}

size_t FilesSharedLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FilesSharedLog)
  size_t total_size = 0;

  // string shared_url = 1;
  if (this->shared_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shared_url());
  }

  // string shared_ps = 2;
  if (this->shared_ps().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shared_ps());
  }

  // bytes shared_types = 5;
  if (this->shared_types().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->shared_types());
  }

  // uint64 shared_time = 3;
  if (this->shared_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->shared_time());
  }

  // uint32 shared_timelenth = 4;
  if (this->shared_timelenth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shared_timelenth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilesSharedLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FilesSharedLog)
  GOOGLE_DCHECK_NE(&from, this);
  const FilesSharedLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilesSharedLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FilesSharedLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FilesSharedLog)
    MergeFrom(*source);
  }
}

void FilesSharedLog::MergeFrom(const FilesSharedLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FilesSharedLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.shared_url().size() > 0) {

    shared_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_url_);
  }
  if (from.shared_ps().size() > 0) {

    shared_ps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_ps_);
  }
  if (from.shared_types().size() > 0) {

    shared_types_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_types_);
  }
  if (from.shared_time() != 0) {
    set_shared_time(from.shared_time());
  }
  if (from.shared_timelenth() != 0) {
    set_shared_timelenth(from.shared_timelenth());
  }
}

void FilesSharedLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FilesSharedLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilesSharedLog::CopyFrom(const FilesSharedLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FilesSharedLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilesSharedLog::IsInitialized() const {
  return true;
}

void FilesSharedLog::Swap(FilesSharedLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilesSharedLog::InternalSwap(FilesSharedLog* other) {
  shared_url_.Swap(&other->shared_url_);
  shared_ps_.Swap(&other->shared_ps_);
  shared_types_.Swap(&other->shared_types_);
  std::swap(shared_time_, other->shared_time_);
  std::swap(shared_timelenth_, other->shared_timelenth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilesSharedLog::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilesSharedLog

// string shared_url = 1;
void FilesSharedLog::clear_shared_url() {
  shared_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilesSharedLog::shared_url() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_url)
  return shared_url_.GetNoArena();
}
void FilesSharedLog::set_shared_url(const ::std::string& value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_url)
}
#if LANG_CXX11
void FilesSharedLog::set_shared_url(::std::string&& value) {
  
  shared_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.shared_url)
}
#endif
void FilesSharedLog::set_shared_url(const char* value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.shared_url)
}
void FilesSharedLog::set_shared_url(const char* value, size_t size) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.shared_url)
}
::std::string* FilesSharedLog::mutable_shared_url() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.shared_url)
  return shared_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilesSharedLog::release_shared_url() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.shared_url)
  
  return shared_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilesSharedLog::set_allocated_shared_url(::std::string* shared_url) {
  if (shared_url != NULL) {
    
  } else {
    
  }
  shared_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_url);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.shared_url)
}

// string shared_ps = 2;
void FilesSharedLog::clear_shared_ps() {
  shared_ps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilesSharedLog::shared_ps() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_ps)
  return shared_ps_.GetNoArena();
}
void FilesSharedLog::set_shared_ps(const ::std::string& value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_ps)
}
#if LANG_CXX11
void FilesSharedLog::set_shared_ps(::std::string&& value) {
  
  shared_ps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.shared_ps)
}
#endif
void FilesSharedLog::set_shared_ps(const char* value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.shared_ps)
}
void FilesSharedLog::set_shared_ps(const char* value, size_t size) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.shared_ps)
}
::std::string* FilesSharedLog::mutable_shared_ps() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.shared_ps)
  return shared_ps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilesSharedLog::release_shared_ps() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.shared_ps)
  
  return shared_ps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilesSharedLog::set_allocated_shared_ps(::std::string* shared_ps) {
  if (shared_ps != NULL) {
    
  } else {
    
  }
  shared_ps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_ps);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.shared_ps)
}

// uint64 shared_time = 3;
void FilesSharedLog::clear_shared_time() {
  shared_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 FilesSharedLog::shared_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_time)
  return shared_time_;
}
void FilesSharedLog::set_shared_time(::google::protobuf::uint64 value) {
  
  shared_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_time)
}

// uint32 shared_timelenth = 4;
void FilesSharedLog::clear_shared_timelenth() {
  shared_timelenth_ = 0u;
}
::google::protobuf::uint32 FilesSharedLog::shared_timelenth() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_timelenth)
  return shared_timelenth_;
}
void FilesSharedLog::set_shared_timelenth(::google::protobuf::uint32 value) {
  
  shared_timelenth_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_timelenth)
}

// bytes shared_types = 5;
void FilesSharedLog::clear_shared_types() {
  shared_types_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilesSharedLog::shared_types() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.shared_types)
  return shared_types_.GetNoArena();
}
void FilesSharedLog::set_shared_types(const ::std::string& value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.shared_types)
}
#if LANG_CXX11
void FilesSharedLog::set_shared_types(::std::string&& value) {
  
  shared_types_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.shared_types)
}
#endif
void FilesSharedLog::set_shared_types(const char* value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.shared_types)
}
void FilesSharedLog::set_shared_types(const void* value, size_t size) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.shared_types)
}
::std::string* FilesSharedLog::mutable_shared_types() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.shared_types)
  return shared_types_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilesSharedLog::release_shared_types() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.shared_types)
  
  return shared_types_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilesSharedLog::set_allocated_shared_types(::std::string* shared_types) {
  if (shared_types != NULL) {
    
  } else {
    
  }
  shared_types_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_types);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.shared_types)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyFriend::kFriendIDFieldNumber;
const int MyFriend::kNameFieldNumber;
const int MyFriend::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyFriend::MyFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.MyFriend)
}
MyFriend::MyFriend(const MyFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friendid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friendid().size() > 0) {
    friendid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.MyFriend)
}

void MyFriend::SharedCtor() {
  friendid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyFriend::~MyFriend() {
  // @@protoc_insertion_point(destructor:qiuwanli.MyFriend)
  SharedDtor();
}

void MyFriend::SharedDtor() {
  friendid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyFriend::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[10].descriptor;
}

const MyFriend& MyFriend::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

MyFriend* MyFriend::New(::google::protobuf::Arena* arena) const {
  MyFriend* n = new MyFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.MyFriend)
  friendid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.MyFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string friendID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friendid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friendid().data(), this->friendid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.MyFriend.friendID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.MyFriend.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.MyFriend.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.MyFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.MyFriend)
  return false;
#undef DO_
}

void MyFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.MyFriend)
  // string friendID = 1;
  if (this->friendid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendid().data(), this->friendid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.MyFriend.friendID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->friendid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.MyFriend.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.MyFriend.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.MyFriend)
}

::google::protobuf::uint8* MyFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.MyFriend)
  // string friendID = 1;
  if (this->friendid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendid().data(), this->friendid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.MyFriend.friendID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->friendid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.MyFriend.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string status = 3;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.MyFriend.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.MyFriend)
  return target;
}

size_t MyFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.MyFriend)
  size_t total_size = 0;

  // string friendID = 1;
  if (this->friendid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friendid());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string status = 3;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.MyFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const MyFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.MyFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.MyFriend)
    MergeFrom(*source);
  }
}

void MyFriend::MergeFrom(const MyFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.MyFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.friendid().size() > 0) {

    friendid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void MyFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.MyFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyFriend::CopyFrom(const MyFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.MyFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyFriend::IsInitialized() const {
  return true;
}

void MyFriend::Swap(MyFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyFriend::InternalSwap(MyFriend* other) {
  friendid_.Swap(&other->friendid_);
  name_.Swap(&other->name_);
  status_.Swap(&other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyFriend::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyFriend

// string friendID = 1;
void MyFriend::clear_friendid() {
  friendid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyFriend::friendid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.MyFriend.friendID)
  return friendid_.GetNoArena();
}
void MyFriend::set_friendid(const ::std::string& value) {
  
  friendid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.MyFriend.friendID)
}
#if LANG_CXX11
void MyFriend::set_friendid(::std::string&& value) {
  
  friendid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.MyFriend.friendID)
}
#endif
void MyFriend::set_friendid(const char* value) {
  
  friendid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.MyFriend.friendID)
}
void MyFriend::set_friendid(const char* value, size_t size) {
  
  friendid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.MyFriend.friendID)
}
::std::string* MyFriend::mutable_friendid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.MyFriend.friendID)
  return friendid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyFriend::release_friendid() {
  // @@protoc_insertion_point(field_release:qiuwanli.MyFriend.friendID)
  
  return friendid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyFriend::set_allocated_friendid(::std::string* friendid) {
  if (friendid != NULL) {
    
  } else {
    
  }
  friendid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friendid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.MyFriend.friendID)
}

// string name = 2;
void MyFriend::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyFriend::name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.MyFriend.name)
  return name_.GetNoArena();
}
void MyFriend::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.MyFriend.name)
}
#if LANG_CXX11
void MyFriend::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.MyFriend.name)
}
#endif
void MyFriend::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.MyFriend.name)
}
void MyFriend::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.MyFriend.name)
}
::std::string* MyFriend::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.MyFriend.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyFriend::release_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.MyFriend.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyFriend::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.MyFriend.name)
}

// string status = 3;
void MyFriend::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyFriend::status() const {
  // @@protoc_insertion_point(field_get:qiuwanli.MyFriend.status)
  return status_.GetNoArena();
}
void MyFriend::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.MyFriend.status)
}
#if LANG_CXX11
void MyFriend::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.MyFriend.status)
}
#endif
void MyFriend::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.MyFriend.status)
}
void MyFriend::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.MyFriend.status)
}
::std::string* MyFriend::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.MyFriend.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyFriend::release_status() {
  // @@protoc_insertion_point(field_release:qiuwanli.MyFriend.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyFriend::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.MyFriend.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileShared::kSharedlogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileShared::FileShared()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileShared)
}
FileShared::FileShared(const FileShared& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sharedlog_(from.sharedlog_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileShared)
}

void FileShared::SharedCtor() {
  _cached_size_ = 0;
}

FileShared::~FileShared() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileShared)
  SharedDtor();
}

void FileShared::SharedDtor() {
}

void FileShared::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileShared::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[11].descriptor;
}

const FileShared& FileShared::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileShared* FileShared::New(::google::protobuf::Arena* arena) const {
  FileShared* n = new FileShared;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileShared::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileShared)
  sharedlog_.Clear();
}

bool FileShared::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileShared)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sharedlog()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileShared)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileShared)
  return false;
#undef DO_
}

void FileShared::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileShared)
  // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
  for (unsigned int i = 0, n = this->sharedlog_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sharedlog(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileShared)
}

::google::protobuf::uint8* FileShared::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileShared)
  // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
  for (unsigned int i = 0, n = this->sharedlog_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sharedlog(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileShared)
  return target;
}

size_t FileShared::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileShared)
  size_t total_size = 0;

  // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
  {
    unsigned int count = this->sharedlog_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sharedlog(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileShared::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileShared)
  GOOGLE_DCHECK_NE(&from, this);
  const FileShared* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileShared>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileShared)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileShared)
    MergeFrom(*source);
  }
}

void FileShared::MergeFrom(const FileShared& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileShared)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sharedlog_.MergeFrom(from.sharedlog_);
}

void FileShared::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileShared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileShared::CopyFrom(const FileShared& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileShared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileShared::IsInitialized() const {
  return true;
}

void FileShared::Swap(FileShared* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileShared::InternalSwap(FileShared* other) {
  sharedlog_.UnsafeArenaSwap(&other->sharedlog_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileShared::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileShared

// repeated .qiuwanli.FilesSharedLog sharedlog = 1;
int FileShared::sharedlog_size() const {
  return sharedlog_.size();
}
void FileShared::clear_sharedlog() {
  sharedlog_.Clear();
}
const ::qiuwanli::FilesSharedLog& FileShared::sharedlog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Get(index);
}
::qiuwanli::FilesSharedLog* FileShared::mutable_sharedlog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Mutable(index);
}
::qiuwanli::FilesSharedLog* FileShared::add_sharedlog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >*
FileShared::mutable_sharedlog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileShared.sharedlog)
  return &sharedlog_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >&
FileShared::sharedlog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileShared.sharedlog)
  return sharedlog_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriednList::kFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriednList::FriednList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FriednList)
}
FriednList::FriednList(const FriednList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend__(from.friend__),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FriednList)
}

void FriednList::SharedCtor() {
  _cached_size_ = 0;
}

FriednList::~FriednList() {
  // @@protoc_insertion_point(destructor:qiuwanli.FriednList)
  SharedDtor();
}

void FriednList::SharedDtor() {
}

void FriednList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriednList::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[12].descriptor;
}

const FriednList& FriednList::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FriednList* FriednList::New(::google::protobuf::Arena* arena) const {
  FriednList* n = new FriednList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriednList::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FriednList)
  friend__.Clear();
}

bool FriednList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FriednList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.MyFriend friend = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friend_()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FriednList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FriednList)
  return false;
#undef DO_
}

void FriednList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FriednList)
  // repeated .qiuwanli.MyFriend friend = 1;
  for (unsigned int i = 0, n = this->friend__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friend_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FriednList)
}

::google::protobuf::uint8* FriednList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FriednList)
  // repeated .qiuwanli.MyFriend friend = 1;
  for (unsigned int i = 0, n = this->friend__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friend_(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FriednList)
  return target;
}

size_t FriednList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FriednList)
  size_t total_size = 0;

  // repeated .qiuwanli.MyFriend friend = 1;
  {
    unsigned int count = this->friend__size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriednList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FriednList)
  GOOGLE_DCHECK_NE(&from, this);
  const FriednList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriednList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FriednList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FriednList)
    MergeFrom(*source);
  }
}

void FriednList::MergeFrom(const FriednList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FriednList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend__.MergeFrom(from.friend__);
}

void FriednList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FriednList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriednList::CopyFrom(const FriednList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FriednList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriednList::IsInitialized() const {
  return true;
}

void FriednList::Swap(FriednList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriednList::InternalSwap(FriednList* other) {
  friend__.UnsafeArenaSwap(&other->friend__);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriednList::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriednList

// repeated .qiuwanli.MyFriend friend = 1;
int FriednList::friend__size() const {
  return friend__.size();
}
void FriednList::clear_friend_() {
  friend__.Clear();
}
const ::qiuwanli::MyFriend& FriednList::friend_(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FriednList.friend)
  return friend__.Get(index);
}
::qiuwanli::MyFriend* FriednList::mutable_friend_(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FriednList.friend)
  return friend__.Mutable(index);
}
::qiuwanli::MyFriend* FriednList::add_friend_() {
  // @@protoc_insertion_point(field_add:qiuwanli.FriednList.friend)
  return friend__.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::MyFriend >*
FriednList::mutable_friend_() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FriednList.friend)
  return &friend__;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::MyFriend >&
FriednList::friend_() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FriednList.friend)
  return friend__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileDownLog::kFilenameFieldNumber;
const int FileDownLog::kFilepathFieldNumber;
const int FileDownLog::kDowntimeFieldNumber;
const int FileDownLog::kFilesizeFieldNumber;
const int FileDownLog::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileDownLog::FileDownLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileDownLog)
}
FileDownLog::FileDownLog(const FileDownLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filepath().size() > 0) {
    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  downtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.downtime().size() > 0) {
    downtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downtime_);
  }
  filesize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesize().size() > 0) {
    filesize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesize_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileDownLog)
}

void FileDownLog::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FileDownLog::~FileDownLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileDownLog)
  SharedDtor();
}

void FileDownLog::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileDownLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileDownLog::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[13].descriptor;
}

const FileDownLog& FileDownLog::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileDownLog* FileDownLog::New(::google::protobuf::Arena* arena) const {
  FileDownLog* n = new FileDownLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileDownLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileDownLog)
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileDownLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileDownLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDownLog.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filepath = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filepath().data(), this->filepath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDownLog.filepath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string downtime = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->downtime().data(), this->downtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDownLog.downtime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filesize = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesize()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesize().data(), this->filesize().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDownLog.filesize"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDownLog.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileDownLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileDownLog)
  return false;
#undef DO_
}

void FileDownLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileDownLog)
  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // string filepath = 2;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filepath(), output);
  }

  // string downtime = 3;
  if (this->downtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downtime().data(), this->downtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.downtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->downtime(), output);
  }

  // string filesize = 4;
  if (this->filesize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesize().data(), this->filesize().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.filesize");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filesize(), output);
  }

  // string status = 5;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileDownLog)
}

::google::protobuf::uint8* FileDownLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileDownLog)
  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // string filepath = 2;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filepath(), target);
  }

  // string downtime = 3;
  if (this->downtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downtime().data(), this->downtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.downtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->downtime(), target);
  }

  // string filesize = 4;
  if (this->filesize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesize().data(), this->filesize().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.filesize");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filesize(), target);
  }

  // string status = 5;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDownLog.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileDownLog)
  return target;
}

size_t FileDownLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileDownLog)
  size_t total_size = 0;

  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string filepath = 2;
  if (this->filepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filepath());
  }

  // string downtime = 3;
  if (this->downtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->downtime());
  }

  // string filesize = 4;
  if (this->filesize().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesize());
  }

  // string status = 5;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileDownLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileDownLog)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDownLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileDownLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileDownLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileDownLog)
    MergeFrom(*source);
  }
}

void FileDownLog::MergeFrom(const FileDownLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileDownLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.filepath().size() > 0) {

    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  if (from.downtime().size() > 0) {

    downtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downtime_);
  }
  if (from.filesize().size() > 0) {

    filesize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesize_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void FileDownLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileDownLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDownLog::CopyFrom(const FileDownLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileDownLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownLog::IsInitialized() const {
  return true;
}

void FileDownLog::Swap(FileDownLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileDownLog::InternalSwap(FileDownLog* other) {
  filename_.Swap(&other->filename_);
  filepath_.Swap(&other->filepath_);
  downtime_.Swap(&other->downtime_);
  filesize_.Swap(&other->filesize_);
  status_.Swap(&other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileDownLog::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileDownLog

// string filename = 1;
void FileDownLog::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDownLog::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.filename)
  return filename_.GetNoArena();
}
void FileDownLog::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.filename)
}
#if LANG_CXX11
void FileDownLog::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.filename)
}
#endif
void FileDownLog::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.filename)
}
void FileDownLog::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.filename)
}
::std::string* FileDownLog::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDownLog::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDownLog::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.filename)
}

// string filepath = 2;
void FileDownLog::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDownLog::filepath() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.filepath)
  return filepath_.GetNoArena();
}
void FileDownLog::set_filepath(const ::std::string& value) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.filepath)
}
#if LANG_CXX11
void FileDownLog::set_filepath(::std::string&& value) {
  
  filepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.filepath)
}
#endif
void FileDownLog::set_filepath(const char* value) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.filepath)
}
void FileDownLog::set_filepath(const char* value, size_t size) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.filepath)
}
::std::string* FileDownLog::mutable_filepath() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.filepath)
  return filepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDownLog::release_filepath() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.filepath)
  
  return filepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDownLog::set_allocated_filepath(::std::string* filepath) {
  if (filepath != NULL) {
    
  } else {
    
  }
  filepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.filepath)
}

// string downtime = 3;
void FileDownLog::clear_downtime() {
  downtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDownLog::downtime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.downtime)
  return downtime_.GetNoArena();
}
void FileDownLog::set_downtime(const ::std::string& value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.downtime)
}
#if LANG_CXX11
void FileDownLog::set_downtime(::std::string&& value) {
  
  downtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.downtime)
}
#endif
void FileDownLog::set_downtime(const char* value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.downtime)
}
void FileDownLog::set_downtime(const char* value, size_t size) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.downtime)
}
::std::string* FileDownLog::mutable_downtime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.downtime)
  return downtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDownLog::release_downtime() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.downtime)
  
  return downtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDownLog::set_allocated_downtime(::std::string* downtime) {
  if (downtime != NULL) {
    
  } else {
    
  }
  downtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downtime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.downtime)
}

// string filesize = 4;
void FileDownLog::clear_filesize() {
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDownLog::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.filesize)
  return filesize_.GetNoArena();
}
void FileDownLog::set_filesize(const ::std::string& value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.filesize)
}
#if LANG_CXX11
void FileDownLog::set_filesize(::std::string&& value) {
  
  filesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.filesize)
}
#endif
void FileDownLog::set_filesize(const char* value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.filesize)
}
void FileDownLog::set_filesize(const char* value, size_t size) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.filesize)
}
::std::string* FileDownLog::mutable_filesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.filesize)
  return filesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDownLog::release_filesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.filesize)
  
  return filesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDownLog::set_allocated_filesize(::std::string* filesize) {
  if (filesize != NULL) {
    
  } else {
    
  }
  filesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.filesize)
}

// string status = 5;
void FileDownLog::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDownLog::status() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLog.status)
  return status_.GetNoArena();
}
void FileDownLog::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDownLog.status)
}
#if LANG_CXX11
void FileDownLog::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDownLog.status)
}
#endif
void FileDownLog::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDownLog.status)
}
void FileDownLog::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDownLog.status)
}
::std::string* FileDownLog::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLog.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDownLog::release_status() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDownLog.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDownLog::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDownLog.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileDownLogFile::kFilelogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileDownLogFile::FileDownLogFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileDownLogFile)
}
FileDownLogFile::FileDownLogFile(const FileDownLogFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filelog_(from.filelog_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileDownLogFile)
}

void FileDownLogFile::SharedCtor() {
  _cached_size_ = 0;
}

FileDownLogFile::~FileDownLogFile() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileDownLogFile)
  SharedDtor();
}

void FileDownLogFile::SharedDtor() {
}

void FileDownLogFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileDownLogFile::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[14].descriptor;
}

const FileDownLogFile& FileDownLogFile::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileDownLogFile* FileDownLogFile::New(::google::protobuf::Arena* arena) const {
  FileDownLogFile* n = new FileDownLogFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileDownLogFile::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileDownLogFile)
  filelog_.Clear();
}

bool FileDownLogFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileDownLogFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.FileDownLog filelog = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_filelog()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileDownLogFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileDownLogFile)
  return false;
#undef DO_
}

void FileDownLogFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileDownLogFile)
  // repeated .qiuwanli.FileDownLog filelog = 1;
  for (unsigned int i = 0, n = this->filelog_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->filelog(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileDownLogFile)
}

::google::protobuf::uint8* FileDownLogFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileDownLogFile)
  // repeated .qiuwanli.FileDownLog filelog = 1;
  for (unsigned int i = 0, n = this->filelog_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->filelog(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileDownLogFile)
  return target;
}

size_t FileDownLogFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileDownLogFile)
  size_t total_size = 0;

  // repeated .qiuwanli.FileDownLog filelog = 1;
  {
    unsigned int count = this->filelog_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filelog(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileDownLogFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileDownLogFile)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDownLogFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileDownLogFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileDownLogFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileDownLogFile)
    MergeFrom(*source);
  }
}

void FileDownLogFile::MergeFrom(const FileDownLogFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileDownLogFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filelog_.MergeFrom(from.filelog_);
}

void FileDownLogFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileDownLogFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDownLogFile::CopyFrom(const FileDownLogFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileDownLogFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownLogFile::IsInitialized() const {
  return true;
}

void FileDownLogFile::Swap(FileDownLogFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileDownLogFile::InternalSwap(FileDownLogFile* other) {
  filelog_.UnsafeArenaSwap(&other->filelog_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileDownLogFile::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileDownLogFile

// repeated .qiuwanli.FileDownLog filelog = 1;
int FileDownLogFile::filelog_size() const {
  return filelog_.size();
}
void FileDownLogFile::clear_filelog() {
  filelog_.Clear();
}
const ::qiuwanli::FileDownLog& FileDownLogFile::filelog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLogFile.filelog)
  return filelog_.Get(index);
}
::qiuwanli::FileDownLog* FileDownLogFile::mutable_filelog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLogFile.filelog)
  return filelog_.Mutable(index);
}
::qiuwanli::FileDownLog* FileDownLogFile::add_filelog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileDownLogFile.filelog)
  return filelog_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDownLog >*
FileDownLogFile::mutable_filelog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileDownLogFile.filelog)
  return &filelog_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDownLog >&
FileDownLogFile::filelog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileDownLogFile.filelog)
  return filelog_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileDowningLog::kFilenameFieldNumber;
const int FileDowningLog::kFilesizeFieldNumber;
const int FileDowningLog::kDowntimeFieldNumber;
const int FileDowningLog::kDowningstatusFieldNumber;
const int FileDowningLog::kFilesha512FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileDowningLog::FileDowningLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileDowningLog)
}
FileDowningLog::FileDowningLog(const FileDowningLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  filesize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesize().size() > 0) {
    filesize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesize_);
  }
  downtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.downtime().size() > 0) {
    downtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downtime_);
  }
  downingstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.downingstatus().size() > 0) {
    downingstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downingstatus_);
  }
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesha512().size() > 0) {
    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileDowningLog)
}

void FileDowningLog::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downingstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FileDowningLog::~FileDowningLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileDowningLog)
  SharedDtor();
}

void FileDowningLog::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downingstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileDowningLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileDowningLog::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[15].descriptor;
}

const FileDowningLog& FileDowningLog::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileDowningLog* FileDowningLog::New(::google::protobuf::Arena* arena) const {
  FileDowningLog* n = new FileDowningLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileDowningLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileDowningLog)
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downingstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FileDowningLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileDowningLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDowningLog.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filesize = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesize()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesize().data(), this->filesize().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDowningLog.filesize"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string downtime = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->downtime().data(), this->downtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDowningLog.downtime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Downingstatus = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downingstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->downingstatus().data(), this->downingstatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDowningLog.Downingstatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filesha512 = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512().data(), this->filesha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileDowningLog.filesha512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileDowningLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileDowningLog)
  return false;
#undef DO_
}

void FileDowningLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileDowningLog)
  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // string filesize = 2;
  if (this->filesize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesize().data(), this->filesize().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.filesize");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filesize(), output);
  }

  // string downtime = 3;
  if (this->downtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downtime().data(), this->downtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.downtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->downtime(), output);
  }

  // string Downingstatus = 4;
  if (this->downingstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downingstatus().data(), this->downingstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.Downingstatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->downingstatus(), output);
  }

  // string filesha512 = 5;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.filesha512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filesha512(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileDowningLog)
}

::google::protobuf::uint8* FileDowningLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileDowningLog)
  // string filename = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // string filesize = 2;
  if (this->filesize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesize().data(), this->filesize().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.filesize");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filesize(), target);
  }

  // string downtime = 3;
  if (this->downtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downtime().data(), this->downtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.downtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->downtime(), target);
  }

  // string Downingstatus = 4;
  if (this->downingstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downingstatus().data(), this->downingstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.Downingstatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->downingstatus(), target);
  }

  // string filesha512 = 5;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileDowningLog.filesha512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filesha512(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileDowningLog)
  return target;
}

size_t FileDowningLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileDowningLog)
  size_t total_size = 0;

  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string filesize = 2;
  if (this->filesize().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesize());
  }

  // string downtime = 3;
  if (this->downtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->downtime());
  }

  // string Downingstatus = 4;
  if (this->downingstatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->downingstatus());
  }

  // string filesha512 = 5;
  if (this->filesha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesha512());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileDowningLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileDowningLog)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDowningLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileDowningLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileDowningLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileDowningLog)
    MergeFrom(*source);
  }
}

void FileDowningLog::MergeFrom(const FileDowningLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileDowningLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.filesize().size() > 0) {

    filesize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesize_);
  }
  if (from.downtime().size() > 0) {

    downtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downtime_);
  }
  if (from.downingstatus().size() > 0) {

    downingstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downingstatus_);
  }
  if (from.filesha512().size() > 0) {

    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
}

void FileDowningLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileDowningLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDowningLog::CopyFrom(const FileDowningLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileDowningLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDowningLog::IsInitialized() const {
  return true;
}

void FileDowningLog::Swap(FileDowningLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileDowningLog::InternalSwap(FileDowningLog* other) {
  filename_.Swap(&other->filename_);
  filesize_.Swap(&other->filesize_);
  downtime_.Swap(&other->downtime_);
  downingstatus_.Swap(&other->downingstatus_);
  filesha512_.Swap(&other->filesha512_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileDowningLog::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileDowningLog

// string filename = 1;
void FileDowningLog::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDowningLog::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filename)
  return filename_.GetNoArena();
}
void FileDowningLog::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filename)
}
#if LANG_CXX11
void FileDowningLog::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filename)
}
#endif
void FileDowningLog::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filename)
}
void FileDowningLog::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filename)
}
::std::string* FileDowningLog::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDowningLog::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDowningLog::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filename)
}

// string filesize = 2;
void FileDowningLog::clear_filesize() {
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDowningLog::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filesize)
  return filesize_.GetNoArena();
}
void FileDowningLog::set_filesize(const ::std::string& value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filesize)
}
#if LANG_CXX11
void FileDowningLog::set_filesize(::std::string&& value) {
  
  filesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filesize)
}
#endif
void FileDowningLog::set_filesize(const char* value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filesize)
}
void FileDowningLog::set_filesize(const char* value, size_t size) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filesize)
}
::std::string* FileDowningLog::mutable_filesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filesize)
  return filesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDowningLog::release_filesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filesize)
  
  return filesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDowningLog::set_allocated_filesize(::std::string* filesize) {
  if (filesize != NULL) {
    
  } else {
    
  }
  filesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filesize)
}

// string downtime = 3;
void FileDowningLog::clear_downtime() {
  downtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDowningLog::downtime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.downtime)
  return downtime_.GetNoArena();
}
void FileDowningLog::set_downtime(const ::std::string& value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.downtime)
}
#if LANG_CXX11
void FileDowningLog::set_downtime(::std::string&& value) {
  
  downtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.downtime)
}
#endif
void FileDowningLog::set_downtime(const char* value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.downtime)
}
void FileDowningLog::set_downtime(const char* value, size_t size) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.downtime)
}
::std::string* FileDowningLog::mutable_downtime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.downtime)
  return downtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDowningLog::release_downtime() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.downtime)
  
  return downtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDowningLog::set_allocated_downtime(::std::string* downtime) {
  if (downtime != NULL) {
    
  } else {
    
  }
  downtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downtime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.downtime)
}

// string Downingstatus = 4;
void FileDowningLog::clear_downingstatus() {
  downingstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDowningLog::downingstatus() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.Downingstatus)
  return downingstatus_.GetNoArena();
}
void FileDowningLog::set_downingstatus(const ::std::string& value) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.Downingstatus)
}
#if LANG_CXX11
void FileDowningLog::set_downingstatus(::std::string&& value) {
  
  downingstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.Downingstatus)
}
#endif
void FileDowningLog::set_downingstatus(const char* value) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.Downingstatus)
}
void FileDowningLog::set_downingstatus(const char* value, size_t size) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.Downingstatus)
}
::std::string* FileDowningLog::mutable_downingstatus() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.Downingstatus)
  return downingstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDowningLog::release_downingstatus() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.Downingstatus)
  
  return downingstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDowningLog::set_allocated_downingstatus(::std::string* downingstatus) {
  if (downingstatus != NULL) {
    
  } else {
    
  }
  downingstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downingstatus);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.Downingstatus)
}

// string filesha512 = 5;
void FileDowningLog::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileDowningLog::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filesha512)
  return filesha512_.GetNoArena();
}
void FileDowningLog::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filesha512)
}
#if LANG_CXX11
void FileDowningLog::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filesha512)
}
#endif
void FileDowningLog::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filesha512)
}
void FileDowningLog::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filesha512)
}
::std::string* FileDowningLog::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filesha512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileDowningLog::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filesha512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileDowningLog::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filesha512)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileDownLogFiles::kFileDownLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileDownLogFiles::FileDownLogFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileDownLogFiles)
}
FileDownLogFiles::FileDownLogFiles(const FileDownLogFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filedownlog_(from.filedownlog_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileDownLogFiles)
}

void FileDownLogFiles::SharedCtor() {
  _cached_size_ = 0;
}

FileDownLogFiles::~FileDownLogFiles() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileDownLogFiles)
  SharedDtor();
}

void FileDownLogFiles::SharedDtor() {
}

void FileDownLogFiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileDownLogFiles::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[16].descriptor;
}

const FileDownLogFiles& FileDownLogFiles::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileDownLogFiles* FileDownLogFiles::New(::google::protobuf::Arena* arena) const {
  FileDownLogFiles* n = new FileDownLogFiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileDownLogFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileDownLogFiles)
  filedownlog_.Clear();
}

bool FileDownLogFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileDownLogFiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.FileDowningLog FileDownLog = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_filedownlog()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileDownLogFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileDownLogFiles)
  return false;
#undef DO_
}

void FileDownLogFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileDownLogFiles)
  // repeated .qiuwanli.FileDowningLog FileDownLog = 1;
  for (unsigned int i = 0, n = this->filedownlog_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->filedownlog(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileDownLogFiles)
}

::google::protobuf::uint8* FileDownLogFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileDownLogFiles)
  // repeated .qiuwanli.FileDowningLog FileDownLog = 1;
  for (unsigned int i = 0, n = this->filedownlog_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->filedownlog(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileDownLogFiles)
  return target;
}

size_t FileDownLogFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileDownLogFiles)
  size_t total_size = 0;

  // repeated .qiuwanli.FileDowningLog FileDownLog = 1;
  {
    unsigned int count = this->filedownlog_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filedownlog(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileDownLogFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileDownLogFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDownLogFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileDownLogFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileDownLogFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileDownLogFiles)
    MergeFrom(*source);
  }
}

void FileDownLogFiles::MergeFrom(const FileDownLogFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileDownLogFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filedownlog_.MergeFrom(from.filedownlog_);
}

void FileDownLogFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileDownLogFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDownLogFiles::CopyFrom(const FileDownLogFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileDownLogFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDownLogFiles::IsInitialized() const {
  return true;
}

void FileDownLogFiles::Swap(FileDownLogFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileDownLogFiles::InternalSwap(FileDownLogFiles* other) {
  filedownlog_.UnsafeArenaSwap(&other->filedownlog_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileDownLogFiles::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileDownLogFiles

// repeated .qiuwanli.FileDowningLog FileDownLog = 1;
int FileDownLogFiles::filedownlog_size() const {
  return filedownlog_.size();
}
void FileDownLogFiles::clear_filedownlog() {
  filedownlog_.Clear();
}
const ::qiuwanli::FileDowningLog& FileDownLogFiles::filedownlog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_.Get(index);
}
::qiuwanli::FileDowningLog* FileDownLogFiles::mutable_filedownlog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_.Mutable(index);
}
::qiuwanli::FileDowningLog* FileDownLogFiles::add_filedownlog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >*
FileDownLogFiles::mutable_filedownlog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileDownLogFiles.FileDownLog)
  return &filedownlog_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >&
FileDownLogFiles::filedownlog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileDownLogFiles.FileDownLog)
  return filedownlog_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path4FilesOrDir::kPathtypesFieldNumber;
const int Path4FilesOrDir::kPathOrNameFieldNumber;
const int Path4FilesOrDir::kFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path4FilesOrDir::Path4FilesOrDir()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.Path4FilesOrDir)
}
Path4FilesOrDir::Path4FilesOrDir(const Path4FilesOrDir& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pathtypes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pathtypes().size() > 0) {
    pathtypes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathtypes_);
  }
  pathorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pathorname().size() > 0) {
    pathorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathorname_);
  }
  fileid_ = from.fileid_;
  // @@protoc_insertion_point(copy_constructor:qiuwanli.Path4FilesOrDir)
}

void Path4FilesOrDir::SharedCtor() {
  pathtypes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathorname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileid_ = 0u;
  _cached_size_ = 0;
}

Path4FilesOrDir::~Path4FilesOrDir() {
  // @@protoc_insertion_point(destructor:qiuwanli.Path4FilesOrDir)
  SharedDtor();
}

void Path4FilesOrDir::SharedDtor() {
  pathtypes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathorname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Path4FilesOrDir::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path4FilesOrDir::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[17].descriptor;
}

const Path4FilesOrDir& Path4FilesOrDir::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

Path4FilesOrDir* Path4FilesOrDir::New(::google::protobuf::Arena* arena) const {
  Path4FilesOrDir* n = new Path4FilesOrDir;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Path4FilesOrDir::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.Path4FilesOrDir)
  pathtypes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileid_ = 0u;
}

bool Path4FilesOrDir::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.Path4FilesOrDir)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pathOrName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pathorname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathorname().data(), this->pathorname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Path4FilesOrDir.pathOrName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes pathtypes = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pathtypes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fileId = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.Path4FilesOrDir)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.Path4FilesOrDir)
  return false;
#undef DO_
}

void Path4FilesOrDir::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.Path4FilesOrDir)
  // string pathOrName = 1;
  if (this->pathorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathorname().data(), this->pathorname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Path4FilesOrDir.pathOrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pathorname(), output);
  }

  // bytes pathtypes = 2;
  if (this->pathtypes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pathtypes(), output);
  }

  // uint32 fileId = 3;
  if (this->fileid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->fileid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.Path4FilesOrDir)
}

::google::protobuf::uint8* Path4FilesOrDir::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.Path4FilesOrDir)
  // string pathOrName = 1;
  if (this->pathorname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathorname().data(), this->pathorname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Path4FilesOrDir.pathOrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pathorname(), target);
  }

  // bytes pathtypes = 2;
  if (this->pathtypes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pathtypes(), target);
  }

  // uint32 fileId = 3;
  if (this->fileid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->fileid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.Path4FilesOrDir)
  return target;
}

size_t Path4FilesOrDir::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.Path4FilesOrDir)
  size_t total_size = 0;

  // bytes pathtypes = 2;
  if (this->pathtypes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pathtypes());
  }

  // string pathOrName = 1;
  if (this->pathorname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pathorname());
  }

  // uint32 fileId = 3;
  if (this->fileid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fileid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path4FilesOrDir::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.Path4FilesOrDir)
  GOOGLE_DCHECK_NE(&from, this);
  const Path4FilesOrDir* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path4FilesOrDir>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.Path4FilesOrDir)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.Path4FilesOrDir)
    MergeFrom(*source);
  }
}

void Path4FilesOrDir::MergeFrom(const Path4FilesOrDir& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.Path4FilesOrDir)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.pathtypes().size() > 0) {

    pathtypes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathtypes_);
  }
  if (from.pathorname().size() > 0) {

    pathorname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathorname_);
  }
  if (from.fileid() != 0) {
    set_fileid(from.fileid());
  }
}

void Path4FilesOrDir::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.Path4FilesOrDir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path4FilesOrDir::CopyFrom(const Path4FilesOrDir& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.Path4FilesOrDir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path4FilesOrDir::IsInitialized() const {
  return true;
}

void Path4FilesOrDir::Swap(Path4FilesOrDir* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path4FilesOrDir::InternalSwap(Path4FilesOrDir* other) {
  pathtypes_.Swap(&other->pathtypes_);
  pathorname_.Swap(&other->pathorname_);
  std::swap(fileid_, other->fileid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Path4FilesOrDir::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Path4FilesOrDir

// bytes pathtypes = 2;
void Path4FilesOrDir::clear_pathtypes() {
  pathtypes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Path4FilesOrDir::pathtypes() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Path4FilesOrDir.pathtypes)
  return pathtypes_.GetNoArena();
}
void Path4FilesOrDir::set_pathtypes(const ::std::string& value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Path4FilesOrDir.pathtypes)
}
#if LANG_CXX11
void Path4FilesOrDir::set_pathtypes(::std::string&& value) {
  
  pathtypes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Path4FilesOrDir.pathtypes)
}
#endif
void Path4FilesOrDir::set_pathtypes(const char* value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Path4FilesOrDir.pathtypes)
}
void Path4FilesOrDir::set_pathtypes(const void* value, size_t size) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Path4FilesOrDir.pathtypes)
}
::std::string* Path4FilesOrDir::mutable_pathtypes() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Path4FilesOrDir.pathtypes)
  return pathtypes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Path4FilesOrDir::release_pathtypes() {
  // @@protoc_insertion_point(field_release:qiuwanli.Path4FilesOrDir.pathtypes)
  
  return pathtypes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Path4FilesOrDir::set_allocated_pathtypes(::std::string* pathtypes) {
  if (pathtypes != NULL) {
    
  } else {
    
  }
  pathtypes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathtypes);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Path4FilesOrDir.pathtypes)
}

// string pathOrName = 1;
void Path4FilesOrDir::clear_pathorname() {
  pathorname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Path4FilesOrDir::pathorname() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Path4FilesOrDir.pathOrName)
  return pathorname_.GetNoArena();
}
void Path4FilesOrDir::set_pathorname(const ::std::string& value) {
  
  pathorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Path4FilesOrDir.pathOrName)
}
#if LANG_CXX11
void Path4FilesOrDir::set_pathorname(::std::string&& value) {
  
  pathorname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Path4FilesOrDir.pathOrName)
}
#endif
void Path4FilesOrDir::set_pathorname(const char* value) {
  
  pathorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Path4FilesOrDir.pathOrName)
}
void Path4FilesOrDir::set_pathorname(const char* value, size_t size) {
  
  pathorname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Path4FilesOrDir.pathOrName)
}
::std::string* Path4FilesOrDir::mutable_pathorname() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Path4FilesOrDir.pathOrName)
  return pathorname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Path4FilesOrDir::release_pathorname() {
  // @@protoc_insertion_point(field_release:qiuwanli.Path4FilesOrDir.pathOrName)
  
  return pathorname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Path4FilesOrDir::set_allocated_pathorname(::std::string* pathorname) {
  if (pathorname != NULL) {
    
  } else {
    
  }
  pathorname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathorname);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Path4FilesOrDir.pathOrName)
}

// uint32 fileId = 3;
void Path4FilesOrDir::clear_fileid() {
  fileid_ = 0u;
}
::google::protobuf::uint32 Path4FilesOrDir::fileid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Path4FilesOrDir.fileId)
  return fileid_;
}
void Path4FilesOrDir::set_fileid(::google::protobuf::uint32 value) {
  
  fileid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Path4FilesOrDir.fileId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllFiles::kPathListFieldNumber;
const int AllFiles::kFilespathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllFiles::AllFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.AllFiles)
}
AllFiles::AllFiles(const AllFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filespath_(from.filespath_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pathlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pathlist().size() > 0) {
    pathlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathlist_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.AllFiles)
}

void AllFiles::SharedCtor() {
  pathlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AllFiles::~AllFiles() {
  // @@protoc_insertion_point(destructor:qiuwanli.AllFiles)
  SharedDtor();
}

void AllFiles::SharedDtor() {
  pathlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllFiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllFiles::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[18].descriptor;
}

const AllFiles& AllFiles::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllFiles* AllFiles::New(::google::protobuf::Arena* arena) const {
  AllFiles* n = new AllFiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.AllFiles)
  filespath_.Clear();
  pathlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AllFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.AllFiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pathList = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pathlist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathlist().data(), this->pathlist().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.AllFiles.pathList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qiuwanli.Path4FilesOrDir filespath = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_filespath()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.AllFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.AllFiles)
  return false;
#undef DO_
}

void AllFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.AllFiles)
  // string pathList = 1;
  if (this->pathlist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathlist().data(), this->pathlist().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.AllFiles.pathList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pathlist(), output);
  }

  // repeated .qiuwanli.Path4FilesOrDir filespath = 2;
  for (unsigned int i = 0, n = this->filespath_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->filespath(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.AllFiles)
}

::google::protobuf::uint8* AllFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.AllFiles)
  // string pathList = 1;
  if (this->pathlist().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathlist().data(), this->pathlist().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.AllFiles.pathList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pathlist(), target);
  }

  // repeated .qiuwanli.Path4FilesOrDir filespath = 2;
  for (unsigned int i = 0, n = this->filespath_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->filespath(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.AllFiles)
  return target;
}

size_t AllFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.AllFiles)
  size_t total_size = 0;

  // repeated .qiuwanli.Path4FilesOrDir filespath = 2;
  {
    unsigned int count = this->filespath_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filespath(i));
    }
  }

  // string pathList = 1;
  if (this->pathlist().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pathlist());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.AllFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const AllFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.AllFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.AllFiles)
    MergeFrom(*source);
  }
}

void AllFiles::MergeFrom(const AllFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.AllFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filespath_.MergeFrom(from.filespath_);
  if (from.pathlist().size() > 0) {

    pathlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathlist_);
  }
}

void AllFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.AllFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllFiles::CopyFrom(const AllFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.AllFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllFiles::IsInitialized() const {
  return true;
}

void AllFiles::Swap(AllFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllFiles::InternalSwap(AllFiles* other) {
  filespath_.UnsafeArenaSwap(&other->filespath_);
  pathlist_.Swap(&other->pathlist_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllFiles::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllFiles

// string pathList = 1;
void AllFiles::clear_pathlist() {
  pathlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllFiles::pathlist() const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllFiles.pathList)
  return pathlist_.GetNoArena();
}
void AllFiles::set_pathlist(const ::std::string& value) {
  
  pathlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.AllFiles.pathList)
}
#if LANG_CXX11
void AllFiles::set_pathlist(::std::string&& value) {
  
  pathlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.AllFiles.pathList)
}
#endif
void AllFiles::set_pathlist(const char* value) {
  
  pathlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.AllFiles.pathList)
}
void AllFiles::set_pathlist(const char* value, size_t size) {
  
  pathlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.AllFiles.pathList)
}
::std::string* AllFiles::mutable_pathlist() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllFiles.pathList)
  return pathlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllFiles::release_pathlist() {
  // @@protoc_insertion_point(field_release:qiuwanli.AllFiles.pathList)
  
  return pathlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllFiles::set_allocated_pathlist(::std::string* pathlist) {
  if (pathlist != NULL) {
    
  } else {
    
  }
  pathlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathlist);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.AllFiles.pathList)
}

// repeated .qiuwanli.Path4FilesOrDir filespath = 2;
int AllFiles::filespath_size() const {
  return filespath_.size();
}
void AllFiles::clear_filespath() {
  filespath_.Clear();
}
const ::qiuwanli::Path4FilesOrDir& AllFiles::filespath(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllFiles.filespath)
  return filespath_.Get(index);
}
::qiuwanli::Path4FilesOrDir* AllFiles::mutable_filespath(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllFiles.filespath)
  return filespath_.Mutable(index);
}
::qiuwanli::Path4FilesOrDir* AllFiles::add_filespath() {
  // @@protoc_insertion_point(field_add:qiuwanli.AllFiles.filespath)
  return filespath_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::Path4FilesOrDir >*
AllFiles::mutable_filespath() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.AllFiles.filespath)
  return &filespath_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Path4FilesOrDir >&
AllFiles::filespath() const {
  // @@protoc_insertion_point(field_list:qiuwanli.AllFiles.filespath)
  return filespath_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfo::kFileIdFieldNumber;
const int FileInfo::kFilesizeFieldNumber;
const int FileInfo::kFilemd51FieldNumber;
const int FileInfo::kFilemd52FieldNumber;
const int FileInfo::kFilecreatedateFieldNumber;
const int FileInfo::kFilepathidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfo::FileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileInfo)
}
FileInfo::FileInfo(const FileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fileid().size() > 0) {
    fileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileid_);
  }
  filemd5_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filemd5_1().size() > 0) {
    filemd5_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_1_);
  }
  filemd5_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filemd5_2().size() > 0) {
    filemd5_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_2_);
  }
  ::memcpy(&filesize_, &from.filesize_,
    reinterpret_cast<char*>(&filecreatedate_) -
    reinterpret_cast<char*>(&filesize_) + sizeof(filecreatedate_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileInfo)
}

void FileInfo::SharedCtor() {
  fileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, reinterpret_cast<char*>(&filecreatedate_) -
    reinterpret_cast<char*>(&filesize_) + sizeof(filecreatedate_));
  _cached_size_ = 0;
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileInfo)
  SharedDtor();
}

void FileInfo::SharedDtor() {
  fileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileInfo::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[19].descriptor;
}

const FileInfo& FileInfo::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileInfo* FileInfo::New(::google::protobuf::Arena* arena) const {
  FileInfo* n = new FileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileInfo)
  fileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, reinterpret_cast<char*>(&filecreatedate_) -
    reinterpret_cast<char*>(&filesize_) + sizeof(filecreatedate_));
}

bool FileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fileid().data(), this->fileid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfo.fileId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filesize = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filemd5_1 = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filemd5_1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filemd5_1().data(), this->filemd5_1().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfo.filemd5_1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filemd5_2 = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filemd5_2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filemd5_2().data(), this->filemd5_2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfo.filemd5_2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 filecreatedate = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filecreatedate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filepathid = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filepathid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileInfo)
  return false;
#undef DO_
}

void FileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileInfo)
  // string fileId = 1;
  if (this->fileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileid().data(), this->fileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.fileId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fileid(), output);
  }

  // uint32 filesize = 2;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->filesize(), output);
  }

  // string filemd5_1 = 3;
  if (this->filemd5_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_1().data(), this->filemd5_1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filemd5_1(), output);
  }

  // string filemd5_2 = 4;
  if (this->filemd5_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_2().data(), this->filemd5_2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filemd5_2(), output);
  }

  // uint64 filecreatedate = 5;
  if (this->filecreatedate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->filecreatedate(), output);
  }

  // uint32 filepathid = 7;
  if (this->filepathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->filepathid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileInfo)
}

::google::protobuf::uint8* FileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileInfo)
  // string fileId = 1;
  if (this->fileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileid().data(), this->fileid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.fileId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fileid(), target);
  }

  // uint32 filesize = 2;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->filesize(), target);
  }

  // string filemd5_1 = 3;
  if (this->filemd5_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_1().data(), this->filemd5_1().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filemd5_1(), target);
  }

  // string filemd5_2 = 4;
  if (this->filemd5_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5_2().data(), this->filemd5_2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfo.filemd5_2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filemd5_2(), target);
  }

  // uint64 filecreatedate = 5;
  if (this->filecreatedate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->filecreatedate(), target);
  }

  // uint32 filepathid = 7;
  if (this->filepathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->filepathid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileInfo)
  size_t total_size = 0;

  // string fileId = 1;
  if (this->fileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fileid());
  }

  // string filemd5_1 = 3;
  if (this->filemd5_1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filemd5_1());
  }

  // string filemd5_2 = 4;
  if (this->filemd5_2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filemd5_2());
  }

  // uint32 filesize = 2;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filesize());
  }

  // uint32 filepathid = 7;
  if (this->filepathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filepathid());
  }

  // uint64 filecreatedate = 5;
  if (this->filecreatedate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filecreatedate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileInfo)
    MergeFrom(*source);
  }
}

void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.fileid().size() > 0) {

    fileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileid_);
  }
  if (from.filemd5_1().size() > 0) {

    filemd5_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_1_);
  }
  if (from.filemd5_2().size() > 0) {

    filemd5_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_2_);
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
  if (from.filepathid() != 0) {
    set_filepathid(from.filepathid());
  }
  if (from.filecreatedate() != 0) {
    set_filecreatedate(from.filecreatedate());
  }
}

void FileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfo::IsInitialized() const {
  return true;
}

void FileInfo::Swap(FileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfo::InternalSwap(FileInfo* other) {
  fileid_.Swap(&other->fileid_);
  filemd5_1_.Swap(&other->filemd5_1_);
  filemd5_2_.Swap(&other->filemd5_2_);
  std::swap(filesize_, other->filesize_);
  std::swap(filepathid_, other->filepathid_);
  std::swap(filecreatedate_, other->filecreatedate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileInfo::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileInfo

// string fileId = 1;
void FileInfo::clear_fileid() {
  fileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::fileid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.fileId)
  return fileid_.GetNoArena();
}
void FileInfo::set_fileid(const ::std::string& value) {
  
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.fileId)
}
#if LANG_CXX11
void FileInfo::set_fileid(::std::string&& value) {
  
  fileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.fileId)
}
#endif
void FileInfo::set_fileid(const char* value) {
  
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.fileId)
}
void FileInfo::set_fileid(const char* value, size_t size) {
  
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.fileId)
}
::std::string* FileInfo::mutable_fileid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.fileId)
  return fileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_fileid() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.fileId)
  
  return fileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_fileid(::std::string* fileid) {
  if (fileid != NULL) {
    
  } else {
    
  }
  fileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fileid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.fileId)
}

// uint32 filesize = 2;
void FileInfo::clear_filesize() {
  filesize_ = 0u;
}
::google::protobuf::uint32 FileInfo::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filesize)
  return filesize_;
}
void FileInfo::set_filesize(::google::protobuf::uint32 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filesize)
}

// string filemd5_1 = 3;
void FileInfo::clear_filemd5_1() {
  filemd5_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::filemd5_1() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.GetNoArena();
}
void FileInfo::set_filemd5_1(const ::std::string& value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_1)
}
#if LANG_CXX11
void FileInfo::set_filemd5_1(::std::string&& value) {
  
  filemd5_1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_1)
}
#endif
void FileInfo::set_filemd5_1(const char* value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_1)
}
void FileInfo::set_filemd5_1(const char* value, size_t size) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_1)
}
::std::string* FileInfo::mutable_filemd5_1() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_filemd5_1() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_1)
  
  return filemd5_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_filemd5_1(::std::string* filemd5_1) {
  if (filemd5_1 != NULL) {
    
  } else {
    
  }
  filemd5_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_1);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_1)
}

// string filemd5_2 = 4;
void FileInfo::clear_filemd5_2() {
  filemd5_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfo::filemd5_2() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.GetNoArena();
}
void FileInfo::set_filemd5_2(const ::std::string& value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_2)
}
#if LANG_CXX11
void FileInfo::set_filemd5_2(::std::string&& value) {
  
  filemd5_2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_2)
}
#endif
void FileInfo::set_filemd5_2(const char* value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_2)
}
void FileInfo::set_filemd5_2(const char* value, size_t size) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_2)
}
::std::string* FileInfo::mutable_filemd5_2() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfo::release_filemd5_2() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_2)
  
  return filemd5_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfo::set_allocated_filemd5_2(::std::string* filemd5_2) {
  if (filemd5_2 != NULL) {
    
  } else {
    
  }
  filemd5_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_2);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_2)
}

// uint64 filecreatedate = 5;
void FileInfo::clear_filecreatedate() {
  filecreatedate_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 FileInfo::filecreatedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filecreatedate)
  return filecreatedate_;
}
void FileInfo::set_filecreatedate(::google::protobuf::uint64 value) {
  
  filecreatedate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filecreatedate)
}

// uint32 filepathid = 7;
void FileInfo::clear_filepathid() {
  filepathid_ = 0u;
}
::google::protobuf::uint32 FileInfo::filepathid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filepathid)
  return filepathid_;
}
void FileInfo::set_filepathid(::google::protobuf::uint32 value) {
  
  filepathid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filepathid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfoFile::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfoFile::FileInfoFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileInfoFile)
}
FileInfoFile::FileInfoFile(const FileInfoFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      info_(from.info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileInfoFile)
}

void FileInfoFile::SharedCtor() {
  _cached_size_ = 0;
}

FileInfoFile::~FileInfoFile() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileInfoFile)
  SharedDtor();
}

void FileInfoFile::SharedDtor() {
}

void FileInfoFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileInfoFile::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[20].descriptor;
}

const FileInfoFile& FileInfoFile::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileInfoFile* FileInfoFile::New(::google::protobuf::Arena* arena) const {
  FileInfoFile* n = new FileInfoFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileInfoFile::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileInfoFile)
  info_.Clear();
}

bool FileInfoFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileInfoFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.FileInfo info = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_info()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileInfoFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileInfoFile)
  return false;
#undef DO_
}

void FileInfoFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileInfoFile)
  // repeated .qiuwanli.FileInfo info = 1;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileInfoFile)
}

::google::protobuf::uint8* FileInfoFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileInfoFile)
  // repeated .qiuwanli.FileInfo info = 1;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileInfoFile)
  return target;
}

size_t FileInfoFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileInfoFile)
  size_t total_size = 0;

  // repeated .qiuwanli.FileInfo info = 1;
  {
    unsigned int count = this->info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileInfoFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileInfoFile)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfoFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfoFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileInfoFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileInfoFile)
    MergeFrom(*source);
  }
}

void FileInfoFile::MergeFrom(const FileInfoFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileInfoFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
}

void FileInfoFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileInfoFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfoFile::CopyFrom(const FileInfoFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileInfoFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfoFile::IsInitialized() const {
  return true;
}

void FileInfoFile::Swap(FileInfoFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfoFile::InternalSwap(FileInfoFile* other) {
  info_.UnsafeArenaSwap(&other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileInfoFile::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileInfoFile

// repeated .qiuwanli.FileInfo info = 1;
int FileInfoFile::info_size() const {
  return info_.size();
}
void FileInfoFile::clear_info() {
  info_.Clear();
}
const ::qiuwanli::FileInfo& FileInfoFile::info(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoFile.info)
  return info_.Get(index);
}
::qiuwanli::FileInfo* FileInfoFile::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoFile.info)
  return info_.Mutable(index);
}
::qiuwanli::FileInfo* FileInfoFile::add_info() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileInfoFile.info)
  return info_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfo >*
FileInfoFile::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileInfoFile.info)
  return &info_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfo >&
FileInfoFile::info() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileInfoFile.info)
  return info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferBlock::kMaxsizeFieldNumber;
const int BufferBlock::kCurrsizeFieldNumber;
const int BufferBlock::kBufferdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferBlock::BufferBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BufferBlock)
}
BufferBlock::BufferBlock(const BufferBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bufferdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bufferdata().size() > 0) {
    bufferdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bufferdata_);
  }
  ::memcpy(&maxsize_, &from.maxsize_,
    reinterpret_cast<char*>(&currsize_) -
    reinterpret_cast<char*>(&maxsize_) + sizeof(currsize_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BufferBlock)
}

void BufferBlock::SharedCtor() {
  bufferdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxsize_, 0, reinterpret_cast<char*>(&currsize_) -
    reinterpret_cast<char*>(&maxsize_) + sizeof(currsize_));
  _cached_size_ = 0;
}

BufferBlock::~BufferBlock() {
  // @@protoc_insertion_point(destructor:qiuwanli.BufferBlock)
  SharedDtor();
}

void BufferBlock::SharedDtor() {
  bufferdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BufferBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BufferBlock::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[21].descriptor;
}

const BufferBlock& BufferBlock::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BufferBlock* BufferBlock::New(::google::protobuf::Arena* arena) const {
  BufferBlock* n = new BufferBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BufferBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BufferBlock)
  bufferdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxsize_, 0, reinterpret_cast<char*>(&currsize_) -
    reinterpret_cast<char*>(&maxsize_) + sizeof(currsize_));
}

bool BufferBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BufferBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 maxsize = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 currsize = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bufferdata = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bufferdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BufferBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BufferBlock)
  return false;
#undef DO_
}

void BufferBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BufferBlock)
  // uint32 maxsize = 1;
  if (this->maxsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxsize(), output);
  }

  // uint32 currsize = 2;
  if (this->currsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currsize(), output);
  }

  // bytes bufferdata = 3;
  if (this->bufferdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bufferdata(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BufferBlock)
}

::google::protobuf::uint8* BufferBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BufferBlock)
  // uint32 maxsize = 1;
  if (this->maxsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxsize(), target);
  }

  // uint32 currsize = 2;
  if (this->currsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currsize(), target);
  }

  // bytes bufferdata = 3;
  if (this->bufferdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bufferdata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BufferBlock)
  return target;
}

size_t BufferBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BufferBlock)
  size_t total_size = 0;

  // bytes bufferdata = 3;
  if (this->bufferdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bufferdata());
  }

  // uint32 maxsize = 1;
  if (this->maxsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxsize());
  }

  // uint32 currsize = 2;
  if (this->currsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BufferBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BufferBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BufferBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BufferBlock)
    MergeFrom(*source);
  }
}

void BufferBlock::MergeFrom(const BufferBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BufferBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.bufferdata().size() > 0) {

    bufferdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bufferdata_);
  }
  if (from.maxsize() != 0) {
    set_maxsize(from.maxsize());
  }
  if (from.currsize() != 0) {
    set_currsize(from.currsize());
  }
}

void BufferBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BufferBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferBlock::CopyFrom(const BufferBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BufferBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferBlock::IsInitialized() const {
  return true;
}

void BufferBlock::Swap(BufferBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BufferBlock::InternalSwap(BufferBlock* other) {
  bufferdata_.Swap(&other->bufferdata_);
  std::swap(maxsize_, other->maxsize_);
  std::swap(currsize_, other->currsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BufferBlock::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BufferBlock

// uint32 maxsize = 1;
void BufferBlock::clear_maxsize() {
  maxsize_ = 0u;
}
::google::protobuf::uint32 BufferBlock::maxsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlock.maxsize)
  return maxsize_;
}
void BufferBlock::set_maxsize(::google::protobuf::uint32 value) {
  
  maxsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlock.maxsize)
}

// uint32 currsize = 2;
void BufferBlock::clear_currsize() {
  currsize_ = 0u;
}
::google::protobuf::uint32 BufferBlock::currsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlock.currsize)
  return currsize_;
}
void BufferBlock::set_currsize(::google::protobuf::uint32 value) {
  
  currsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlock.currsize)
}

// bytes bufferdata = 3;
void BufferBlock::clear_bufferdata() {
  bufferdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BufferBlock::bufferdata() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlock.bufferdata)
  return bufferdata_.GetNoArena();
}
void BufferBlock::set_bufferdata(const ::std::string& value) {
  
  bufferdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlock.bufferdata)
}
#if LANG_CXX11
void BufferBlock::set_bufferdata(::std::string&& value) {
  
  bufferdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BufferBlock.bufferdata)
}
#endif
void BufferBlock::set_bufferdata(const char* value) {
  
  bufferdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BufferBlock.bufferdata)
}
void BufferBlock::set_bufferdata(const void* value, size_t size) {
  
  bufferdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BufferBlock.bufferdata)
}
::std::string* BufferBlock::mutable_bufferdata() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BufferBlock.bufferdata)
  return bufferdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BufferBlock::release_bufferdata() {
  // @@protoc_insertion_point(field_release:qiuwanli.BufferBlock.bufferdata)
  
  return bufferdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BufferBlock::set_allocated_bufferdata(::std::string* bufferdata) {
  if (bufferdata != NULL) {
    
  } else {
    
  }
  bufferdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bufferdata);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BufferBlock.bufferdata)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BufferBlockPool::kPoolMaxSizeFieldNumber;
const int BufferBlockPool::kPoolSizeFieldNumber;
const int BufferBlockPool::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BufferBlockPool::BufferBlockPool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BufferBlockPool)
}
BufferBlockPool::BufferBlockPool(const BufferBlockPool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      buffer_(from.buffer_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&poolmaxsize_, &from.poolmaxsize_,
    reinterpret_cast<char*>(&poolsize_) -
    reinterpret_cast<char*>(&poolmaxsize_) + sizeof(poolsize_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BufferBlockPool)
}

void BufferBlockPool::SharedCtor() {
  ::memset(&poolmaxsize_, 0, reinterpret_cast<char*>(&poolsize_) -
    reinterpret_cast<char*>(&poolmaxsize_) + sizeof(poolsize_));
  _cached_size_ = 0;
}

BufferBlockPool::~BufferBlockPool() {
  // @@protoc_insertion_point(destructor:qiuwanli.BufferBlockPool)
  SharedDtor();
}

void BufferBlockPool::SharedDtor() {
}

void BufferBlockPool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BufferBlockPool::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[22].descriptor;
}

const BufferBlockPool& BufferBlockPool::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BufferBlockPool* BufferBlockPool::New(::google::protobuf::Arena* arena) const {
  BufferBlockPool* n = new BufferBlockPool;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BufferBlockPool::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BufferBlockPool)
  buffer_.Clear();
  ::memset(&poolmaxsize_, 0, reinterpret_cast<char*>(&poolsize_) -
    reinterpret_cast<char*>(&poolmaxsize_) + sizeof(poolsize_));
}

bool BufferBlockPool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BufferBlockPool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 PoolMaxSize = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poolmaxsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PoolSize = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poolsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qiuwanli.BufferBlock buffer = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buffer()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BufferBlockPool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BufferBlockPool)
  return false;
#undef DO_
}

void BufferBlockPool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BufferBlockPool)
  // uint32 PoolMaxSize = 1;
  if (this->poolmaxsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->poolmaxsize(), output);
  }

  // uint32 PoolSize = 2;
  if (this->poolsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->poolsize(), output);
  }

  // repeated .qiuwanli.BufferBlock buffer = 3;
  for (unsigned int i = 0, n = this->buffer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->buffer(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BufferBlockPool)
}

::google::protobuf::uint8* BufferBlockPool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BufferBlockPool)
  // uint32 PoolMaxSize = 1;
  if (this->poolmaxsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->poolmaxsize(), target);
  }

  // uint32 PoolSize = 2;
  if (this->poolsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->poolsize(), target);
  }

  // repeated .qiuwanli.BufferBlock buffer = 3;
  for (unsigned int i = 0, n = this->buffer_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->buffer(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BufferBlockPool)
  return target;
}

size_t BufferBlockPool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BufferBlockPool)
  size_t total_size = 0;

  // repeated .qiuwanli.BufferBlock buffer = 3;
  {
    unsigned int count = this->buffer_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buffer(i));
    }
  }

  // uint32 PoolMaxSize = 1;
  if (this->poolmaxsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->poolmaxsize());
  }

  // uint32 PoolSize = 2;
  if (this->poolsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->poolsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BufferBlockPool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BufferBlockPool)
  GOOGLE_DCHECK_NE(&from, this);
  const BufferBlockPool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BufferBlockPool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BufferBlockPool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BufferBlockPool)
    MergeFrom(*source);
  }
}

void BufferBlockPool::MergeFrom(const BufferBlockPool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BufferBlockPool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buffer_.MergeFrom(from.buffer_);
  if (from.poolmaxsize() != 0) {
    set_poolmaxsize(from.poolmaxsize());
  }
  if (from.poolsize() != 0) {
    set_poolsize(from.poolsize());
  }
}

void BufferBlockPool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BufferBlockPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BufferBlockPool::CopyFrom(const BufferBlockPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BufferBlockPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BufferBlockPool::IsInitialized() const {
  return true;
}

void BufferBlockPool::Swap(BufferBlockPool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BufferBlockPool::InternalSwap(BufferBlockPool* other) {
  buffer_.UnsafeArenaSwap(&other->buffer_);
  std::swap(poolmaxsize_, other->poolmaxsize_);
  std::swap(poolsize_, other->poolsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BufferBlockPool::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BufferBlockPool

// uint32 PoolMaxSize = 1;
void BufferBlockPool::clear_poolmaxsize() {
  poolmaxsize_ = 0u;
}
::google::protobuf::uint32 BufferBlockPool::poolmaxsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlockPool.PoolMaxSize)
  return poolmaxsize_;
}
void BufferBlockPool::set_poolmaxsize(::google::protobuf::uint32 value) {
  
  poolmaxsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlockPool.PoolMaxSize)
}

// uint32 PoolSize = 2;
void BufferBlockPool::clear_poolsize() {
  poolsize_ = 0u;
}
::google::protobuf::uint32 BufferBlockPool::poolsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlockPool.PoolSize)
  return poolsize_;
}
void BufferBlockPool::set_poolsize(::google::protobuf::uint32 value) {
  
  poolsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BufferBlockPool.PoolSize)
}

// repeated .qiuwanli.BufferBlock buffer = 3;
int BufferBlockPool::buffer_size() const {
  return buffer_.size();
}
void BufferBlockPool::clear_buffer() {
  buffer_.Clear();
}
const ::qiuwanli::BufferBlock& BufferBlockPool::buffer(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BufferBlockPool.buffer)
  return buffer_.Get(index);
}
::qiuwanli::BufferBlock* BufferBlockPool::mutable_buffer(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BufferBlockPool.buffer)
  return buffer_.Mutable(index);
}
::qiuwanli::BufferBlock* BufferBlockPool::add_buffer() {
  // @@protoc_insertion_point(field_add:qiuwanli.BufferBlockPool.buffer)
  return buffer_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::BufferBlock >*
BufferBlockPool::mutable_buffer() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BufferBlockPool.buffer)
  return &buffer_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BufferBlock >&
BufferBlockPool::buffer() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BufferBlockPool.buffer)
  return buffer_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileBlockInfo::kFileIdFieldNumber;
const int FileBlockInfo::kFileblockNumFieldNumber;
const int FileBlockInfo::kFileCRCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileBlockInfo::FileBlockInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileBlockInfo)
}
FileBlockInfo::FileBlockInfo(const FileBlockInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_id().size() > 0) {
    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  file_crc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_crc().size() > 0) {
    file_crc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_crc_);
  }
  fileblock_num_ = from.fileblock_num_;
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileBlockInfo)
}

void FileBlockInfo::SharedCtor() {
  file_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_crc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileblock_num_ = 0u;
  _cached_size_ = 0;
}

FileBlockInfo::~FileBlockInfo() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileBlockInfo)
  SharedDtor();
}

void FileBlockInfo::SharedDtor() {
  file_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_crc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileBlockInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileBlockInfo::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[23].descriptor;
}

const FileBlockInfo& FileBlockInfo::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileBlockInfo* FileBlockInfo::New(::google::protobuf::Arena* arena) const {
  FileBlockInfo* n = new FileBlockInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileBlockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileBlockInfo)
  file_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileblock_num_ = 0u;
}

bool FileBlockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileBlockInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_id().data(), this->file_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileBlockInfo.file_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fileblock_num = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fileblock_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_CRC = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_crc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_crc().data(), this->file_crc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileBlockInfo.file_CRC"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileBlockInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileBlockInfo)
  return false;
#undef DO_
}

void FileBlockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileBlockInfo)
  // string file_id = 1;
  if (this->file_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id().data(), this->file_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_id(), output);
  }

  // uint32 fileblock_num = 2;
  if (this->fileblock_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fileblock_num(), output);
  }

  // string file_CRC = 3;
  if (this->file_crc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_crc().data(), this->file_crc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_CRC");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_crc(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileBlockInfo)
}

::google::protobuf::uint8* FileBlockInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileBlockInfo)
  // string file_id = 1;
  if (this->file_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_id().data(), this->file_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_id(), target);
  }

  // uint32 fileblock_num = 2;
  if (this->fileblock_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fileblock_num(), target);
  }

  // string file_CRC = 3;
  if (this->file_crc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_crc().data(), this->file_crc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileBlockInfo.file_CRC");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_crc(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileBlockInfo)
  return target;
}

size_t FileBlockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileBlockInfo)
  size_t total_size = 0;

  // string file_id = 1;
  if (this->file_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_id());
  }

  // string file_CRC = 3;
  if (this->file_crc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_crc());
  }

  // uint32 fileblock_num = 2;
  if (this->fileblock_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fileblock_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileBlockInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileBlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FileBlockInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileBlockInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileBlockInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileBlockInfo)
    MergeFrom(*source);
  }
}

void FileBlockInfo::MergeFrom(const FileBlockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileBlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.file_id().size() > 0) {

    file_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_id_);
  }
  if (from.file_crc().size() > 0) {

    file_crc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_crc_);
  }
  if (from.fileblock_num() != 0) {
    set_fileblock_num(from.fileblock_num());
  }
}

void FileBlockInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileBlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileBlockInfo::CopyFrom(const FileBlockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileBlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileBlockInfo::IsInitialized() const {
  return true;
}

void FileBlockInfo::Swap(FileBlockInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileBlockInfo::InternalSwap(FileBlockInfo* other) {
  file_id_.Swap(&other->file_id_);
  file_crc_.Swap(&other->file_crc_);
  std::swap(fileblock_num_, other->fileblock_num_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileBlockInfo::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileBlockInfo

// string file_id = 1;
void FileBlockInfo::clear_file_id() {
  file_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileBlockInfo::file_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_id)
  return file_id_.GetNoArena();
}
void FileBlockInfo::set_file_id(const ::std::string& value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_id)
}
#if LANG_CXX11
void FileBlockInfo::set_file_id(::std::string&& value) {
  
  file_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_id)
}
#endif
void FileBlockInfo::set_file_id(const char* value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_id)
}
void FileBlockInfo::set_file_id(const char* value, size_t size) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_id)
}
::std::string* FileBlockInfo::mutable_file_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_id)
  return file_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileBlockInfo::release_file_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_id)
  
  return file_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileBlockInfo::set_allocated_file_id(::std::string* file_id) {
  if (file_id != NULL) {
    
  } else {
    
  }
  file_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_id)
}

// uint32 fileblock_num = 2;
void FileBlockInfo::clear_fileblock_num() {
  fileblock_num_ = 0u;
}
::google::protobuf::uint32 FileBlockInfo::fileblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.fileblock_num)
  return fileblock_num_;
}
void FileBlockInfo::set_fileblock_num(::google::protobuf::uint32 value) {
  
  fileblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.fileblock_num)
}

// string file_CRC = 3;
void FileBlockInfo::clear_file_crc() {
  file_crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileBlockInfo::file_crc() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.GetNoArena();
}
void FileBlockInfo::set_file_crc(const ::std::string& value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_CRC)
}
#if LANG_CXX11
void FileBlockInfo::set_file_crc(::std::string&& value) {
  
  file_crc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_CRC)
}
#endif
void FileBlockInfo::set_file_crc(const char* value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_CRC)
}
void FileBlockInfo::set_file_crc(const char* value, size_t size) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_CRC)
}
::std::string* FileBlockInfo::mutable_file_crc() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileBlockInfo::release_file_crc() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_CRC)
  
  return file_crc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileBlockInfo::set_allocated_file_crc(::std::string* file_crc) {
  if (file_crc != NULL) {
    
  } else {
    
  }
  file_crc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_crc);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_CRC)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int filetemp::kFileinfoFieldNumber;
const int filetemp::kBitMapFieldNumber;
const int filetemp::kNowStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

filetemp::filetemp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.filetemp)
}
filetemp::filetemp(const filetemp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitmap_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bitmap().size() > 0) {
    bitmap_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_);
  }
  nowstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nowstatus().size() > 0) {
    nowstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nowstatus_);
  }
  if (from.has_fileinfo()) {
    fileinfo_ = new ::qiuwanli::FileBlockInfo(*from.fileinfo_);
  } else {
    fileinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.filetemp)
}

void filetemp::SharedCtor() {
  bitmap_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nowstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileinfo_ = NULL;
  _cached_size_ = 0;
}

filetemp::~filetemp() {
  // @@protoc_insertion_point(destructor:qiuwanli.filetemp)
  SharedDtor();
}

void filetemp::SharedDtor() {
  bitmap_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nowstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete fileinfo_;
  }
}

void filetemp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* filetemp::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[24].descriptor;
}

const filetemp& filetemp::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

filetemp* filetemp::New(::google::protobuf::Arena* arena) const {
  filetemp* n = new filetemp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void filetemp::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.filetemp)
  bitmap_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nowstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fileinfo_ != NULL) {
    delete fileinfo_;
  }
  fileinfo_ = NULL;
}

bool filetemp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.filetemp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qiuwanli.FileBlockInfo fileinfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fileinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes BitMap = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bitmap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NowStatus = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nowstatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nowstatus().data(), this->nowstatus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.filetemp.NowStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.filetemp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.filetemp)
  return false;
#undef DO_
}

void filetemp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.filetemp)
  // .qiuwanli.FileBlockInfo fileinfo = 1;
  if (this->has_fileinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->fileinfo_, output);
  }

  // bytes BitMap = 2;
  if (this->bitmap().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->bitmap(), output);
  }

  // string NowStatus = 3;
  if (this->nowstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nowstatus().data(), this->nowstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.filetemp.NowStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nowstatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.filetemp)
}

::google::protobuf::uint8* filetemp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.filetemp)
  // .qiuwanli.FileBlockInfo fileinfo = 1;
  if (this->has_fileinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->fileinfo_, false, target);
  }

  // bytes BitMap = 2;
  if (this->bitmap().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->bitmap(), target);
  }

  // string NowStatus = 3;
  if (this->nowstatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nowstatus().data(), this->nowstatus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.filetemp.NowStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nowstatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.filetemp)
  return target;
}

size_t filetemp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.filetemp)
  size_t total_size = 0;

  // bytes BitMap = 2;
  if (this->bitmap().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bitmap());
  }

  // string NowStatus = 3;
  if (this->nowstatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nowstatus());
  }

  // .qiuwanli.FileBlockInfo fileinfo = 1;
  if (this->has_fileinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fileinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void filetemp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.filetemp)
  GOOGLE_DCHECK_NE(&from, this);
  const filetemp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const filetemp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.filetemp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.filetemp)
    MergeFrom(*source);
  }
}

void filetemp::MergeFrom(const filetemp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.filetemp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.bitmap().size() > 0) {

    bitmap_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitmap_);
  }
  if (from.nowstatus().size() > 0) {

    nowstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nowstatus_);
  }
  if (from.has_fileinfo()) {
    mutable_fileinfo()->::qiuwanli::FileBlockInfo::MergeFrom(from.fileinfo());
  }
}

void filetemp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.filetemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void filetemp::CopyFrom(const filetemp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.filetemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool filetemp::IsInitialized() const {
  return true;
}

void filetemp::Swap(filetemp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void filetemp::InternalSwap(filetemp* other) {
  bitmap_.Swap(&other->bitmap_);
  nowstatus_.Swap(&other->nowstatus_);
  std::swap(fileinfo_, other->fileinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata filetemp::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// filetemp

// .qiuwanli.FileBlockInfo fileinfo = 1;
bool filetemp::has_fileinfo() const {
  return this != internal_default_instance() && fileinfo_ != NULL;
}
void filetemp::clear_fileinfo() {
  if (GetArenaNoVirtual() == NULL && fileinfo_ != NULL) delete fileinfo_;
  fileinfo_ = NULL;
}
const ::qiuwanli::FileBlockInfo& filetemp::fileinfo() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filetemp.fileinfo)
  return fileinfo_ != NULL ? *fileinfo_
                         : *::qiuwanli::FileBlockInfo::internal_default_instance();
}
::qiuwanli::FileBlockInfo* filetemp::mutable_fileinfo() {
  
  if (fileinfo_ == NULL) {
    fileinfo_ = new ::qiuwanli::FileBlockInfo;
  }
  // @@protoc_insertion_point(field_mutable:qiuwanli.filetemp.fileinfo)
  return fileinfo_;
}
::qiuwanli::FileBlockInfo* filetemp::release_fileinfo() {
  // @@protoc_insertion_point(field_release:qiuwanli.filetemp.fileinfo)
  
  ::qiuwanli::FileBlockInfo* temp = fileinfo_;
  fileinfo_ = NULL;
  return temp;
}
void filetemp::set_allocated_fileinfo(::qiuwanli::FileBlockInfo* fileinfo) {
  delete fileinfo_;
  fileinfo_ = fileinfo;
  if (fileinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filetemp.fileinfo)
}

// bytes BitMap = 2;
void filetemp::clear_bitmap() {
  bitmap_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& filetemp::bitmap() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filetemp.BitMap)
  return bitmap_.GetNoArena();
}
void filetemp::set_bitmap(const ::std::string& value) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filetemp.BitMap)
}
#if LANG_CXX11
void filetemp::set_bitmap(::std::string&& value) {
  
  bitmap_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filetemp.BitMap)
}
#endif
void filetemp::set_bitmap(const char* value) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filetemp.BitMap)
}
void filetemp::set_bitmap(const void* value, size_t size) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filetemp.BitMap)
}
::std::string* filetemp::mutable_bitmap() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filetemp.BitMap)
  return bitmap_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* filetemp::release_bitmap() {
  // @@protoc_insertion_point(field_release:qiuwanli.filetemp.BitMap)
  
  return bitmap_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void filetemp::set_allocated_bitmap(::std::string* bitmap) {
  if (bitmap != NULL) {
    
  } else {
    
  }
  bitmap_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bitmap);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filetemp.BitMap)
}

// string NowStatus = 3;
void filetemp::clear_nowstatus() {
  nowstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& filetemp::nowstatus() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filetemp.NowStatus)
  return nowstatus_.GetNoArena();
}
void filetemp::set_nowstatus(const ::std::string& value) {
  
  nowstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filetemp.NowStatus)
}
#if LANG_CXX11
void filetemp::set_nowstatus(::std::string&& value) {
  
  nowstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filetemp.NowStatus)
}
#endif
void filetemp::set_nowstatus(const char* value) {
  
  nowstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filetemp.NowStatus)
}
void filetemp::set_nowstatus(const char* value, size_t size) {
  
  nowstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filetemp.NowStatus)
}
::std::string* filetemp::mutable_nowstatus() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filetemp.NowStatus)
  return nowstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* filetemp::release_nowstatus() {
  // @@protoc_insertion_point(field_release:qiuwanli.filetemp.NowStatus)
  
  return nowstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void filetemp::set_allocated_nowstatus(::std::string* nowstatus) {
  if (nowstatus != NULL) {
    
  } else {
    
  }
  nowstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nowstatus);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filetemp.NowStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int allfiles::kUserIdFieldNumber;
const int allfiles::kFilesIpFieldNumber;
const int allfiles::kSharedIdFieldNumber;
const int allfiles::kFilesblockNumFieldNumber;
const int allfiles::kFilesblockStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

allfiles::allfiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.allfiles)
}
allfiles::allfiles(const allfiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  shared_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shared_id().size() > 0) {
    shared_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_id_);
  }
  ::memcpy(&files_ip_, &from.files_ip_,
    reinterpret_cast<char*>(&filesblock_start_) -
    reinterpret_cast<char*>(&files_ip_) + sizeof(filesblock_start_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.allfiles)
}

void allfiles::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&files_ip_, 0, reinterpret_cast<char*>(&filesblock_start_) -
    reinterpret_cast<char*>(&files_ip_) + sizeof(filesblock_start_));
  _cached_size_ = 0;
}

allfiles::~allfiles() {
  // @@protoc_insertion_point(destructor:qiuwanli.allfiles)
  SharedDtor();
}

void allfiles::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void allfiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* allfiles::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[25].descriptor;
}

const allfiles& allfiles::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

allfiles* allfiles::New(::google::protobuf::Arena* arena) const {
  allfiles* n = new allfiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void allfiles::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.allfiles)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shared_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&files_ip_, 0, reinterpret_cast<char*>(&filesblock_start_) -
    reinterpret_cast<char*>(&files_ip_) + sizeof(filesblock_start_));
}

bool allfiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.allfiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.allfiles.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 files_ip = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &files_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shared_id = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shared_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shared_id().data(), this->shared_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.allfiles.shared_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filesblock_num = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesblock_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 filesblock_start = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesblock_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.allfiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.allfiles)
  return false;
#undef DO_
}

void allfiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.allfiles)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // uint32 files_ip = 2;
  if (this->files_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->files_ip(), output);
  }

  // string shared_id = 3;
  if (this->shared_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_id().data(), this->shared_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.shared_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->shared_id(), output);
  }

  // uint32 filesblock_num = 4;
  if (this->filesblock_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->filesblock_num(), output);
  }

  // uint32 filesblock_start = 5;
  if (this->filesblock_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->filesblock_start(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.allfiles)
}

::google::protobuf::uint8* allfiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.allfiles)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // uint32 files_ip = 2;
  if (this->files_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->files_ip(), target);
  }

  // string shared_id = 3;
  if (this->shared_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shared_id().data(), this->shared_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.allfiles.shared_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->shared_id(), target);
  }

  // uint32 filesblock_num = 4;
  if (this->filesblock_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->filesblock_num(), target);
  }

  // uint32 filesblock_start = 5;
  if (this->filesblock_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->filesblock_start(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.allfiles)
  return target;
}

size_t allfiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.allfiles)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string shared_id = 3;
  if (this->shared_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shared_id());
  }

  // uint32 files_ip = 2;
  if (this->files_ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->files_ip());
  }

  // uint32 filesblock_num = 4;
  if (this->filesblock_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filesblock_num());
  }

  // uint32 filesblock_start = 5;
  if (this->filesblock_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filesblock_start());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void allfiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.allfiles)
  GOOGLE_DCHECK_NE(&from, this);
  const allfiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const allfiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.allfiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.allfiles)
    MergeFrom(*source);
  }
}

void allfiles::MergeFrom(const allfiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.allfiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.shared_id().size() > 0) {

    shared_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shared_id_);
  }
  if (from.files_ip() != 0) {
    set_files_ip(from.files_ip());
  }
  if (from.filesblock_num() != 0) {
    set_filesblock_num(from.filesblock_num());
  }
  if (from.filesblock_start() != 0) {
    set_filesblock_start(from.filesblock_start());
  }
}

void allfiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.allfiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void allfiles::CopyFrom(const allfiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.allfiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool allfiles::IsInitialized() const {
  return true;
}

void allfiles::Swap(allfiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void allfiles::InternalSwap(allfiles* other) {
  user_id_.Swap(&other->user_id_);
  shared_id_.Swap(&other->shared_id_);
  std::swap(files_ip_, other->files_ip_);
  std::swap(filesblock_num_, other->filesblock_num_);
  std::swap(filesblock_start_, other->filesblock_start_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata allfiles::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// allfiles

// string user_id = 1;
void allfiles::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& allfiles::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.user_id)
  return user_id_.GetNoArena();
}
void allfiles::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.user_id)
}
#if LANG_CXX11
void allfiles::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.user_id)
}
#endif
void allfiles::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.user_id)
}
void allfiles::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.user_id)
}
::std::string* allfiles::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* allfiles::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void allfiles::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.user_id)
}

// uint32 files_ip = 2;
void allfiles::clear_files_ip() {
  files_ip_ = 0u;
}
::google::protobuf::uint32 allfiles::files_ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.files_ip)
  return files_ip_;
}
void allfiles::set_files_ip(::google::protobuf::uint32 value) {
  
  files_ip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.files_ip)
}

// string shared_id = 3;
void allfiles::clear_shared_id() {
  shared_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& allfiles::shared_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.shared_id)
  return shared_id_.GetNoArena();
}
void allfiles::set_shared_id(const ::std::string& value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.shared_id)
}
#if LANG_CXX11
void allfiles::set_shared_id(::std::string&& value) {
  
  shared_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.shared_id)
}
#endif
void allfiles::set_shared_id(const char* value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.shared_id)
}
void allfiles::set_shared_id(const char* value, size_t size) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.shared_id)
}
::std::string* allfiles::mutable_shared_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.shared_id)
  return shared_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* allfiles::release_shared_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.shared_id)
  
  return shared_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void allfiles::set_allocated_shared_id(::std::string* shared_id) {
  if (shared_id != NULL) {
    
  } else {
    
  }
  shared_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.shared_id)
}

// uint32 filesblock_num = 4;
void allfiles::clear_filesblock_num() {
  filesblock_num_ = 0u;
}
::google::protobuf::uint32 allfiles::filesblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_num)
  return filesblock_num_;
}
void allfiles::set_filesblock_num(::google::protobuf::uint32 value) {
  
  filesblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_num)
}

// uint32 filesblock_start = 5;
void allfiles::clear_filesblock_start() {
  filesblock_start_ = 0u;
}
::google::protobuf::uint32 allfiles::filesblock_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_start)
  return filesblock_start_;
}
void allfiles::set_filesblock_start(::google::protobuf::uint32 value) {
  
  filesblock_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int files_small::kFileSmallNameFieldNumber;
const int files_small::kFileSmallCreateTimeFieldNumber;
const int files_small::kFileSmallStartFieldNumber;
const int files_small::kFileSmallLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

files_small::files_small()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.files_small)
}
files_small::files_small(const files_small& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_small_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_small_name().size() > 0) {
    file_small_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_small_name_);
  }
  ::memcpy(&file_small_create_time_, &from.file_small_create_time_,
    reinterpret_cast<char*>(&file_small_length_) -
    reinterpret_cast<char*>(&file_small_create_time_) + sizeof(file_small_length_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.files_small)
}

void files_small::SharedCtor() {
  file_small_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_small_create_time_, 0, reinterpret_cast<char*>(&file_small_length_) -
    reinterpret_cast<char*>(&file_small_create_time_) + sizeof(file_small_length_));
  _cached_size_ = 0;
}

files_small::~files_small() {
  // @@protoc_insertion_point(destructor:qiuwanli.files_small)
  SharedDtor();
}

void files_small::SharedDtor() {
  file_small_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void files_small::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* files_small::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[26].descriptor;
}

const files_small& files_small::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

files_small* files_small::New(::google::protobuf::Arena* arena) const {
  files_small* n = new files_small;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void files_small::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.files_small)
  file_small_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_small_create_time_, 0, reinterpret_cast<char*>(&file_small_length_) -
    reinterpret_cast<char*>(&file_small_create_time_) + sizeof(file_small_length_));
}

bool files_small::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.files_small)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_small_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_small_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_small_name().data(), this->file_small_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.files_small.file_small_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_small_create_time = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_small_create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_small_start = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_small_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_small_length = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_small_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.files_small)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.files_small)
  return false;
#undef DO_
}

void files_small::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.files_small)
  // string file_small_name = 1;
  if (this->file_small_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_small_name().data(), this->file_small_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.files_small.file_small_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_small_name(), output);
  }

  // uint32 file_small_create_time = 2;
  if (this->file_small_create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->file_small_create_time(), output);
  }

  // uint32 file_small_start = 3;
  if (this->file_small_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->file_small_start(), output);
  }

  // uint32 file_small_length = 4;
  if (this->file_small_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_small_length(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.files_small)
}

::google::protobuf::uint8* files_small::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.files_small)
  // string file_small_name = 1;
  if (this->file_small_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_small_name().data(), this->file_small_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.files_small.file_small_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_small_name(), target);
  }

  // uint32 file_small_create_time = 2;
  if (this->file_small_create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->file_small_create_time(), target);
  }

  // uint32 file_small_start = 3;
  if (this->file_small_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->file_small_start(), target);
  }

  // uint32 file_small_length = 4;
  if (this->file_small_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_small_length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.files_small)
  return target;
}

size_t files_small::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.files_small)
  size_t total_size = 0;

  // string file_small_name = 1;
  if (this->file_small_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_small_name());
  }

  // uint32 file_small_create_time = 2;
  if (this->file_small_create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_small_create_time());
  }

  // uint32 file_small_start = 3;
  if (this->file_small_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_small_start());
  }

  // uint32 file_small_length = 4;
  if (this->file_small_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_small_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void files_small::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.files_small)
  GOOGLE_DCHECK_NE(&from, this);
  const files_small* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const files_small>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.files_small)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.files_small)
    MergeFrom(*source);
  }
}

void files_small::MergeFrom(const files_small& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.files_small)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.file_small_name().size() > 0) {

    file_small_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_small_name_);
  }
  if (from.file_small_create_time() != 0) {
    set_file_small_create_time(from.file_small_create_time());
  }
  if (from.file_small_start() != 0) {
    set_file_small_start(from.file_small_start());
  }
  if (from.file_small_length() != 0) {
    set_file_small_length(from.file_small_length());
  }
}

void files_small::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.files_small)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void files_small::CopyFrom(const files_small& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.files_small)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool files_small::IsInitialized() const {
  return true;
}

void files_small::Swap(files_small* other) {
  if (other == this) return;
  InternalSwap(other);
}
void files_small::InternalSwap(files_small* other) {
  file_small_name_.Swap(&other->file_small_name_);
  std::swap(file_small_create_time_, other->file_small_create_time_);
  std::swap(file_small_start_, other->file_small_start_);
  std::swap(file_small_length_, other->file_small_length_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata files_small::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// files_small

// string file_small_name = 1;
void files_small::clear_file_small_name() {
  file_small_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& files_small::file_small_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_name)
  return file_small_name_.GetNoArena();
}
void files_small::set_file_small_name(const ::std::string& value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_name)
}
#if LANG_CXX11
void files_small::set_file_small_name(::std::string&& value) {
  
  file_small_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small.file_small_name)
}
#endif
void files_small::set_file_small_name(const char* value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small.file_small_name)
}
void files_small::set_file_small_name(const char* value, size_t size) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small.file_small_name)
}
::std::string* files_small::mutable_file_small_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small.file_small_name)
  return file_small_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* files_small::release_file_small_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small.file_small_name)
  
  return file_small_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void files_small::set_allocated_file_small_name(::std::string* file_small_name) {
  if (file_small_name != NULL) {
    
  } else {
    
  }
  file_small_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_small_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small.file_small_name)
}

// uint32 file_small_create_time = 2;
void files_small::clear_file_small_create_time() {
  file_small_create_time_ = 0u;
}
::google::protobuf::uint32 files_small::file_small_create_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_create_time)
  return file_small_create_time_;
}
void files_small::set_file_small_create_time(::google::protobuf::uint32 value) {
  
  file_small_create_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_create_time)
}

// uint32 file_small_start = 3;
void files_small::clear_file_small_start() {
  file_small_start_ = 0u;
}
::google::protobuf::uint32 files_small::file_small_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_start)
  return file_small_start_;
}
void files_small::set_file_small_start(::google::protobuf::uint32 value) {
  
  file_small_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_start)
}

// uint32 file_small_length = 4;
void files_small::clear_file_small_length() {
  file_small_length_ = 0u;
}
::google::protobuf::uint32 files_small::file_small_length() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_length)
  return file_small_length_;
}
void files_small::set_file_small_length(::google::protobuf::uint32 value) {
  
  file_small_length_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int files_small_block::kFilesSmallBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

files_small_block::files_small_block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MyDataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.files_small_block)
}
files_small_block::files_small_block(const files_small_block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  files_small_blocks_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.files_small_blocks().size() > 0) {
    files_small_blocks_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.files_small_blocks_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.files_small_block)
}

void files_small_block::SharedCtor() {
  files_small_blocks_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

files_small_block::~files_small_block() {
  // @@protoc_insertion_point(destructor:qiuwanli.files_small_block)
  SharedDtor();
}

void files_small_block::SharedDtor() {
  files_small_blocks_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void files_small_block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* files_small_block::descriptor() {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[27].descriptor;
}

const files_small_block& files_small_block::default_instance() {
  protobuf_MyDataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

files_small_block* files_small_block::New(::google::protobuf::Arena* arena) const {
  files_small_block* n = new files_small_block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void files_small_block::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.files_small_block)
  files_small_blocks_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool files_small_block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.files_small_block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes files_small_blocks = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_files_small_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.files_small_block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.files_small_block)
  return false;
#undef DO_
}

void files_small_block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.files_small_block)
  // bytes files_small_blocks = 1;
  if (this->files_small_blocks().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->files_small_blocks(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.files_small_block)
}

::google::protobuf::uint8* files_small_block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.files_small_block)
  // bytes files_small_blocks = 1;
  if (this->files_small_blocks().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->files_small_blocks(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.files_small_block)
  return target;
}

size_t files_small_block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.files_small_block)
  size_t total_size = 0;

  // bytes files_small_blocks = 1;
  if (this->files_small_blocks().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->files_small_blocks());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void files_small_block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.files_small_block)
  GOOGLE_DCHECK_NE(&from, this);
  const files_small_block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const files_small_block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.files_small_block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.files_small_block)
    MergeFrom(*source);
  }
}

void files_small_block::MergeFrom(const files_small_block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.files_small_block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.files_small_blocks().size() > 0) {

    files_small_blocks_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.files_small_blocks_);
  }
}

void files_small_block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.files_small_block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void files_small_block::CopyFrom(const files_small_block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.files_small_block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool files_small_block::IsInitialized() const {
  return true;
}

void files_small_block::Swap(files_small_block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void files_small_block::InternalSwap(files_small_block* other) {
  files_small_blocks_.Swap(&other->files_small_blocks_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata files_small_block::GetMetadata() const {
  protobuf_MyDataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MyDataStruct_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// files_small_block

// bytes files_small_blocks = 1;
void files_small_block::clear_files_small_blocks() {
  files_small_blocks_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& files_small_block::files_small_blocks() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.GetNoArena();
}
void files_small_block::set_files_small_blocks(const ::std::string& value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small_block.files_small_blocks)
}
#if LANG_CXX11
void files_small_block::set_files_small_blocks(::std::string&& value) {
  
  files_small_blocks_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small_block.files_small_blocks)
}
#endif
void files_small_block::set_files_small_blocks(const char* value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small_block.files_small_blocks)
}
void files_small_block::set_files_small_blocks(const void* value, size_t size) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small_block.files_small_blocks)
}
::std::string* files_small_block::mutable_files_small_blocks() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* files_small_block::release_files_small_blocks() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small_block.files_small_blocks)
  
  return files_small_blocks_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void files_small_block::set_allocated_files_small_blocks(::std::string* files_small_blocks) {
  if (files_small_blocks != NULL) {
    
  } else {
    
  }
  files_small_blocks_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), files_small_blocks);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small_block.files_small_blocks)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

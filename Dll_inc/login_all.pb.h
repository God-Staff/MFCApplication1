// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login_all.proto

#ifndef PROTOBUF_login_5fall_2eproto__INCLUDED
#define PROTOBUF_login_5fall_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qiuwanli {
class FileBlockInfo;
class FileBlockInfoDefaultTypeInternal;
extern FileBlockInfoDefaultTypeInternal _FileBlockInfo_default_instance_;
class FileInfo;
class FileInfoDefaultTypeInternal;
extern FileInfoDefaultTypeInternal _FileInfo_default_instance_;
class allfiles;
class allfilesDefaultTypeInternal;
extern allfilesDefaultTypeInternal _allfiles_default_instance_;
class files_small;
class files_smallDefaultTypeInternal;
extern files_smallDefaultTypeInternal _files_small_default_instance_;
class files_small_block;
class files_small_blockDefaultTypeInternal;
extern files_small_blockDefaultTypeInternal _files_small_block_default_instance_;
class filespath;
class filespathDefaultTypeInternal;
extern filespathDefaultTypeInternal _filespath_default_instance_;
class log;
class logDefaultTypeInternal;
extern logDefaultTypeInternal _log_default_instance_;
class loginIpLog;
class loginIpLogDefaultTypeInternal;
extern loginIpLogDefaultTypeInternal _loginIpLog_default_instance_;
class realuser;
class realuserDefaultTypeInternal;
extern realuserDefaultTypeInternal _realuser_default_instance_;
class shared;
class sharedDefaultTypeInternal;
extern sharedDefaultTypeInternal _shared_default_instance_;
class user;
class userDefaultTypeInternal;
extern userDefaultTypeInternal _user_default_instance_;
class userreg;
class userregDefaultTypeInternal;
extern userregDefaultTypeInternal _userreg_default_instance_;
}  // namespace qiuwanli

namespace qiuwanli {

namespace protobuf_login_5fall_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_login_5fall_2eproto

// ===================================================================

class user : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.user) */ {
 public:
  user();
  virtual ~user();

  user(const user& from);

  inline user& operator=(const user& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user& default_instance();

  static inline const user* internal_default_instance() {
    return reinterpret_cast<const user*>(
               &_user_default_instance_);
  }

  void Swap(user* other);

  // implements Message ----------------------------------------------

  inline user* New() const PROTOBUF_FINAL { return New(NULL); }

  user* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const user& from);
  void MergeFrom(const user& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(user* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string user_name = 2;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string user_password_md5 = 3;
  void clear_user_password_md5();
  static const int kUserPasswordMd5FieldNumber = 3;
  const ::std::string& user_password_md5() const;
  void set_user_password_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_user_password_md5(::std::string&& value);
  #endif
  void set_user_password_md5(const char* value);
  void set_user_password_md5(const char* value, size_t size);
  ::std::string* mutable_user_password_md5();
  ::std::string* release_user_password_md5();
  void set_allocated_user_password_md5(::std::string* user_password_md5);

  // string user_client_UUID = 4;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 4;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // string login_code = 5;
  void clear_login_code();
  static const int kLoginCodeFieldNumber = 5;
  const ::std::string& login_code() const;
  void set_login_code(const ::std::string& value);
  #if LANG_CXX11
  void set_login_code(::std::string&& value);
  #endif
  void set_login_code(const char* value);
  void set_login_code(const char* value, size_t size);
  ::std::string* mutable_login_code();
  ::std::string* release_login_code();
  void set_allocated_login_code(::std::string* login_code);

  // bytes user_type = 6;
  void clear_user_type();
  static const int kUserTypeFieldNumber = 6;
  const ::std::string& user_type() const;
  void set_user_type(const ::std::string& value);
  #if LANG_CXX11
  void set_user_type(::std::string&& value);
  #endif
  void set_user_type(const char* value);
  void set_user_type(const void* value, size_t size);
  ::std::string* mutable_user_type();
  ::std::string* release_user_type();
  void set_allocated_user_type(::std::string* user_type);

  // @@protoc_insertion_point(class_scope:qiuwanli.user)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr user_password_md5_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::internal::ArenaStringPtr login_code_;
  ::google::protobuf::internal::ArenaStringPtr user_type_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class realuser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.realuser) */ {
 public:
  realuser();
  virtual ~realuser();

  realuser(const realuser& from);

  inline realuser& operator=(const realuser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const realuser& default_instance();

  static inline const realuser* internal_default_instance() {
    return reinterpret_cast<const realuser*>(
               &_realuser_default_instance_);
  }

  void Swap(realuser* other);

  // implements Message ----------------------------------------------

  inline realuser* New() const PROTOBUF_FINAL { return New(NULL); }

  realuser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const realuser& from);
  void MergeFrom(const realuser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(realuser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string user_name_real = 2;
  void clear_user_name_real();
  static const int kUserNameRealFieldNumber = 2;
  const ::std::string& user_name_real() const;
  void set_user_name_real(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name_real(::std::string&& value);
  #endif
  void set_user_name_real(const char* value);
  void set_user_name_real(const char* value, size_t size);
  ::std::string* mutable_user_name_real();
  ::std::string* release_user_name_real();
  void set_allocated_user_name_real(::std::string* user_name_real);

  // string user_idcard = 3;
  void clear_user_idcard();
  static const int kUserIdcardFieldNumber = 3;
  const ::std::string& user_idcard() const;
  void set_user_idcard(const ::std::string& value);
  #if LANG_CXX11
  void set_user_idcard(::std::string&& value);
  #endif
  void set_user_idcard(const char* value);
  void set_user_idcard(const char* value, size_t size);
  ::std::string* mutable_user_idcard();
  ::std::string* release_user_idcard();
  void set_allocated_user_idcard(::std::string* user_idcard);

  // string user_live_address = 4;
  void clear_user_live_address();
  static const int kUserLiveAddressFieldNumber = 4;
  const ::std::string& user_live_address() const;
  void set_user_live_address(const ::std::string& value);
  #if LANG_CXX11
  void set_user_live_address(::std::string&& value);
  #endif
  void set_user_live_address(const char* value);
  void set_user_live_address(const char* value, size_t size);
  ::std::string* mutable_user_live_address();
  ::std::string* release_user_live_address();
  void set_allocated_user_live_address(::std::string* user_live_address);

  // string user_phone = 5;
  void clear_user_phone();
  static const int kUserPhoneFieldNumber = 5;
  const ::std::string& user_phone() const;
  void set_user_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_user_phone(::std::string&& value);
  #endif
  void set_user_phone(const char* value);
  void set_user_phone(const char* value, size_t size);
  ::std::string* mutable_user_phone();
  ::std::string* release_user_phone();
  void set_allocated_user_phone(::std::string* user_phone);

  // string user_qq = 6;
  void clear_user_qq();
  static const int kUserQqFieldNumber = 6;
  const ::std::string& user_qq() const;
  void set_user_qq(const ::std::string& value);
  #if LANG_CXX11
  void set_user_qq(::std::string&& value);
  #endif
  void set_user_qq(const char* value);
  void set_user_qq(const char* value, size_t size);
  ::std::string* mutable_user_qq();
  ::std::string* release_user_qq();
  void set_allocated_user_qq(::std::string* user_qq);

  // string user_mirchat = 7;
  void clear_user_mirchat();
  static const int kUserMirchatFieldNumber = 7;
  const ::std::string& user_mirchat() const;
  void set_user_mirchat(const ::std::string& value);
  #if LANG_CXX11
  void set_user_mirchat(::std::string&& value);
  #endif
  void set_user_mirchat(const char* value);
  void set_user_mirchat(const char* value, size_t size);
  ::std::string* mutable_user_mirchat();
  ::std::string* release_user_mirchat();
  void set_allocated_user_mirchat(::std::string* user_mirchat);

  // string user_email = 8;
  void clear_user_email();
  static const int kUserEmailFieldNumber = 8;
  const ::std::string& user_email() const;
  void set_user_email(const ::std::string& value);
  #if LANG_CXX11
  void set_user_email(::std::string&& value);
  #endif
  void set_user_email(const char* value);
  void set_user_email(const char* value, size_t size);
  ::std::string* mutable_user_email();
  ::std::string* release_user_email();
  void set_allocated_user_email(::std::string* user_email);

  // string user_bri = 9;
  void clear_user_bri();
  static const int kUserBriFieldNumber = 9;
  const ::std::string& user_bri() const;
  void set_user_bri(const ::std::string& value);
  #if LANG_CXX11
  void set_user_bri(::std::string&& value);
  #endif
  void set_user_bri(const char* value);
  void set_user_bri(const char* value, size_t size);
  ::std::string* mutable_user_bri();
  ::std::string* release_user_bri();
  void set_allocated_user_bri(::std::string* user_bri);

  // string user_address = 10;
  void clear_user_address();
  static const int kUserAddressFieldNumber = 10;
  const ::std::string& user_address() const;
  void set_user_address(const ::std::string& value);
  #if LANG_CXX11
  void set_user_address(::std::string&& value);
  #endif
  void set_user_address(const char* value);
  void set_user_address(const char* value, size_t size);
  ::std::string* mutable_user_address();
  ::std::string* release_user_address();
  void set_allocated_user_address(::std::string* user_address);

  // @@protoc_insertion_point(class_scope:qiuwanli.realuser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_real_;
  ::google::protobuf::internal::ArenaStringPtr user_idcard_;
  ::google::protobuf::internal::ArenaStringPtr user_live_address_;
  ::google::protobuf::internal::ArenaStringPtr user_phone_;
  ::google::protobuf::internal::ArenaStringPtr user_qq_;
  ::google::protobuf::internal::ArenaStringPtr user_mirchat_;
  ::google::protobuf::internal::ArenaStringPtr user_email_;
  ::google::protobuf::internal::ArenaStringPtr user_bri_;
  ::google::protobuf::internal::ArenaStringPtr user_address_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class userreg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.userreg) */ {
 public:
  userreg();
  virtual ~userreg();

  userreg(const userreg& from);

  inline userreg& operator=(const userreg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const userreg& default_instance();

  static inline const userreg* internal_default_instance() {
    return reinterpret_cast<const userreg*>(
               &_userreg_default_instance_);
  }

  void Swap(userreg* other);

  // implements Message ----------------------------------------------

  inline userreg* New() const PROTOBUF_FINAL { return New(NULL); }

  userreg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const userreg& from);
  void MergeFrom(const userreg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(userreg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_name = 1;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string user_password_md5 = 2;
  void clear_user_password_md5();
  static const int kUserPasswordMd5FieldNumber = 2;
  const ::std::string& user_password_md5() const;
  void set_user_password_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_user_password_md5(::std::string&& value);
  #endif
  void set_user_password_md5(const char* value);
  void set_user_password_md5(const char* value, size_t size);
  ::std::string* mutable_user_password_md5();
  ::std::string* release_user_password_md5();
  void set_allocated_user_password_md5(::std::string* user_password_md5);

  // string user_phone = 3;
  void clear_user_phone();
  static const int kUserPhoneFieldNumber = 3;
  const ::std::string& user_phone() const;
  void set_user_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_user_phone(::std::string&& value);
  #endif
  void set_user_phone(const char* value);
  void set_user_phone(const char* value, size_t size);
  ::std::string* mutable_user_phone();
  ::std::string* release_user_phone();
  void set_allocated_user_phone(::std::string* user_phone);

  // string reg_code = 4;
  void clear_reg_code();
  static const int kRegCodeFieldNumber = 4;
  const ::std::string& reg_code() const;
  void set_reg_code(const ::std::string& value);
  #if LANG_CXX11
  void set_reg_code(::std::string&& value);
  #endif
  void set_reg_code(const char* value);
  void set_reg_code(const char* value, size_t size);
  ::std::string* mutable_reg_code();
  ::std::string* release_reg_code();
  void set_allocated_reg_code(::std::string* reg_code);

  // @@protoc_insertion_point(class_scope:qiuwanli.userreg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr user_password_md5_;
  ::google::protobuf::internal::ArenaStringPtr user_phone_;
  ::google::protobuf::internal::ArenaStringPtr reg_code_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileInfo) */ {
 public:
  FileInfo();
  virtual ~FileInfo();

  FileInfo(const FileInfo& from);

  inline FileInfo& operator=(const FileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfo& default_instance();

  static inline const FileInfo* internal_default_instance() {
    return reinterpret_cast<const FileInfo*>(
               &_FileInfo_default_instance_);
  }

  void Swap(FileInfo* other);

  // implements Message ----------------------------------------------

  inline FileInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FileInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileInfo& from);
  void MergeFrom(const FileInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filename = 1;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string filemd5_1 = 3;
  void clear_filemd5_1();
  static const int kFilemd51FieldNumber = 3;
  const ::std::string& filemd5_1() const;
  void set_filemd5_1(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5_1(::std::string&& value);
  #endif
  void set_filemd5_1(const char* value);
  void set_filemd5_1(const char* value, size_t size);
  ::std::string* mutable_filemd5_1();
  ::std::string* release_filemd5_1();
  void set_allocated_filemd5_1(::std::string* filemd5_1);

  // string filemd5_2 = 4;
  void clear_filemd5_2();
  static const int kFilemd52FieldNumber = 4;
  const ::std::string& filemd5_2() const;
  void set_filemd5_2(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5_2(::std::string&& value);
  #endif
  void set_filemd5_2(const char* value);
  void set_filemd5_2(const char* value, size_t size);
  ::std::string* mutable_filemd5_2();
  ::std::string* release_filemd5_2();
  void set_allocated_filemd5_2(::std::string* filemd5_2);

  // bytes filetype = 6;
  void clear_filetype();
  static const int kFiletypeFieldNumber = 6;
  const ::std::string& filetype() const;
  void set_filetype(const ::std::string& value);
  #if LANG_CXX11
  void set_filetype(::std::string&& value);
  #endif
  void set_filetype(const char* value);
  void set_filetype(const void* value, size_t size);
  ::std::string* mutable_filetype();
  ::std::string* release_filetype();
  void set_allocated_filetype(::std::string* filetype);

  // uint32 filesize = 2;
  void clear_filesize();
  static const int kFilesizeFieldNumber = 2;
  ::google::protobuf::uint32 filesize() const;
  void set_filesize(::google::protobuf::uint32 value);

  // uint32 filepathid = 7;
  void clear_filepathid();
  static const int kFilepathidFieldNumber = 7;
  ::google::protobuf::uint32 filepathid() const;
  void set_filepathid(::google::protobuf::uint32 value);

  // uint64 folecreatedate = 5;
  void clear_folecreatedate();
  static const int kFolecreatedateFieldNumber = 5;
  ::google::protobuf::uint64 folecreatedate() const;
  void set_folecreatedate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_1_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_2_;
  ::google::protobuf::internal::ArenaStringPtr filetype_;
  ::google::protobuf::uint32 filesize_;
  ::google::protobuf::uint32 filepathid_;
  ::google::protobuf::uint64 folecreatedate_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileBlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileBlockInfo) */ {
 public:
  FileBlockInfo();
  virtual ~FileBlockInfo();

  FileBlockInfo(const FileBlockInfo& from);

  inline FileBlockInfo& operator=(const FileBlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileBlockInfo& default_instance();

  static inline const FileBlockInfo* internal_default_instance() {
    return reinterpret_cast<const FileBlockInfo*>(
               &_FileBlockInfo_default_instance_);
  }

  void Swap(FileBlockInfo* other);

  // implements Message ----------------------------------------------

  inline FileBlockInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FileBlockInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileBlockInfo& from);
  void MergeFrom(const FileBlockInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileBlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  const ::std::string& file_id() const;
  void set_file_id(const ::std::string& value);
  #if LANG_CXX11
  void set_file_id(::std::string&& value);
  #endif
  void set_file_id(const char* value);
  void set_file_id(const char* value, size_t size);
  ::std::string* mutable_file_id();
  ::std::string* release_file_id();
  void set_allocated_file_id(::std::string* file_id);

  // string file_CRC = 3;
  void clear_file_crc();
  static const int kFileCRCFieldNumber = 3;
  const ::std::string& file_crc() const;
  void set_file_crc(const ::std::string& value);
  #if LANG_CXX11
  void set_file_crc(::std::string&& value);
  #endif
  void set_file_crc(const char* value);
  void set_file_crc(const char* value, size_t size);
  ::std::string* mutable_file_crc();
  ::std::string* release_file_crc();
  void set_allocated_file_crc(::std::string* file_crc);

  // uint32 fileblock_num = 2;
  void clear_fileblock_num();
  static const int kFileblockNumFieldNumber = 2;
  ::google::protobuf::uint32 fileblock_num() const;
  void set_fileblock_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileBlockInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_id_;
  ::google::protobuf::internal::ArenaStringPtr file_crc_;
  ::google::protobuf::uint32 fileblock_num_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class loginIpLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.loginIpLog) */ {
 public:
  loginIpLog();
  virtual ~loginIpLog();

  loginIpLog(const loginIpLog& from);

  inline loginIpLog& operator=(const loginIpLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const loginIpLog& default_instance();

  static inline const loginIpLog* internal_default_instance() {
    return reinterpret_cast<const loginIpLog*>(
               &_loginIpLog_default_instance_);
  }

  void Swap(loginIpLog* other);

  // implements Message ----------------------------------------------

  inline loginIpLog* New() const PROTOBUF_FINAL { return New(NULL); }

  loginIpLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const loginIpLog& from);
  void MergeFrom(const loginIpLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(loginIpLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string user_client_UUID = 4;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 4;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 logindate = 3;
  void clear_logindate();
  static const int kLogindateFieldNumber = 3;
  ::google::protobuf::uint64 logindate() const;
  void set_logindate(::google::protobuf::uint64 value);

  // uint32 loginip = 2;
  void clear_loginip();
  static const int kLoginipFieldNumber = 2;
  ::google::protobuf::uint32 loginip() const;
  void set_loginip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.loginIpLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 logindate_;
  ::google::protobuf::uint32 loginip_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class log : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.log) */ {
 public:
  log();
  virtual ~log();

  log(const log& from);

  inline log& operator=(const log& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const log& default_instance();

  static inline const log* internal_default_instance() {
    return reinterpret_cast<const log*>(
               &_log_default_instance_);
  }

  void Swap(log* other);

  // implements Message ----------------------------------------------

  inline log* New() const PROTOBUF_FINAL { return New(NULL); }

  log* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const log& from);
  void MergeFrom(const log& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(log* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string log_info = 3;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 3;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  #if LANG_CXX11
  void set_log_info(::std::string&& value);
  #endif
  void set_log_info(const char* value);
  void set_log_info(const char* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // bytes log_type = 4;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 4;
  const ::std::string& log_type() const;
  void set_log_type(const ::std::string& value);
  #if LANG_CXX11
  void set_log_type(::std::string&& value);
  #endif
  void set_log_type(const char* value);
  void set_log_type(const void* value, size_t size);
  ::std::string* mutable_log_type();
  ::std::string* release_log_type();
  void set_allocated_log_type(::std::string* log_type);

  // string user_client_UUID = 5;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 5;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 log_date = 2;
  void clear_log_date();
  static const int kLogDateFieldNumber = 2;
  ::google::protobuf::uint64 log_date() const;
  void set_log_date(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.log)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::internal::ArenaStringPtr log_type_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 log_date_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class allfiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.allfiles) */ {
 public:
  allfiles();
  virtual ~allfiles();

  allfiles(const allfiles& from);

  inline allfiles& operator=(const allfiles& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const allfiles& default_instance();

  static inline const allfiles* internal_default_instance() {
    return reinterpret_cast<const allfiles*>(
               &_allfiles_default_instance_);
  }

  void Swap(allfiles* other);

  // implements Message ----------------------------------------------

  inline allfiles* New() const PROTOBUF_FINAL { return New(NULL); }

  allfiles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const allfiles& from);
  void MergeFrom(const allfiles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(allfiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string shared_id = 3;
  void clear_shared_id();
  static const int kSharedIdFieldNumber = 3;
  const ::std::string& shared_id() const;
  void set_shared_id(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_id(::std::string&& value);
  #endif
  void set_shared_id(const char* value);
  void set_shared_id(const char* value, size_t size);
  ::std::string* mutable_shared_id();
  ::std::string* release_shared_id();
  void set_allocated_shared_id(::std::string* shared_id);

  // uint32 files_ip = 2;
  void clear_files_ip();
  static const int kFilesIpFieldNumber = 2;
  ::google::protobuf::uint32 files_ip() const;
  void set_files_ip(::google::protobuf::uint32 value);

  // uint32 filesblock_num = 4;
  void clear_filesblock_num();
  static const int kFilesblockNumFieldNumber = 4;
  ::google::protobuf::uint32 filesblock_num() const;
  void set_filesblock_num(::google::protobuf::uint32 value);

  // uint32 filesblock_start = 5;
  void clear_filesblock_start();
  static const int kFilesblockStartFieldNumber = 5;
  ::google::protobuf::uint32 filesblock_start() const;
  void set_filesblock_start(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.allfiles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr shared_id_;
  ::google::protobuf::uint32 files_ip_;
  ::google::protobuf::uint32 filesblock_num_;
  ::google::protobuf::uint32 filesblock_start_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class shared : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.shared) */ {
 public:
  shared();
  virtual ~shared();

  shared(const shared& from);

  inline shared& operator=(const shared& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const shared& default_instance();

  static inline const shared* internal_default_instance() {
    return reinterpret_cast<const shared*>(
               &_shared_default_instance_);
  }

  void Swap(shared* other);

  // implements Message ----------------------------------------------

  inline shared* New() const PROTOBUF_FINAL { return New(NULL); }

  shared* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const shared& from);
  void MergeFrom(const shared& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(shared* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string shared_url = 1;
  void clear_shared_url();
  static const int kSharedUrlFieldNumber = 1;
  const ::std::string& shared_url() const;
  void set_shared_url(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_url(::std::string&& value);
  #endif
  void set_shared_url(const char* value);
  void set_shared_url(const char* value, size_t size);
  ::std::string* mutable_shared_url();
  ::std::string* release_shared_url();
  void set_allocated_shared_url(::std::string* shared_url);

  // string shared_ps = 2;
  void clear_shared_ps();
  static const int kSharedPsFieldNumber = 2;
  const ::std::string& shared_ps() const;
  void set_shared_ps(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_ps(::std::string&& value);
  #endif
  void set_shared_ps(const char* value);
  void set_shared_ps(const char* value, size_t size);
  ::std::string* mutable_shared_ps();
  ::std::string* release_shared_ps();
  void set_allocated_shared_ps(::std::string* shared_ps);

  // bytes shared_types = 5;
  void clear_shared_types();
  static const int kSharedTypesFieldNumber = 5;
  const ::std::string& shared_types() const;
  void set_shared_types(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_types(::std::string&& value);
  #endif
  void set_shared_types(const char* value);
  void set_shared_types(const void* value, size_t size);
  ::std::string* mutable_shared_types();
  ::std::string* release_shared_types();
  void set_allocated_shared_types(::std::string* shared_types);

  // uint64 shared_time = 3;
  void clear_shared_time();
  static const int kSharedTimeFieldNumber = 3;
  ::google::protobuf::uint64 shared_time() const;
  void set_shared_time(::google::protobuf::uint64 value);

  // uint32 shared_timelenth = 4;
  void clear_shared_timelenth();
  static const int kSharedTimelenthFieldNumber = 4;
  ::google::protobuf::uint32 shared_timelenth() const;
  void set_shared_timelenth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.shared)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr shared_url_;
  ::google::protobuf::internal::ArenaStringPtr shared_ps_;
  ::google::protobuf::internal::ArenaStringPtr shared_types_;
  ::google::protobuf::uint64 shared_time_;
  ::google::protobuf::uint32 shared_timelenth_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class files_small : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.files_small) */ {
 public:
  files_small();
  virtual ~files_small();

  files_small(const files_small& from);

  inline files_small& operator=(const files_small& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const files_small& default_instance();

  static inline const files_small* internal_default_instance() {
    return reinterpret_cast<const files_small*>(
               &_files_small_default_instance_);
  }

  void Swap(files_small* other);

  // implements Message ----------------------------------------------

  inline files_small* New() const PROTOBUF_FINAL { return New(NULL); }

  files_small* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const files_small& from);
  void MergeFrom(const files_small& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(files_small* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_small_name = 1;
  void clear_file_small_name();
  static const int kFileSmallNameFieldNumber = 1;
  const ::std::string& file_small_name() const;
  void set_file_small_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_small_name(::std::string&& value);
  #endif
  void set_file_small_name(const char* value);
  void set_file_small_name(const char* value, size_t size);
  ::std::string* mutable_file_small_name();
  ::std::string* release_file_small_name();
  void set_allocated_file_small_name(::std::string* file_small_name);

  // uint32 file_small_create_time = 2;
  void clear_file_small_create_time();
  static const int kFileSmallCreateTimeFieldNumber = 2;
  ::google::protobuf::uint32 file_small_create_time() const;
  void set_file_small_create_time(::google::protobuf::uint32 value);

  // uint32 file_small_start = 3;
  void clear_file_small_start();
  static const int kFileSmallStartFieldNumber = 3;
  ::google::protobuf::uint32 file_small_start() const;
  void set_file_small_start(::google::protobuf::uint32 value);

  // uint32 file_small_length = 4;
  void clear_file_small_length();
  static const int kFileSmallLengthFieldNumber = 4;
  ::google::protobuf::uint32 file_small_length() const;
  void set_file_small_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.files_small)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_small_name_;
  ::google::protobuf::uint32 file_small_create_time_;
  ::google::protobuf::uint32 file_small_start_;
  ::google::protobuf::uint32 file_small_length_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class files_small_block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.files_small_block) */ {
 public:
  files_small_block();
  virtual ~files_small_block();

  files_small_block(const files_small_block& from);

  inline files_small_block& operator=(const files_small_block& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const files_small_block& default_instance();

  static inline const files_small_block* internal_default_instance() {
    return reinterpret_cast<const files_small_block*>(
               &_files_small_block_default_instance_);
  }

  void Swap(files_small_block* other);

  // implements Message ----------------------------------------------

  inline files_small_block* New() const PROTOBUF_FINAL { return New(NULL); }

  files_small_block* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const files_small_block& from);
  void MergeFrom(const files_small_block& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(files_small_block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes files_small_blocks = 1;
  void clear_files_small_blocks();
  static const int kFilesSmallBlocksFieldNumber = 1;
  const ::std::string& files_small_blocks() const;
  void set_files_small_blocks(const ::std::string& value);
  #if LANG_CXX11
  void set_files_small_blocks(::std::string&& value);
  #endif
  void set_files_small_blocks(const char* value);
  void set_files_small_blocks(const void* value, size_t size);
  ::std::string* mutable_files_small_blocks();
  ::std::string* release_files_small_blocks();
  void set_allocated_files_small_blocks(::std::string* files_small_blocks);

  // @@protoc_insertion_point(class_scope:qiuwanli.files_small_block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr files_small_blocks_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class filespath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.filespath) */ {
 public:
  filespath();
  virtual ~filespath();

  filespath(const filespath& from);

  inline filespath& operator=(const filespath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const filespath& default_instance();

  static inline const filespath* internal_default_instance() {
    return reinterpret_cast<const filespath*>(
               &_filespath_default_instance_);
  }

  void Swap(filespath* other);

  // implements Message ----------------------------------------------

  inline filespath* New() const PROTOBUF_FINAL { return New(NULL); }

  filespath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const filespath& from);
  void MergeFrom(const filespath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(filespath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // bytes pathtypes = 2;
  void clear_pathtypes();
  static const int kPathtypesFieldNumber = 2;
  const ::std::string& pathtypes() const;
  void set_pathtypes(const ::std::string& value);
  #if LANG_CXX11
  void set_pathtypes(::std::string&& value);
  #endif
  void set_pathtypes(const char* value);
  void set_pathtypes(const void* value, size_t size);
  ::std::string* mutable_pathtypes();
  ::std::string* release_pathtypes();
  void set_allocated_pathtypes(::std::string* pathtypes);

  // uint32 pathid = 3;
  void clear_pathid();
  static const int kPathidFieldNumber = 3;
  ::google::protobuf::uint32 pathid() const;
  void set_pathid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.filespath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr pathtypes_;
  ::google::protobuf::uint32 pathid_;
  mutable int _cached_size_;
  friend struct  protobuf_login_5fall_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// user

// string user_id = 1;
inline void user::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_id)
  return user_id_.GetNoArena();
}
inline void user::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_id)
}
#if LANG_CXX11
inline void user::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_id)
}
#endif
inline void user::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_id)
}
inline void user::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_id)
}
inline ::std::string* user::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_id)
}

// string user_name = 2;
inline void user::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_name)
  return user_name_.GetNoArena();
}
inline void user::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_name)
}
#if LANG_CXX11
inline void user::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_name)
}
#endif
inline void user::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_name)
}
inline void user::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_name)
}
inline ::std::string* user::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_name)
}

// string user_password_md5 = 3;
inline void user::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_password_md5)
  return user_password_md5_.GetNoArena();
}
inline void user::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_password_md5)
}
#if LANG_CXX11
inline void user::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_password_md5)
}
#endif
inline void user::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_password_md5)
}
inline void user::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_password_md5)
}
inline ::std::string* user::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_password_md5)
}

// string user_client_UUID = 4;
inline void user::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void user::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_client_UUID)
}
#if LANG_CXX11
inline void user::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_client_UUID)
}
#endif
inline void user::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_client_UUID)
}
inline void user::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_client_UUID)
}
inline ::std::string* user::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_client_UUID)
}

// string login_code = 5;
inline void user::clear_login_code() {
  login_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user::login_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.login_code)
  return login_code_.GetNoArena();
}
inline void user::set_login_code(const ::std::string& value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.login_code)
}
#if LANG_CXX11
inline void user::set_login_code(::std::string&& value) {
  
  login_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.login_code)
}
#endif
inline void user::set_login_code(const char* value) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.login_code)
}
inline void user::set_login_code(const char* value, size_t size) {
  
  login_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.login_code)
}
inline ::std::string* user::mutable_login_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.login_code)
  return login_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user::release_login_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.login_code)
  
  return login_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user::set_allocated_login_code(::std::string* login_code) {
  if (login_code != NULL) {
    
  } else {
    
  }
  login_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.login_code)
}

// bytes user_type = 6;
inline void user::clear_user_type() {
  user_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& user::user_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.user.user_type)
  return user_type_.GetNoArena();
}
inline void user::set_user_type(const ::std::string& value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.user.user_type)
}
#if LANG_CXX11
inline void user::set_user_type(::std::string&& value) {
  
  user_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.user.user_type)
}
#endif
inline void user::set_user_type(const char* value) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.user.user_type)
}
inline void user::set_user_type(const void* value, size_t size) {
  
  user_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.user.user_type)
}
inline ::std::string* user::mutable_user_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.user.user_type)
  return user_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* user::release_user_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.user.user_type)
  
  return user_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void user::set_allocated_user_type(::std::string* user_type) {
  if (user_type != NULL) {
    
  } else {
    
  }
  user_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.user.user_type)
}

// -------------------------------------------------------------------

// realuser

// string user_id = 1;
inline void realuser::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_id)
  return user_id_.GetNoArena();
}
inline void realuser::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_id)
}
#if LANG_CXX11
inline void realuser::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_id)
}
#endif
inline void realuser::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_id)
}
inline void realuser::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_id)
}
inline ::std::string* realuser::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_id)
}

// string user_name_real = 2;
inline void realuser::clear_user_name_real() {
  user_name_real_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_name_real() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_name_real)
  return user_name_real_.GetNoArena();
}
inline void realuser::set_user_name_real(const ::std::string& value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_name_real)
}
#if LANG_CXX11
inline void realuser::set_user_name_real(::std::string&& value) {
  
  user_name_real_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_name_real)
}
#endif
inline void realuser::set_user_name_real(const char* value) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_name_real)
}
inline void realuser::set_user_name_real(const char* value, size_t size) {
  
  user_name_real_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_name_real)
}
inline ::std::string* realuser::mutable_user_name_real() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_name_real)
  return user_name_real_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_name_real() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_name_real)
  
  return user_name_real_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_name_real(::std::string* user_name_real) {
  if (user_name_real != NULL) {
    
  } else {
    
  }
  user_name_real_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name_real);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_name_real)
}

// string user_idcard = 3;
inline void realuser::clear_user_idcard() {
  user_idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_idcard() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_idcard)
  return user_idcard_.GetNoArena();
}
inline void realuser::set_user_idcard(const ::std::string& value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_idcard)
}
#if LANG_CXX11
inline void realuser::set_user_idcard(::std::string&& value) {
  
  user_idcard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_idcard)
}
#endif
inline void realuser::set_user_idcard(const char* value) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_idcard)
}
inline void realuser::set_user_idcard(const char* value, size_t size) {
  
  user_idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_idcard)
}
inline ::std::string* realuser::mutable_user_idcard() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_idcard)
  return user_idcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_idcard() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_idcard)
  
  return user_idcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_idcard(::std::string* user_idcard) {
  if (user_idcard != NULL) {
    
  } else {
    
  }
  user_idcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_idcard);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_idcard)
}

// string user_live_address = 4;
inline void realuser::clear_user_live_address() {
  user_live_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_live_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_live_address)
  return user_live_address_.GetNoArena();
}
inline void realuser::set_user_live_address(const ::std::string& value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_live_address)
}
#if LANG_CXX11
inline void realuser::set_user_live_address(::std::string&& value) {
  
  user_live_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_live_address)
}
#endif
inline void realuser::set_user_live_address(const char* value) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_live_address)
}
inline void realuser::set_user_live_address(const char* value, size_t size) {
  
  user_live_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_live_address)
}
inline ::std::string* realuser::mutable_user_live_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_live_address)
  return user_live_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_live_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_live_address)
  
  return user_live_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_live_address(::std::string* user_live_address) {
  if (user_live_address != NULL) {
    
  } else {
    
  }
  user_live_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_live_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_live_address)
}

// string user_phone = 5;
inline void realuser::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_phone)
  return user_phone_.GetNoArena();
}
inline void realuser::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_phone)
}
#if LANG_CXX11
inline void realuser::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_phone)
}
#endif
inline void realuser::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_phone)
}
inline void realuser::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_phone)
}
inline ::std::string* realuser::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_phone)
}

// string user_qq = 6;
inline void realuser::clear_user_qq() {
  user_qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_qq() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_qq)
  return user_qq_.GetNoArena();
}
inline void realuser::set_user_qq(const ::std::string& value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_qq)
}
#if LANG_CXX11
inline void realuser::set_user_qq(::std::string&& value) {
  
  user_qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_qq)
}
#endif
inline void realuser::set_user_qq(const char* value) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_qq)
}
inline void realuser::set_user_qq(const char* value, size_t size) {
  
  user_qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_qq)
}
inline ::std::string* realuser::mutable_user_qq() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_qq)
  return user_qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_qq() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_qq)
  
  return user_qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_qq(::std::string* user_qq) {
  if (user_qq != NULL) {
    
  } else {
    
  }
  user_qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_qq);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_qq)
}

// string user_mirchat = 7;
inline void realuser::clear_user_mirchat() {
  user_mirchat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_mirchat() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_mirchat)
  return user_mirchat_.GetNoArena();
}
inline void realuser::set_user_mirchat(const ::std::string& value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_mirchat)
}
#if LANG_CXX11
inline void realuser::set_user_mirchat(::std::string&& value) {
  
  user_mirchat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_mirchat)
}
#endif
inline void realuser::set_user_mirchat(const char* value) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_mirchat)
}
inline void realuser::set_user_mirchat(const char* value, size_t size) {
  
  user_mirchat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_mirchat)
}
inline ::std::string* realuser::mutable_user_mirchat() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_mirchat)
  return user_mirchat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_mirchat() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_mirchat)
  
  return user_mirchat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_mirchat(::std::string* user_mirchat) {
  if (user_mirchat != NULL) {
    
  } else {
    
  }
  user_mirchat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_mirchat);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_mirchat)
}

// string user_email = 8;
inline void realuser::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_email() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_email)
  return user_email_.GetNoArena();
}
inline void realuser::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_email)
}
#if LANG_CXX11
inline void realuser::set_user_email(::std::string&& value) {
  
  user_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_email)
}
#endif
inline void realuser::set_user_email(const char* value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_email)
}
inline void realuser::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_email)
}
inline ::std::string* realuser::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_email() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_email)
}

// string user_bri = 9;
inline void realuser::clear_user_bri() {
  user_bri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_bri() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_bri)
  return user_bri_.GetNoArena();
}
inline void realuser::set_user_bri(const ::std::string& value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_bri)
}
#if LANG_CXX11
inline void realuser::set_user_bri(::std::string&& value) {
  
  user_bri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_bri)
}
#endif
inline void realuser::set_user_bri(const char* value) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_bri)
}
inline void realuser::set_user_bri(const char* value, size_t size) {
  
  user_bri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_bri)
}
inline ::std::string* realuser::mutable_user_bri() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_bri)
  return user_bri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_bri() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_bri)
  
  return user_bri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_bri(::std::string* user_bri) {
  if (user_bri != NULL) {
    
  } else {
    
  }
  user_bri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_bri);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_bri)
}

// string user_address = 10;
inline void realuser::clear_user_address() {
  user_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& realuser::user_address() const {
  // @@protoc_insertion_point(field_get:qiuwanli.realuser.user_address)
  return user_address_.GetNoArena();
}
inline void realuser::set_user_address(const ::std::string& value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.realuser.user_address)
}
#if LANG_CXX11
inline void realuser::set_user_address(::std::string&& value) {
  
  user_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.realuser.user_address)
}
#endif
inline void realuser::set_user_address(const char* value) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.realuser.user_address)
}
inline void realuser::set_user_address(const char* value, size_t size) {
  
  user_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.realuser.user_address)
}
inline ::std::string* realuser::mutable_user_address() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.realuser.user_address)
  return user_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* realuser::release_user_address() {
  // @@protoc_insertion_point(field_release:qiuwanli.realuser.user_address)
  
  return user_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void realuser::set_allocated_user_address(::std::string* user_address) {
  if (user_address != NULL) {
    
  } else {
    
  }
  user_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_address);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.realuser.user_address)
}

// -------------------------------------------------------------------

// userreg

// string user_name = 1;
inline void userreg::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::user_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_name)
  return user_name_.GetNoArena();
}
inline void userreg::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_name)
}
#if LANG_CXX11
inline void userreg::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_name)
}
#endif
inline void userreg::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_name)
}
inline void userreg::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_name)
}
inline ::std::string* userreg::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_user_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_name)
}

// string user_password_md5 = 2;
inline void userreg::clear_user_password_md5() {
  user_password_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::user_password_md5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.GetNoArena();
}
inline void userreg::set_user_password_md5(const ::std::string& value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_password_md5)
}
#if LANG_CXX11
inline void userreg::set_user_password_md5(::std::string&& value) {
  
  user_password_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_password_md5)
}
#endif
inline void userreg::set_user_password_md5(const char* value) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_password_md5)
}
inline void userreg::set_user_password_md5(const char* value, size_t size) {
  
  user_password_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_password_md5)
}
inline ::std::string* userreg::mutable_user_password_md5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_password_md5)
  return user_password_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_user_password_md5() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_password_md5)
  
  return user_password_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_user_password_md5(::std::string* user_password_md5) {
  if (user_password_md5 != NULL) {
    
  } else {
    
  }
  user_password_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_password_md5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_password_md5)
}

// string user_phone = 3;
inline void userreg::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::user_phone() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.user_phone)
  return user_phone_.GetNoArena();
}
inline void userreg::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.user_phone)
}
#if LANG_CXX11
inline void userreg::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.user_phone)
}
#endif
inline void userreg::set_user_phone(const char* value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.user_phone)
}
inline void userreg::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.user_phone)
}
inline ::std::string* userreg::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_user_phone() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.user_phone)
}

// string reg_code = 4;
inline void userreg::clear_reg_code() {
  reg_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& userreg::reg_code() const {
  // @@protoc_insertion_point(field_get:qiuwanli.userreg.reg_code)
  return reg_code_.GetNoArena();
}
inline void userreg::set_reg_code(const ::std::string& value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.userreg.reg_code)
}
#if LANG_CXX11
inline void userreg::set_reg_code(::std::string&& value) {
  
  reg_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.userreg.reg_code)
}
#endif
inline void userreg::set_reg_code(const char* value) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.userreg.reg_code)
}
inline void userreg::set_reg_code(const char* value, size_t size) {
  
  reg_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.userreg.reg_code)
}
inline ::std::string* userreg::mutable_reg_code() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.userreg.reg_code)
  return reg_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* userreg::release_reg_code() {
  // @@protoc_insertion_point(field_release:qiuwanli.userreg.reg_code)
  
  return reg_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void userreg::set_allocated_reg_code(::std::string* reg_code) {
  if (reg_code != NULL) {
    
  } else {
    
  }
  reg_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reg_code);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.userreg.reg_code)
}

// -------------------------------------------------------------------

// FileInfo

// string filename = 1;
inline void FileInfo::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filename)
  return filename_.GetNoArena();
}
inline void FileInfo::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filename)
}
#if LANG_CXX11
inline void FileInfo::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filename)
}
#endif
inline void FileInfo::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filename)
}
inline void FileInfo::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filename)
}
inline ::std::string* FileInfo::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filename)
}

// uint32 filesize = 2;
inline void FileInfo::clear_filesize() {
  filesize_ = 0u;
}
inline ::google::protobuf::uint32 FileInfo::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filesize)
  return filesize_;
}
inline void FileInfo::set_filesize(::google::protobuf::uint32 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filesize)
}

// string filemd5_1 = 3;
inline void FileInfo::clear_filemd5_1() {
  filemd5_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::filemd5_1() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.GetNoArena();
}
inline void FileInfo::set_filemd5_1(const ::std::string& value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_1)
}
#if LANG_CXX11
inline void FileInfo::set_filemd5_1(::std::string&& value) {
  
  filemd5_1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_1)
}
#endif
inline void FileInfo::set_filemd5_1(const char* value) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_1)
}
inline void FileInfo::set_filemd5_1(const char* value, size_t size) {
  
  filemd5_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_1)
}
inline ::std::string* FileInfo::mutable_filemd5_1() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_1)
  return filemd5_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_filemd5_1() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_1)
  
  return filemd5_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_filemd5_1(::std::string* filemd5_1) {
  if (filemd5_1 != NULL) {
    
  } else {
    
  }
  filemd5_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_1);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_1)
}

// string filemd5_2 = 4;
inline void FileInfo::clear_filemd5_2() {
  filemd5_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::filemd5_2() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.GetNoArena();
}
inline void FileInfo::set_filemd5_2(const ::std::string& value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filemd5_2)
}
#if LANG_CXX11
inline void FileInfo::set_filemd5_2(::std::string&& value) {
  
  filemd5_2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filemd5_2)
}
#endif
inline void FileInfo::set_filemd5_2(const char* value) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filemd5_2)
}
inline void FileInfo::set_filemd5_2(const char* value, size_t size) {
  
  filemd5_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filemd5_2)
}
inline ::std::string* FileInfo::mutable_filemd5_2() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filemd5_2)
  return filemd5_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_filemd5_2() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filemd5_2)
  
  return filemd5_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_filemd5_2(::std::string* filemd5_2) {
  if (filemd5_2 != NULL) {
    
  } else {
    
  }
  filemd5_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5_2);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filemd5_2)
}

// uint64 folecreatedate = 5;
inline void FileInfo::clear_folecreatedate() {
  folecreatedate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileInfo::folecreatedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.folecreatedate)
  return folecreatedate_;
}
inline void FileInfo::set_folecreatedate(::google::protobuf::uint64 value) {
  
  folecreatedate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.folecreatedate)
}

// bytes filetype = 6;
inline void FileInfo::clear_filetype() {
  filetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfo::filetype() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filetype)
  return filetype_.GetNoArena();
}
inline void FileInfo::set_filetype(const ::std::string& value) {
  
  filetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filetype)
}
#if LANG_CXX11
inline void FileInfo::set_filetype(::std::string&& value) {
  
  filetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfo.filetype)
}
#endif
inline void FileInfo::set_filetype(const char* value) {
  
  filetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfo.filetype)
}
inline void FileInfo::set_filetype(const void* value, size_t size) {
  
  filetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfo.filetype)
}
inline ::std::string* FileInfo::mutable_filetype() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfo.filetype)
  return filetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfo::release_filetype() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfo.filetype)
  
  return filetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfo::set_allocated_filetype(::std::string* filetype) {
  if (filetype != NULL) {
    
  } else {
    
  }
  filetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filetype);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfo.filetype)
}

// uint32 filepathid = 7;
inline void FileInfo::clear_filepathid() {
  filepathid_ = 0u;
}
inline ::google::protobuf::uint32 FileInfo::filepathid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfo.filepathid)
  return filepathid_;
}
inline void FileInfo::set_filepathid(::google::protobuf::uint32 value) {
  
  filepathid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfo.filepathid)
}

// -------------------------------------------------------------------

// FileBlockInfo

// string file_id = 1;
inline void FileBlockInfo::clear_file_id() {
  file_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileBlockInfo::file_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_id)
  return file_id_.GetNoArena();
}
inline void FileBlockInfo::set_file_id(const ::std::string& value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_id)
}
#if LANG_CXX11
inline void FileBlockInfo::set_file_id(::std::string&& value) {
  
  file_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_id)
}
#endif
inline void FileBlockInfo::set_file_id(const char* value) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_id)
}
inline void FileBlockInfo::set_file_id(const char* value, size_t size) {
  
  file_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_id)
}
inline ::std::string* FileBlockInfo::mutable_file_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_id)
  return file_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileBlockInfo::release_file_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_id)
  
  return file_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileBlockInfo::set_allocated_file_id(::std::string* file_id) {
  if (file_id != NULL) {
    
  } else {
    
  }
  file_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_id)
}

// uint32 fileblock_num = 2;
inline void FileBlockInfo::clear_fileblock_num() {
  fileblock_num_ = 0u;
}
inline ::google::protobuf::uint32 FileBlockInfo::fileblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.fileblock_num)
  return fileblock_num_;
}
inline void FileBlockInfo::set_fileblock_num(::google::protobuf::uint32 value) {
  
  fileblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.fileblock_num)
}

// string file_CRC = 3;
inline void FileBlockInfo::clear_file_crc() {
  file_crc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileBlockInfo::file_crc() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.GetNoArena();
}
inline void FileBlockInfo::set_file_crc(const ::std::string& value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileBlockInfo.file_CRC)
}
#if LANG_CXX11
inline void FileBlockInfo::set_file_crc(::std::string&& value) {
  
  file_crc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileBlockInfo.file_CRC)
}
#endif
inline void FileBlockInfo::set_file_crc(const char* value) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileBlockInfo.file_CRC)
}
inline void FileBlockInfo::set_file_crc(const char* value, size_t size) {
  
  file_crc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileBlockInfo.file_CRC)
}
inline ::std::string* FileBlockInfo::mutable_file_crc() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileBlockInfo.file_CRC)
  return file_crc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileBlockInfo::release_file_crc() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileBlockInfo.file_CRC)
  
  return file_crc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileBlockInfo::set_allocated_file_crc(::std::string* file_crc) {
  if (file_crc != NULL) {
    
  } else {
    
  }
  file_crc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_crc);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileBlockInfo.file_CRC)
}

// -------------------------------------------------------------------

// loginIpLog

// string user_id = 1;
inline void loginIpLog::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginIpLog::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.user_id)
  return user_id_.GetNoArena();
}
inline void loginIpLog::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.user_id)
}
#if LANG_CXX11
inline void loginIpLog::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.loginIpLog.user_id)
}
#endif
inline void loginIpLog::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.loginIpLog.user_id)
}
inline void loginIpLog::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.loginIpLog.user_id)
}
inline ::std::string* loginIpLog::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.loginIpLog.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginIpLog::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.loginIpLog.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginIpLog::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.loginIpLog.user_id)
}

// uint32 loginip = 2;
inline void loginIpLog::clear_loginip() {
  loginip_ = 0u;
}
inline ::google::protobuf::uint32 loginIpLog::loginip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.loginip)
  return loginip_;
}
inline void loginIpLog::set_loginip(::google::protobuf::uint32 value) {
  
  loginip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.loginip)
}

// uint64 logindate = 3;
inline void loginIpLog::clear_logindate() {
  logindate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 loginIpLog::logindate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.logindate)
  return logindate_;
}
inline void loginIpLog::set_logindate(::google::protobuf::uint64 value) {
  
  logindate_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.logindate)
}

// string user_client_UUID = 4;
inline void loginIpLog::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& loginIpLog::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.loginIpLog.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void loginIpLog::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.loginIpLog.user_client_UUID)
}
#if LANG_CXX11
inline void loginIpLog::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.loginIpLog.user_client_UUID)
}
#endif
inline void loginIpLog::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.loginIpLog.user_client_UUID)
}
inline void loginIpLog::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.loginIpLog.user_client_UUID)
}
inline ::std::string* loginIpLog::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.loginIpLog.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* loginIpLog::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.loginIpLog.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void loginIpLog::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.loginIpLog.user_client_UUID)
}

// -------------------------------------------------------------------

// log

// string user_id = 1;
inline void log::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& log::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.user_id)
  return user_id_.GetNoArena();
}
inline void log::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.user_id)
}
#if LANG_CXX11
inline void log::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.user_id)
}
#endif
inline void log::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.user_id)
}
inline void log::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.user_id)
}
inline ::std::string* log::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* log::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void log::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.user_id)
}

// uint64 log_date = 2;
inline void log::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 log::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.log_date)
  return log_date_;
}
inline void log::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.log.log_date)
}

// string log_info = 3;
inline void log::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& log::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.log_info)
  return log_info_.GetNoArena();
}
inline void log::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.log_info)
}
#if LANG_CXX11
inline void log::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.log_info)
}
#endif
inline void log::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.log_info)
}
inline void log::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.log_info)
}
inline ::std::string* log::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* log::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void log::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.log_info)
}

// bytes log_type = 4;
inline void log::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& log::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.log_type)
  return log_type_.GetNoArena();
}
inline void log::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.log_type)
}
#if LANG_CXX11
inline void log::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.log_type)
}
#endif
inline void log::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.log_type)
}
inline void log::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.log_type)
}
inline ::std::string* log::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* log::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void log::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.log_type)
}

// string user_client_UUID = 5;
inline void log::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& log::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.log.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void log::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.log.user_client_UUID)
}
#if LANG_CXX11
inline void log::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.log.user_client_UUID)
}
#endif
inline void log::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.log.user_client_UUID)
}
inline void log::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.log.user_client_UUID)
}
inline ::std::string* log::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.log.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* log::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.log.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void log::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.log.user_client_UUID)
}

// -------------------------------------------------------------------

// allfiles

// string user_id = 1;
inline void allfiles::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& allfiles::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.user_id)
  return user_id_.GetNoArena();
}
inline void allfiles::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.user_id)
}
#if LANG_CXX11
inline void allfiles::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.user_id)
}
#endif
inline void allfiles::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.user_id)
}
inline void allfiles::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.user_id)
}
inline ::std::string* allfiles::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* allfiles::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void allfiles::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.user_id)
}

// uint32 files_ip = 2;
inline void allfiles::clear_files_ip() {
  files_ip_ = 0u;
}
inline ::google::protobuf::uint32 allfiles::files_ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.files_ip)
  return files_ip_;
}
inline void allfiles::set_files_ip(::google::protobuf::uint32 value) {
  
  files_ip_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.files_ip)
}

// string shared_id = 3;
inline void allfiles::clear_shared_id() {
  shared_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& allfiles::shared_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.shared_id)
  return shared_id_.GetNoArena();
}
inline void allfiles::set_shared_id(const ::std::string& value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.shared_id)
}
#if LANG_CXX11
inline void allfiles::set_shared_id(::std::string&& value) {
  
  shared_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.allfiles.shared_id)
}
#endif
inline void allfiles::set_shared_id(const char* value) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.allfiles.shared_id)
}
inline void allfiles::set_shared_id(const char* value, size_t size) {
  
  shared_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.allfiles.shared_id)
}
inline ::std::string* allfiles::mutable_shared_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.allfiles.shared_id)
  return shared_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* allfiles::release_shared_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.allfiles.shared_id)
  
  return shared_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void allfiles::set_allocated_shared_id(::std::string* shared_id) {
  if (shared_id != NULL) {
    
  } else {
    
  }
  shared_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.allfiles.shared_id)
}

// uint32 filesblock_num = 4;
inline void allfiles::clear_filesblock_num() {
  filesblock_num_ = 0u;
}
inline ::google::protobuf::uint32 allfiles::filesblock_num() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_num)
  return filesblock_num_;
}
inline void allfiles::set_filesblock_num(::google::protobuf::uint32 value) {
  
  filesblock_num_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_num)
}

// uint32 filesblock_start = 5;
inline void allfiles::clear_filesblock_start() {
  filesblock_start_ = 0u;
}
inline ::google::protobuf::uint32 allfiles::filesblock_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.allfiles.filesblock_start)
  return filesblock_start_;
}
inline void allfiles::set_filesblock_start(::google::protobuf::uint32 value) {
  
  filesblock_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.allfiles.filesblock_start)
}

// -------------------------------------------------------------------

// shared

// string shared_url = 1;
inline void shared::clear_shared_url() {
  shared_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& shared::shared_url() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_url)
  return shared_url_.GetNoArena();
}
inline void shared::set_shared_url(const ::std::string& value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_url)
}
#if LANG_CXX11
inline void shared::set_shared_url(::std::string&& value) {
  
  shared_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.shared.shared_url)
}
#endif
inline void shared::set_shared_url(const char* value) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.shared.shared_url)
}
inline void shared::set_shared_url(const char* value, size_t size) {
  
  shared_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.shared.shared_url)
}
inline ::std::string* shared::mutable_shared_url() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.shared.shared_url)
  return shared_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* shared::release_shared_url() {
  // @@protoc_insertion_point(field_release:qiuwanli.shared.shared_url)
  
  return shared_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void shared::set_allocated_shared_url(::std::string* shared_url) {
  if (shared_url != NULL) {
    
  } else {
    
  }
  shared_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_url);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.shared.shared_url)
}

// string shared_ps = 2;
inline void shared::clear_shared_ps() {
  shared_ps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& shared::shared_ps() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_ps)
  return shared_ps_.GetNoArena();
}
inline void shared::set_shared_ps(const ::std::string& value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_ps)
}
#if LANG_CXX11
inline void shared::set_shared_ps(::std::string&& value) {
  
  shared_ps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.shared.shared_ps)
}
#endif
inline void shared::set_shared_ps(const char* value) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.shared.shared_ps)
}
inline void shared::set_shared_ps(const char* value, size_t size) {
  
  shared_ps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.shared.shared_ps)
}
inline ::std::string* shared::mutable_shared_ps() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.shared.shared_ps)
  return shared_ps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* shared::release_shared_ps() {
  // @@protoc_insertion_point(field_release:qiuwanli.shared.shared_ps)
  
  return shared_ps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void shared::set_allocated_shared_ps(::std::string* shared_ps) {
  if (shared_ps != NULL) {
    
  } else {
    
  }
  shared_ps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_ps);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.shared.shared_ps)
}

// uint64 shared_time = 3;
inline void shared::clear_shared_time() {
  shared_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 shared::shared_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_time)
  return shared_time_;
}
inline void shared::set_shared_time(::google::protobuf::uint64 value) {
  
  shared_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_time)
}

// uint32 shared_timelenth = 4;
inline void shared::clear_shared_timelenth() {
  shared_timelenth_ = 0u;
}
inline ::google::protobuf::uint32 shared::shared_timelenth() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_timelenth)
  return shared_timelenth_;
}
inline void shared::set_shared_timelenth(::google::protobuf::uint32 value) {
  
  shared_timelenth_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_timelenth)
}

// bytes shared_types = 5;
inline void shared::clear_shared_types() {
  shared_types_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& shared::shared_types() const {
  // @@protoc_insertion_point(field_get:qiuwanli.shared.shared_types)
  return shared_types_.GetNoArena();
}
inline void shared::set_shared_types(const ::std::string& value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.shared.shared_types)
}
#if LANG_CXX11
inline void shared::set_shared_types(::std::string&& value) {
  
  shared_types_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.shared.shared_types)
}
#endif
inline void shared::set_shared_types(const char* value) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.shared.shared_types)
}
inline void shared::set_shared_types(const void* value, size_t size) {
  
  shared_types_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.shared.shared_types)
}
inline ::std::string* shared::mutable_shared_types() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.shared.shared_types)
  return shared_types_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* shared::release_shared_types() {
  // @@protoc_insertion_point(field_release:qiuwanli.shared.shared_types)
  
  return shared_types_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void shared::set_allocated_shared_types(::std::string* shared_types) {
  if (shared_types != NULL) {
    
  } else {
    
  }
  shared_types_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_types);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.shared.shared_types)
}

// -------------------------------------------------------------------

// files_small

// string file_small_name = 1;
inline void files_small::clear_file_small_name() {
  file_small_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& files_small::file_small_name() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_name)
  return file_small_name_.GetNoArena();
}
inline void files_small::set_file_small_name(const ::std::string& value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_name)
}
#if LANG_CXX11
inline void files_small::set_file_small_name(::std::string&& value) {
  
  file_small_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small.file_small_name)
}
#endif
inline void files_small::set_file_small_name(const char* value) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small.file_small_name)
}
inline void files_small::set_file_small_name(const char* value, size_t size) {
  
  file_small_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small.file_small_name)
}
inline ::std::string* files_small::mutable_file_small_name() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small.file_small_name)
  return file_small_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* files_small::release_file_small_name() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small.file_small_name)
  
  return file_small_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void files_small::set_allocated_file_small_name(::std::string* file_small_name) {
  if (file_small_name != NULL) {
    
  } else {
    
  }
  file_small_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_small_name);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small.file_small_name)
}

// uint32 file_small_create_time = 2;
inline void files_small::clear_file_small_create_time() {
  file_small_create_time_ = 0u;
}
inline ::google::protobuf::uint32 files_small::file_small_create_time() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_create_time)
  return file_small_create_time_;
}
inline void files_small::set_file_small_create_time(::google::protobuf::uint32 value) {
  
  file_small_create_time_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_create_time)
}

// uint32 file_small_start = 3;
inline void files_small::clear_file_small_start() {
  file_small_start_ = 0u;
}
inline ::google::protobuf::uint32 files_small::file_small_start() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_start)
  return file_small_start_;
}
inline void files_small::set_file_small_start(::google::protobuf::uint32 value) {
  
  file_small_start_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_start)
}

// uint32 file_small_length = 4;
inline void files_small::clear_file_small_length() {
  file_small_length_ = 0u;
}
inline ::google::protobuf::uint32 files_small::file_small_length() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small.file_small_length)
  return file_small_length_;
}
inline void files_small::set_file_small_length(::google::protobuf::uint32 value) {
  
  file_small_length_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.files_small.file_small_length)
}

// -------------------------------------------------------------------

// files_small_block

// bytes files_small_blocks = 1;
inline void files_small_block::clear_files_small_blocks() {
  files_small_blocks_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& files_small_block::files_small_blocks() const {
  // @@protoc_insertion_point(field_get:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.GetNoArena();
}
inline void files_small_block::set_files_small_blocks(const ::std::string& value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.files_small_block.files_small_blocks)
}
#if LANG_CXX11
inline void files_small_block::set_files_small_blocks(::std::string&& value) {
  
  files_small_blocks_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.files_small_block.files_small_blocks)
}
#endif
inline void files_small_block::set_files_small_blocks(const char* value) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.files_small_block.files_small_blocks)
}
inline void files_small_block::set_files_small_blocks(const void* value, size_t size) {
  
  files_small_blocks_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.files_small_block.files_small_blocks)
}
inline ::std::string* files_small_block::mutable_files_small_blocks() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.files_small_block.files_small_blocks)
  return files_small_blocks_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* files_small_block::release_files_small_blocks() {
  // @@protoc_insertion_point(field_release:qiuwanli.files_small_block.files_small_blocks)
  
  return files_small_blocks_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void files_small_block::set_allocated_files_small_blocks(::std::string* files_small_blocks) {
  if (files_small_blocks != NULL) {
    
  } else {
    
  }
  files_small_blocks_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), files_small_blocks);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.files_small_block.files_small_blocks)
}

// -------------------------------------------------------------------

// filespath

// string path = 1;
inline void filespath::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& filespath::path() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filespath.path)
  return path_.GetNoArena();
}
inline void filespath::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filespath.path)
}
#if LANG_CXX11
inline void filespath::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filespath.path)
}
#endif
inline void filespath::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filespath.path)
}
inline void filespath::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filespath.path)
}
inline ::std::string* filespath::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filespath.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* filespath::release_path() {
  // @@protoc_insertion_point(field_release:qiuwanli.filespath.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void filespath::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filespath.path)
}

// bytes pathtypes = 2;
inline void filespath::clear_pathtypes() {
  pathtypes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& filespath::pathtypes() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filespath.pathtypes)
  return pathtypes_.GetNoArena();
}
inline void filespath::set_pathtypes(const ::std::string& value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.filespath.pathtypes)
}
#if LANG_CXX11
inline void filespath::set_pathtypes(::std::string&& value) {
  
  pathtypes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.filespath.pathtypes)
}
#endif
inline void filespath::set_pathtypes(const char* value) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.filespath.pathtypes)
}
inline void filespath::set_pathtypes(const void* value, size_t size) {
  
  pathtypes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.filespath.pathtypes)
}
inline ::std::string* filespath::mutable_pathtypes() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.filespath.pathtypes)
  return pathtypes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* filespath::release_pathtypes() {
  // @@protoc_insertion_point(field_release:qiuwanli.filespath.pathtypes)
  
  return pathtypes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void filespath::set_allocated_pathtypes(::std::string* pathtypes) {
  if (pathtypes != NULL) {
    
  } else {
    
  }
  pathtypes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathtypes);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.filespath.pathtypes)
}

// uint32 pathid = 3;
inline void filespath::clear_pathid() {
  pathid_ = 0u;
}
inline ::google::protobuf::uint32 filespath::pathid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.filespath.pathid)
  return pathid_;
}
inline void filespath::set_pathid(::google::protobuf::uint32 value) {
  
  pathid_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.filespath.pathid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_login_5fall_2eproto__INCLUDED
